{"ast":null,"code":"'use strict';\n\nconst format = require('./format');\n\nconst {\n  MESSAGE\n} = require('triple-beam');\n\nconst jsonStringify = require('fast-safe-stringify');\n/*\r\n * function replacer (key, value)\r\n * Handles proper stringification of Buffer and bigint output.\r\n */\n\n\nfunction replacer(key, value) {\n  if (value instanceof Buffer) return value.toString('base64'); // eslint-disable-next-line valid-typeof\n\n  if (typeof value === 'bigint') return value.toString();\n  return value;\n}\n/*\r\n * function json (info)\r\n * Returns a new instance of the JSON format that turns a log `info`\r\n * object into pure JSON. This was previously exposed as { json: true }\r\n * to transports in `winston < 3.0.0`.\r\n */\n\n\nmodule.exports = format(function (info) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  info[MESSAGE] = (opts.stable ? jsonStringify.stableStringify : jsonStringify)(info, opts.replacer || replacer, opts.space);\n  return info;\n});","map":{"version":3,"sources":["C:/Users/nomif/Desktop/Programming/Blockchain/ethereum-gasless-transactions/OpenGSN/node_modules/logform/json.js"],"names":["format","require","MESSAGE","jsonStringify","replacer","key","value","Buffer","toString","module","exports","info","opts","stable","stableStringify","space"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,qBAAD,CAA7B;AAEA;AACA;AACA;AACA;;;AACA,SAASG,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5B,MAAIA,KAAK,YAAYC,MAArB,EACE,OAAOD,KAAK,CAACE,QAAN,CAAe,QAAf,CAAP,CAF0B,CAG5B;;AACA,MAAI,OAAOF,KAAP,KAAiB,QAArB,EACE,OAAOA,KAAK,CAACE,QAAN,EAAP;AACF,SAAOF,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiBV,MAAM,CAAC,UAACW,IAAD,EAAqB;AAAA,MAAdC,IAAc,uEAAP,EAAO;AAC3CD,EAAAA,IAAI,CAACT,OAAD,CAAJ,GAAgB,CAACU,IAAI,CAACC,MAAL,GAAcV,aAAa,CAACW,eAA5B,GACbX,aADY,EACGQ,IADH,EACSC,IAAI,CAACR,QAAL,IAAiBA,QAD1B,EACoCQ,IAAI,CAACG,KADzC,CAAhB;AAEA,SAAOJ,IAAP;AACD,CAJsB,CAAvB","sourcesContent":["'use strict';\r\n\r\nconst format = require('./format');\r\nconst { MESSAGE } = require('triple-beam');\r\nconst jsonStringify = require('fast-safe-stringify');\r\n\r\n/*\r\n * function replacer (key, value)\r\n * Handles proper stringification of Buffer and bigint output.\r\n */\r\nfunction replacer(key, value) {\r\n  if (value instanceof Buffer)\r\n    return value.toString('base64');\r\n  // eslint-disable-next-line valid-typeof\r\n  if (typeof value === 'bigint')\r\n    return value.toString();\r\n  return value;\r\n}\r\n\r\n/*\r\n * function json (info)\r\n * Returns a new instance of the JSON format that turns a log `info`\r\n * object into pure JSON. This was previously exposed as { json: true }\r\n * to transports in `winston < 3.0.0`.\r\n */\r\nmodule.exports = format((info, opts = {}) => {\r\n  info[MESSAGE] = (opts.stable ? jsonStringify.stableStringify\r\n    : jsonStringify)(info, opts.replacer || replacer, opts.space);\r\n  return info;\r\n});\r\n"]},"metadata":{},"sourceType":"script"}