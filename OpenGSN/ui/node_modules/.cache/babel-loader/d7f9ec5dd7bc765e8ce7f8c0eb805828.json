{"ast":null,"code":"\"use strict\";\n\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\n\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n  const fetcher = \"Web3LegacyFetcher\";\n  return function (method, params) {\n    // Metamask complains about eth_sign (and on some versions hangs)\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    const request = {\n      method: method,\n      params: params,\n      id: _nextId++,\n      jsonrpc: \"2.0\"\n    };\n    return new Promise((resolve, reject) => {\n      this.emit(\"debug\", {\n        action: \"request\",\n        fetcher,\n        request: deepCopy(request),\n        provider: this\n      });\n      sendFunc(request, (error, response) => {\n        if (error) {\n          this.emit(\"debug\", {\n            action: \"response\",\n            fetcher,\n            error,\n            request,\n            provider: this\n          });\n          return reject(error);\n        }\n\n        this.emit(\"debug\", {\n          action: \"response\",\n          fetcher,\n          request,\n          response,\n          provider: this\n        });\n\n        if (response.error) {\n          const error = new Error(response.error.message);\n          error.code = response.error.code;\n          error.data = response.error.data;\n          return reject(error);\n        }\n\n        resolve(response.result);\n      });\n    });\n  };\n}\n\nfunction buildEip1193Fetcher(provider) {\n  return function (method, params) {\n    if (params == null) {\n      params = [];\n    } // Metamask complains about eth_sign (and on some versions hangs)\n\n\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    const request = {\n      method,\n      params\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      fetcher: \"Eip1193Fetcher\",\n      request: deepCopy(request),\n      provider: this\n    });\n    return provider.request(request).then(response => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request,\n        response,\n        provider: this\n      });\n      return response;\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request,\n        error,\n        provider: this\n      });\n      throw error;\n    });\n  };\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n  constructor(provider, network) {\n    logger.checkNew(new.target, Web3Provider);\n\n    if (provider == null) {\n      logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n    }\n\n    let path = null;\n    let jsonRpcFetchFunc = null;\n    let subprovider = null;\n\n    if (typeof provider === \"function\") {\n      path = \"unknown:\";\n      jsonRpcFetchFunc = provider;\n    } else {\n      path = provider.host || provider.path || \"\";\n\n      if (!path && provider.isMetaMask) {\n        path = \"metamask\";\n      }\n\n      subprovider = provider;\n\n      if (provider.request) {\n        if (path === \"\") {\n          path = \"eip-1193:\";\n        }\n\n        jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n      } else if (provider.sendAsync) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n      } else if (provider.send) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n      } else {\n        logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n      }\n\n      if (!path) {\n        path = \"unknown:\";\n      }\n    }\n\n    super(path, network);\n    defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n    defineReadOnly(this, \"provider\", subprovider);\n  }\n\n  send(method, params) {\n    return this.jsonRpcFetchFunc(method, params);\n  }\n\n}","map":{"version":3,"sources":["../src.ts/web3-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\r\nimport { Logger } from \"@ethersproject/logger\";\r\nimport { version } from \"./_version\";\r\nconst logger = new Logger(version);\r\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\r\nlet _nextId = 1;\r\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\r\n    const fetcher = \"Web3LegacyFetcher\";\r\n    return function (method, params) {\r\n        // Metamask complains about eth_sign (and on some versions hangs)\r\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\r\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\r\n            method = \"personal_sign\";\r\n            params = [params[1], params[0]];\r\n        }\r\n        const request = {\r\n            method: method,\r\n            params: params,\r\n            id: (_nextId++),\r\n            jsonrpc: \"2.0\"\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            this.emit(\"debug\", {\r\n                action: \"request\",\r\n                fetcher,\r\n                request: deepCopy(request),\r\n                provider: this\r\n            });\r\n            sendFunc(request, (error, response) => {\r\n                if (error) {\r\n                    this.emit(\"debug\", {\r\n                        action: \"response\",\r\n                        fetcher,\r\n                        error,\r\n                        request,\r\n                        provider: this\r\n                    });\r\n                    return reject(error);\r\n                }\r\n                this.emit(\"debug\", {\r\n                    action: \"response\",\r\n                    fetcher,\r\n                    request,\r\n                    response,\r\n                    provider: this\r\n                });\r\n                if (response.error) {\r\n                    const error = new Error(response.error.message);\r\n                    error.code = response.error.code;\r\n                    error.data = response.error.data;\r\n                    return reject(error);\r\n                }\r\n                resolve(response.result);\r\n            });\r\n        });\r\n    };\r\n}\r\nfunction buildEip1193Fetcher(provider) {\r\n    return function (method, params) {\r\n        if (params == null) {\r\n            params = [];\r\n        }\r\n        // Metamask complains about eth_sign (and on some versions hangs)\r\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\r\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\r\n            method = \"personal_sign\";\r\n            params = [params[1], params[0]];\r\n        }\r\n        const request = { method, params };\r\n        this.emit(\"debug\", {\r\n            action: \"request\",\r\n            fetcher: \"Eip1193Fetcher\",\r\n            request: deepCopy(request),\r\n            provider: this\r\n        });\r\n        return provider.request(request).then((response) => {\r\n            this.emit(\"debug\", {\r\n                action: \"response\",\r\n                fetcher: \"Eip1193Fetcher\",\r\n                request,\r\n                response,\r\n                provider: this\r\n            });\r\n            return response;\r\n        }, (error) => {\r\n            this.emit(\"debug\", {\r\n                action: \"response\",\r\n                fetcher: \"Eip1193Fetcher\",\r\n                request,\r\n                error,\r\n                provider: this\r\n            });\r\n            throw error;\r\n        });\r\n    };\r\n}\r\nexport class Web3Provider extends JsonRpcProvider {\r\n    constructor(provider, network) {\r\n        logger.checkNew(new.target, Web3Provider);\r\n        if (provider == null) {\r\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\r\n        }\r\n        let path = null;\r\n        let jsonRpcFetchFunc = null;\r\n        let subprovider = null;\r\n        if (typeof (provider) === \"function\") {\r\n            path = \"unknown:\";\r\n            jsonRpcFetchFunc = provider;\r\n        }\r\n        else {\r\n            path = provider.host || provider.path || \"\";\r\n            if (!path && provider.isMetaMask) {\r\n                path = \"metamask\";\r\n            }\r\n            subprovider = provider;\r\n            if (provider.request) {\r\n                if (path === \"\") {\r\n                    path = \"eip-1193:\";\r\n                }\r\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\r\n            }\r\n            else if (provider.sendAsync) {\r\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\r\n            }\r\n            else if (provider.send) {\r\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\r\n            }\r\n            else {\r\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\r\n            }\r\n            if (!path) {\r\n                path = \"unknown:\";\r\n            }\r\n        }\r\n        super(path, network);\r\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\r\n        defineReadOnly(this, \"provider\", subprovider);\r\n    }\r\n    send(method, params) {\r\n        return this.jsonRpcFetchFunc(method, params);\r\n    }\r\n}\r\n//# sourceMappingURL=web3-provider.js.map"]},"metadata":{},"sourceType":"module"}