{"ast":null,"code":"'use strict';\n/**\r\n * A shareable symbol constant that can be used\r\n * as a non-enumerable / semi-hidden level identifier\r\n * to allow the readable level property to be mutable for\r\n * operations like colorization\r\n *\r\n * @type {Symbol}\r\n */\n\nObject.defineProperty(exports, 'LEVEL', {\n  value: Symbol.for('level')\n});\n/**\r\n * A shareable symbol constant that can be used\r\n * as a non-enumerable / semi-hidden message identifier\r\n * to allow the final message property to not have\r\n * side effects on another.\r\n *\r\n * @type {Symbol}\r\n */\n\nObject.defineProperty(exports, 'MESSAGE', {\n  value: Symbol.for('message')\n});\n/**\r\n * A shareable symbol constant that can be used\r\n * as a non-enumerable / semi-hidden message identifier\r\n * to allow the extracted splat property be hidden\r\n *\r\n * @type {Symbol}\r\n */\n\nObject.defineProperty(exports, 'SPLAT', {\n  value: Symbol.for('splat')\n});\n/**\r\n * A shareable object constant  that can be used\r\n * as a standard configuration for winston@3.\r\n *\r\n * @type {Object}\r\n */\n\nObject.defineProperty(exports, 'configs', {\n  value: require('./config')\n});","map":{"version":3,"sources":["C:/Users/nomif/Desktop/Programming/Blockchain/ethereum-gasless-transactions/OpenGSN/node_modules/triple-beam/index.js"],"names":["Object","defineProperty","exports","value","Symbol","for","require"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,OAA/B,EAAwC;AACtCC,EAAAA,KAAK,EAAEC,MAAM,CAACC,GAAP,CAAW,OAAX;AAD+B,CAAxC;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAL,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,SAA/B,EAA0C;AACxCC,EAAAA,KAAK,EAAEC,MAAM,CAACC,GAAP,CAAW,SAAX;AADiC,CAA1C;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAL,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,OAA/B,EAAwC;AACtCC,EAAAA,KAAK,EAAEC,MAAM,CAACC,GAAP,CAAW,OAAX;AAD+B,CAAxC;AAIA;AACA;AACA;AACA;AACA;AACA;;AACAL,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,SAA/B,EAA0C;AACxCC,EAAAA,KAAK,EAAEG,OAAO,CAAC,UAAD;AAD0B,CAA1C","sourcesContent":["'use strict';\r\n\r\n/**\r\n * A shareable symbol constant that can be used\r\n * as a non-enumerable / semi-hidden level identifier\r\n * to allow the readable level property to be mutable for\r\n * operations like colorization\r\n *\r\n * @type {Symbol}\r\n */\r\nObject.defineProperty(exports, 'LEVEL', {\r\n  value: Symbol.for('level')\r\n});\r\n\r\n/**\r\n * A shareable symbol constant that can be used\r\n * as a non-enumerable / semi-hidden message identifier\r\n * to allow the final message property to not have\r\n * side effects on another.\r\n *\r\n * @type {Symbol}\r\n */\r\nObject.defineProperty(exports, 'MESSAGE', {\r\n  value: Symbol.for('message')\r\n});\r\n\r\n/**\r\n * A shareable symbol constant that can be used\r\n * as a non-enumerable / semi-hidden message identifier\r\n * to allow the extracted splat property be hidden\r\n *\r\n * @type {Symbol}\r\n */\r\nObject.defineProperty(exports, 'SPLAT', {\r\n  value: Symbol.for('splat')\r\n});\r\n\r\n/**\r\n * A shareable object constant  that can be used\r\n * as a standard configuration for winston@3.\r\n *\r\n * @type {Object}\r\n */\r\nObject.defineProperty(exports, 'configs', {\r\n  value: require('./config')\r\n});\r\n"]},"metadata":{},"sourceType":"script"}