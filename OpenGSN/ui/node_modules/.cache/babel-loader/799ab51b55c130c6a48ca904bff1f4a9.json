{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst web3_eth_abi_1 = __importDefault(require(\"web3-eth-abi\"));\n\nconst web3_utils_1 = __importStar(require(\"web3-utils\"));\n\nconst ethereumjs_tx_1 = require(\"ethereumjs-tx\");\n\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nconst chalk_1 = __importDefault(require(\"chalk\"));\n\nconst rlp_1 = require(\"rlp\");\n\nconst Environments_1 = require(\"./Environments\");\n\nfunction removeHexPrefix(hex) {\n  if (hex == null || typeof hex.replace !== 'function') {\n    throw new Error('Cannot remove hex prefix');\n  }\n\n  return hex.replace(/^0x/, '');\n}\n\nexports.removeHexPrefix = removeHexPrefix;\nconst zeroPad = '0000000000000000000000000000000000000000000000000000000000000000';\n\nfunction padTo64(hex) {\n  if (hex.length < 64) {\n    hex = (zeroPad + hex).slice(-64);\n  }\n\n  return hex;\n}\n\nexports.padTo64 = padTo64;\n\nfunction signatureRSV2Hex(r, s, v) {\n  return '0x' + padTo64(r.toString('hex')) + padTo64(s.toString('hex')) + v.toString(16);\n}\n\nexports.signatureRSV2Hex = signatureRSV2Hex;\n\nfunction event2topic(contract, names) {\n  // for testing: don't crash on mockup..\n  // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n  if (!contract.options || !contract.options.jsonInterface) {\n    return names;\n  }\n\n  return contract.options.jsonInterface.filter(e => names.includes(e.name)) // @ts-ignore\n  .map(web3_eth_abi_1.default.encodeEventSignature);\n}\n\nexports.event2topic = event2topic;\n\nfunction addresses2topics(addresses) {\n  return addresses.map(address2topic);\n}\n\nexports.addresses2topics = addresses2topics;\n\nfunction address2topic(address) {\n  return '0x' + '0'.repeat(24) + address.toLowerCase().slice(2);\n}\n\nexports.address2topic = address2topic; // extract revert reason from a revert bytes array.\n\nfunction decodeRevertReason(revertBytes) {\n  let throwOnError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (revertBytes == null) {\n    return null;\n  }\n\n  if (!revertBytes.startsWith('0x08c379a0')) {\n    if (throwOnError) {\n      throw new Error('invalid revert bytes: ' + revertBytes);\n    }\n\n    return revertBytes;\n  } // @ts-ignore\n\n\n  return web3_eth_abi_1.default.decodeParameter('string', '0x' + revertBytes.slice(10));\n}\n\nexports.decodeRevertReason = decodeRevertReason;\n\nasync function getEip712Signature(web3, typedRequestData) {\n  let methodSuffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  let jsonStringifyRequest = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  const senderAddress = typedRequestData.message.from;\n  let dataToSign;\n\n  if (jsonStringifyRequest) {\n    dataToSign = JSON.stringify(typedRequestData);\n  } else {\n    dataToSign = typedRequestData;\n  }\n\n  return await new Promise((resolve, reject) => {\n    let method; // @ts-ignore (the entire web3 typing is fucked up)\n\n    if (typeof web3.currentProvider.sendAsync === 'function') {\n      // @ts-ignore\n      method = web3.currentProvider.sendAsync;\n    } else {\n      // @ts-ignore\n      method = web3.currentProvider.send;\n    }\n\n    method.bind(web3.currentProvider)({\n      method: 'eth_signTypedData' + methodSuffix,\n      params: [senderAddress, dataToSign],\n      from: senderAddress,\n      id: Date.now()\n    }, (error, result) => {\n      var _a;\n\n      if ((result === null || result === void 0 ? void 0 : result.error) != null) {\n        error = result.error;\n      }\n\n      if (error != null || result == null) {\n        reject((_a = error.message) !== null && _a !== void 0 ? _a : error);\n      } else {\n        resolve(result.result);\n      }\n    });\n  });\n}\n\nexports.getEip712Signature = getEip712Signature;\n/**\n * @returns the actual cost of putting this transaction on chain.\n */\n\nfunction calculateCalldataCost(calldata) {\n  const calldataBuf = Buffer.from(calldata.replace('0x', ''), 'hex');\n  let sum = 0;\n  calldataBuf.forEach(ch => {\n    sum += ch === 0 ? Environments_1.defaultEnvironment.gtxdatazero : Environments_1.defaultEnvironment.gtxdatanonzero;\n  });\n  return sum;\n}\n\nexports.calculateCalldataCost = calculateCalldataCost;\n/**\n * @returns maximum possible gas consumption by this relayed call\n * (calculated on chain by RelayHub.verifyGasAndDataLimits)\n */\n\nfunction calculateTransactionMaxPossibleGas(_ref) {\n  let {\n    gasAndDataLimits,\n    hubOverhead,\n    relayCallGasLimit,\n    msgData,\n    msgDataGasCostInsideTransaction\n  } = _ref;\n  return hubOverhead + msgDataGasCostInsideTransaction + calculateCalldataCost(msgData) + parseInt(relayCallGasLimit) + parseInt(gasAndDataLimits.preRelayedCallGasLimit.toString()) + parseInt(gasAndDataLimits.postRelayedCallGasLimit.toString());\n}\n\nexports.calculateTransactionMaxPossibleGas = calculateTransactionMaxPossibleGas;\n\nfunction getEcRecoverMeta(message, signature) {\n  if (typeof signature === 'string') {\n    const r = parseHexString(signature.substr(2, 65));\n    const s = parseHexString(signature.substr(66, 65));\n    const v = parseHexString(signature.substr(130, 2));\n    signature = {\n      v: v,\n      r: r,\n      s: s\n    };\n  }\n\n  const msg = Buffer.concat([Buffer.from('\\x19Ethereum Signed Message:\\n32'), Buffer.from(removeHexPrefix(message), 'hex')]);\n  const signed = web3_utils_1.default.sha3('0x' + msg.toString('hex'));\n\n  if (signed == null) {\n    throw new Error('web3Utils.sha3 failed somehow');\n  }\n\n  const bufSigned = Buffer.from(removeHexPrefix(signed), 'hex');\n  const recoveredPubKey = ethereumjs_util_1.ecrecover(bufSigned, signature.v[0], Buffer.from(signature.r), Buffer.from(signature.s));\n  return ethereumjs_util_1.bufferToHex(ethereumjs_util_1.pubToAddress(recoveredPubKey));\n}\n\nexports.getEcRecoverMeta = getEcRecoverMeta;\n\nfunction parseHexString(str) {\n  const result = [];\n\n  while (str.length >= 2) {\n    result.push(parseInt(str.substring(0, 2), 16));\n    str = str.substring(2, str.length);\n  }\n\n  return result;\n}\n\nexports.parseHexString = parseHexString;\n\nfunction isSameAddress(address1, address2) {\n  return address1.toLowerCase() === address2.toLowerCase();\n}\n\nexports.isSameAddress = isSameAddress;\n\nasync function sleep(ms) {\n  return await new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexports.sleep = sleep;\n\nfunction ether(n) {\n  return new bn_js_1.default(web3_utils_1.toWei(n, 'ether'));\n}\n\nexports.ether = ether;\n\nfunction randomInRange(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nexports.randomInRange = randomInRange;\n\nfunction eventsComparator(a, b) {\n  if (a.blockNumber === b.blockNumber) {\n    return b.transactionIndex - a.transactionIndex;\n  }\n\n  return b.blockNumber - a.blockNumber;\n}\n\nexports.eventsComparator = eventsComparator;\n\nfunction isSecondEventLater(a, b) {\n  return eventsComparator(a, b) > 0;\n}\n\nexports.isSecondEventLater = isSecondEventLater;\n\nfunction getLatestEventData(events) {\n  if (events.length === 0) {\n    return;\n  }\n\n  const eventDataSorted = events.sort(eventsComparator);\n  return eventDataSorted[0];\n}\n\nexports.getLatestEventData = getLatestEventData;\n\nfunction boolString(bool) {\n  return bool ? chalk_1.default.green('good'.padEnd(14)) : chalk_1.default.red('wrong'.padEnd(14));\n}\n\nexports.boolString = boolString;\n\nfunction getDataAndSignature(tx, chainId) {\n  const input = [tx.nonce, tx.gasPrice, tx.gasLimit, tx.to, tx.value, tx.data];\n  input.push(ethereumjs_util_1.toBuffer(chainId), ethereumjs_util_1.unpadBuffer(ethereumjs_util_1.toBuffer(0)), ethereumjs_util_1.unpadBuffer(ethereumjs_util_1.toBuffer(0)));\n  let vInt = ethereumjs_util_1.bufferToInt(tx.v);\n\n  if (vInt > 28) {\n    vInt -= chainId * 2 + 8;\n  }\n\n  const data = `0x${rlp_1.encode(input).toString('hex')}`;\n  const r = tx.r.toString('hex').padStart(64, '0');\n  const s = tx.s.toString('hex').padStart(64, '0');\n  const v = vInt.toString(16).padStart(2, '0');\n  const signature = `0x${r}${s}${v}`;\n  return {\n    data,\n    signature\n  };\n}\n\nexports.getDataAndSignature = getDataAndSignature;\n\nfunction signedTransactionToHash(signedTransaction, transactionOptions) {\n  return ethereumjs_util_1.bufferToHex(new ethereumjs_tx_1.Transaction(signedTransaction, transactionOptions).hash());\n}\n\nexports.signedTransactionToHash = signedTransactionToHash;","map":{"version":3,"sources":["../src/Utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst web3_eth_abi_1 = __importDefault(require(\"web3-eth-abi\"));\nconst web3_utils_1 = __importStar(require(\"web3-utils\"));\nconst ethereumjs_tx_1 = require(\"ethereumjs-tx\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst chalk_1 = __importDefault(require(\"chalk\"));\nconst rlp_1 = require(\"rlp\");\nconst Environments_1 = require(\"./Environments\");\nfunction removeHexPrefix(hex) {\n    if (hex == null || typeof hex.replace !== 'function') {\n        throw new Error('Cannot remove hex prefix');\n    }\n    return hex.replace(/^0x/, '');\n}\nexports.removeHexPrefix = removeHexPrefix;\nconst zeroPad = '0000000000000000000000000000000000000000000000000000000000000000';\nfunction padTo64(hex) {\n    if (hex.length < 64) {\n        hex = (zeroPad + hex).slice(-64);\n    }\n    return hex;\n}\nexports.padTo64 = padTo64;\nfunction signatureRSV2Hex(r, s, v) {\n    return '0x' + padTo64(r.toString('hex')) + padTo64(s.toString('hex')) + v.toString(16);\n}\nexports.signatureRSV2Hex = signatureRSV2Hex;\nfunction event2topic(contract, names) {\n    // for testing: don't crash on mockup..\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (!contract.options || !contract.options.jsonInterface) {\n        return names;\n    }\n    return contract.options.jsonInterface\n        .filter((e) => names.includes(e.name))\n        // @ts-ignore\n        .map(web3_eth_abi_1.default.encodeEventSignature);\n}\nexports.event2topic = event2topic;\nfunction addresses2topics(addresses) {\n    return addresses.map(address2topic);\n}\nexports.addresses2topics = addresses2topics;\nfunction address2topic(address) {\n    return '0x' + '0'.repeat(24) + address.toLowerCase().slice(2);\n}\nexports.address2topic = address2topic;\n// extract revert reason from a revert bytes array.\nfunction decodeRevertReason(revertBytes, throwOnError = false) {\n    if (revertBytes == null) {\n        return null;\n    }\n    if (!revertBytes.startsWith('0x08c379a0')) {\n        if (throwOnError) {\n            throw new Error('invalid revert bytes: ' + revertBytes);\n        }\n        return revertBytes;\n    }\n    // @ts-ignore\n    return web3_eth_abi_1.default.decodeParameter('string', '0x' + revertBytes.slice(10));\n}\nexports.decodeRevertReason = decodeRevertReason;\nasync function getEip712Signature(web3, typedRequestData, methodSuffix = '', jsonStringifyRequest = false) {\n    const senderAddress = typedRequestData.message.from;\n    let dataToSign;\n    if (jsonStringifyRequest) {\n        dataToSign = JSON.stringify(typedRequestData);\n    }\n    else {\n        dataToSign = typedRequestData;\n    }\n    return await new Promise((resolve, reject) => {\n        let method;\n        // @ts-ignore (the entire web3 typing is fucked up)\n        if (typeof web3.currentProvider.sendAsync === 'function') {\n            // @ts-ignore\n            method = web3.currentProvider.sendAsync;\n        }\n        else {\n            // @ts-ignore\n            method = web3.currentProvider.send;\n        }\n        method.bind(web3.currentProvider)({\n            method: 'eth_signTypedData' + methodSuffix,\n            params: [senderAddress, dataToSign],\n            from: senderAddress,\n            id: Date.now()\n        }, (error, result) => {\n            var _a;\n            if ((result === null || result === void 0 ? void 0 : result.error) != null) {\n                error = result.error;\n            }\n            if (error != null || result == null) {\n                reject((_a = error.message) !== null && _a !== void 0 ? _a : error);\n            }\n            else {\n                resolve(result.result);\n            }\n        });\n    });\n}\nexports.getEip712Signature = getEip712Signature;\n/**\n * @returns the actual cost of putting this transaction on chain.\n */\nfunction calculateCalldataCost(calldata) {\n    const calldataBuf = Buffer.from(calldata.replace('0x', ''), 'hex');\n    let sum = 0;\n    calldataBuf.forEach(ch => { sum += (ch === 0 ? Environments_1.defaultEnvironment.gtxdatazero : Environments_1.defaultEnvironment.gtxdatanonzero); });\n    return sum;\n}\nexports.calculateCalldataCost = calculateCalldataCost;\n/**\n * @returns maximum possible gas consumption by this relayed call\n * (calculated on chain by RelayHub.verifyGasAndDataLimits)\n */\nfunction calculateTransactionMaxPossibleGas({ gasAndDataLimits, hubOverhead, relayCallGasLimit, msgData, msgDataGasCostInsideTransaction }) {\n    return hubOverhead +\n        msgDataGasCostInsideTransaction +\n        calculateCalldataCost(msgData) +\n        parseInt(relayCallGasLimit) +\n        parseInt(gasAndDataLimits.preRelayedCallGasLimit.toString()) +\n        parseInt(gasAndDataLimits.postRelayedCallGasLimit.toString());\n}\nexports.calculateTransactionMaxPossibleGas = calculateTransactionMaxPossibleGas;\nfunction getEcRecoverMeta(message, signature) {\n    if (typeof signature === 'string') {\n        const r = parseHexString(signature.substr(2, 65));\n        const s = parseHexString(signature.substr(66, 65));\n        const v = parseHexString(signature.substr(130, 2));\n        signature = {\n            v: v,\n            r: r,\n            s: s\n        };\n    }\n    const msg = Buffer.concat([Buffer.from('\\x19Ethereum Signed Message:\\n32'), Buffer.from(removeHexPrefix(message), 'hex')]);\n    const signed = web3_utils_1.default.sha3('0x' + msg.toString('hex'));\n    if (signed == null) {\n        throw new Error('web3Utils.sha3 failed somehow');\n    }\n    const bufSigned = Buffer.from(removeHexPrefix(signed), 'hex');\n    const recoveredPubKey = ethereumjs_util_1.ecrecover(bufSigned, signature.v[0], Buffer.from(signature.r), Buffer.from(signature.s));\n    return ethereumjs_util_1.bufferToHex(ethereumjs_util_1.pubToAddress(recoveredPubKey));\n}\nexports.getEcRecoverMeta = getEcRecoverMeta;\nfunction parseHexString(str) {\n    const result = [];\n    while (str.length >= 2) {\n        result.push(parseInt(str.substring(0, 2), 16));\n        str = str.substring(2, str.length);\n    }\n    return result;\n}\nexports.parseHexString = parseHexString;\nfunction isSameAddress(address1, address2) {\n    return address1.toLowerCase() === address2.toLowerCase();\n}\nexports.isSameAddress = isSameAddress;\nasync function sleep(ms) {\n    return await new Promise(resolve => setTimeout(resolve, ms));\n}\nexports.sleep = sleep;\nfunction ether(n) {\n    return new bn_js_1.default(web3_utils_1.toWei(n, 'ether'));\n}\nexports.ether = ether;\nfunction randomInRange(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\nexports.randomInRange = randomInRange;\nfunction eventsComparator(a, b) {\n    if (a.blockNumber === b.blockNumber) {\n        return b.transactionIndex - a.transactionIndex;\n    }\n    return b.blockNumber - a.blockNumber;\n}\nexports.eventsComparator = eventsComparator;\nfunction isSecondEventLater(a, b) {\n    return eventsComparator(a, b) > 0;\n}\nexports.isSecondEventLater = isSecondEventLater;\nfunction getLatestEventData(events) {\n    if (events.length === 0) {\n        return;\n    }\n    const eventDataSorted = events.sort(eventsComparator);\n    return eventDataSorted[0];\n}\nexports.getLatestEventData = getLatestEventData;\nfunction boolString(bool) {\n    return bool ? chalk_1.default.green('good'.padEnd(14)) : chalk_1.default.red('wrong'.padEnd(14));\n}\nexports.boolString = boolString;\nfunction getDataAndSignature(tx, chainId) {\n    const input = [tx.nonce, tx.gasPrice, tx.gasLimit, tx.to, tx.value, tx.data];\n    input.push(ethereumjs_util_1.toBuffer(chainId), ethereumjs_util_1.unpadBuffer(ethereumjs_util_1.toBuffer(0)), ethereumjs_util_1.unpadBuffer(ethereumjs_util_1.toBuffer(0)));\n    let vInt = ethereumjs_util_1.bufferToInt(tx.v);\n    if (vInt > 28) {\n        vInt -= chainId * 2 + 8;\n    }\n    const data = `0x${rlp_1.encode(input).toString('hex')}`;\n    const r = tx.r.toString('hex').padStart(64, '0');\n    const s = tx.s.toString('hex').padStart(64, '0');\n    const v = vInt.toString(16).padStart(2, '0');\n    const signature = `0x${r}${s}${v}`;\n    return {\n        data,\n        signature\n    };\n}\nexports.getDataAndSignature = getDataAndSignature;\nfunction signedTransactionToHash(signedTransaction, transactionOptions) {\n    return ethereumjs_util_1.bufferToHex(new ethereumjs_tx_1.Transaction(signedTransaction, transactionOptions).hash());\n}\nexports.signedTransactionToHash = signedTransactionToHash;\n//# sourceMappingURL=Utils.js.map"]},"metadata":{},"sourceType":"script"}