{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * base export class for all events fired by RelayClient.\r\n * for \"progress\" report, it is enough to test the base export class only.\r\n * subclasses contain some extra information about the events.\r\n * Last event is when we receive response from relayer that event was sent - now we should wait for mining..\r\n */\n\nconst TOTAL_EVENTS = 7;\n\nclass GsnEvent {\n  constructor(event, step) {\n    this.event = event;\n    this.step = step;\n    this.total = TOTAL_EVENTS;\n  }\n\n}\n\nexports.GsnEvent = GsnEvent; // initialize client (should be done before all requests. not counted in \"total\")\n\nclass GsnInitEvent extends GsnEvent {\n  constructor() {\n    super('init', 0);\n  }\n\n}\n\nexports.GsnInitEvent = GsnInitEvent;\n\nclass GsnRefreshRelaysEvent extends GsnEvent {\n  constructor() {\n    super('refresh-relays', 1);\n  }\n\n}\n\nexports.GsnRefreshRelaysEvent = GsnRefreshRelaysEvent;\n\nclass GsnDoneRefreshRelaysEvent extends GsnEvent {\n  constructor(relaysCount) {\n    super('refreshed-relays', 2);\n    this.relaysCount = relaysCount;\n  }\n\n}\n\nexports.GsnDoneRefreshRelaysEvent = GsnDoneRefreshRelaysEvent;\n\nclass GsnNextRelayEvent extends GsnEvent {\n  constructor(relayUrl) {\n    super('next-relay', 3);\n    this.relayUrl = relayUrl;\n  }\n\n}\n\nexports.GsnNextRelayEvent = GsnNextRelayEvent;\n\nclass GsnSignRequestEvent extends GsnEvent {\n  constructor() {\n    super('sign-request', 4);\n  }\n\n}\n\nexports.GsnSignRequestEvent = GsnSignRequestEvent; // before sending the request to the relayer, the client attempt to verify it will succeed.\n// validation may fail if the paymaster rejects the request\n\nclass GsnValidateRequestEvent extends GsnEvent {\n  constructor() {\n    super('validate-request', 5);\n  }\n\n}\n\nexports.GsnValidateRequestEvent = GsnValidateRequestEvent;\n\nclass GsnSendToRelayerEvent extends GsnEvent {\n  constructor(relayUrl) {\n    super('send-to-relayer', 6);\n    this.relayUrl = relayUrl;\n  }\n\n}\n\nexports.GsnSendToRelayerEvent = GsnSendToRelayerEvent;\n\nclass GsnRelayerResponseEvent extends GsnEvent {\n  constructor(success) {\n    super('relayer-response', 7);\n    this.success = success;\n  }\n\n}\n\nexports.GsnRelayerResponseEvent = GsnRelayerResponseEvent;","map":{"version":3,"sources":["../src/GsnEvents.ts"],"names":[],"mappings":";;;;;AAAA;;;;;AAKG;;AACH,MAAM,YAAY,GAAG,CAArB;;AACA,MAAa,QAAb,CAAqB;AAEnB,EAAA,WAAA,CAAsB,KAAtB,EAA8C,IAA9C,EAA0D;AAApC,SAAA,KAAA,GAAA,KAAA;AAAwB,SAAA,IAAA,GAAA,IAAA;AAD9C,SAAA,KAAA,GAAQ,YAAR;AAC8D;;AAF3C;;AAArB,OAAA,CAAA,QAAA,GAAA,QAAA,C,CAKA;;AACA,MAAa,YAAb,SAAkC,QAAlC,CAA0C;AACxC,EAAA,WAAA,GAAA;AAAiB,UAAM,MAAN,EAAc,CAAd;AAAkB;;AADK;;AAA1C,OAAA,CAAA,YAAA,GAAA,YAAA;;AAIA,MAAa,qBAAb,SAA2C,QAA3C,CAAmD;AACjD,EAAA,WAAA,GAAA;AAAiB,UAAM,gBAAN,EAAwB,CAAxB;AAA4B;;AADI;;AAAnD,OAAA,CAAA,qBAAA,GAAA,qBAAA;;AAIA,MAAa,yBAAb,SAA+C,QAA/C,CAAuD;AACrD,EAAA,WAAA,CAAsB,WAAtB,EAAyC;AAAI,UAAM,kBAAN,EAA0B,CAA1B;AAAvB,SAAA,WAAA,GAAA,WAAA;AAAqD;;AADtB;;AAAvD,OAAA,CAAA,yBAAA,GAAA,yBAAA;;AAIA,MAAa,iBAAb,SAAuC,QAAvC,CAA+C;AAC7C,EAAA,WAAA,CAAsB,QAAtB,EAAsC;AAAI,UAAM,YAAN,EAAoB,CAApB;AAApB,SAAA,QAAA,GAAA,QAAA;AAA4C;;AADrB;;AAA/C,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAIA,MAAa,mBAAb,SAAyC,QAAzC,CAAiD;AAC/C,EAAA,WAAA,GAAA;AAAiB,UAAM,cAAN,EAAsB,CAAtB;AAA0B;;AADI;;AAAjD,OAAA,CAAA,mBAAA,GAAA,mBAAA,C,CAIA;AACA;;AACA,MAAa,uBAAb,SAA6C,QAA7C,CAAqD;AACnD,EAAA,WAAA,GAAA;AAAiB,UAAM,kBAAN,EAA0B,CAA1B;AAA8B;;AADI;;AAArD,OAAA,CAAA,uBAAA,GAAA,uBAAA;;AAIA,MAAa,qBAAb,SAA2C,QAA3C,CAAmD;AACjD,EAAA,WAAA,CAAsB,QAAtB,EAAsC;AAAI,UAAM,iBAAN,EAAyB,CAAzB;AAApB,SAAA,QAAA,GAAA,QAAA;AAAiD;;AADtB;;AAAnD,OAAA,CAAA,qBAAA,GAAA,qBAAA;;AAIA,MAAa,uBAAb,SAA6C,QAA7C,CAAqD;AACnD,EAAA,WAAA,CAAsB,OAAtB,EAAsC;AAAI,UAAM,kBAAN,EAA0B,CAA1B;AAApB,SAAA,OAAA,GAAA,OAAA;AAAkD;;AADrB;;AAArD,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * base export class for all events fired by RelayClient.\r\n * for \"progress\" report, it is enough to test the base export class only.\r\n * subclasses contain some extra information about the events.\r\n * Last event is when we receive response from relayer that event was sent - now we should wait for mining..\r\n */\r\nconst TOTAL_EVENTS = 7;\r\nclass GsnEvent {\r\n    constructor(event, step) {\r\n        this.event = event;\r\n        this.step = step;\r\n        this.total = TOTAL_EVENTS;\r\n    }\r\n}\r\nexports.GsnEvent = GsnEvent;\r\n// initialize client (should be done before all requests. not counted in \"total\")\r\nclass GsnInitEvent extends GsnEvent {\r\n    constructor() { super('init', 0); }\r\n}\r\nexports.GsnInitEvent = GsnInitEvent;\r\nclass GsnRefreshRelaysEvent extends GsnEvent {\r\n    constructor() { super('refresh-relays', 1); }\r\n}\r\nexports.GsnRefreshRelaysEvent = GsnRefreshRelaysEvent;\r\nclass GsnDoneRefreshRelaysEvent extends GsnEvent {\r\n    constructor(relaysCount) {\r\n        super('refreshed-relays', 2);\r\n        this.relaysCount = relaysCount;\r\n    }\r\n}\r\nexports.GsnDoneRefreshRelaysEvent = GsnDoneRefreshRelaysEvent;\r\nclass GsnNextRelayEvent extends GsnEvent {\r\n    constructor(relayUrl) {\r\n        super('next-relay', 3);\r\n        this.relayUrl = relayUrl;\r\n    }\r\n}\r\nexports.GsnNextRelayEvent = GsnNextRelayEvent;\r\nclass GsnSignRequestEvent extends GsnEvent {\r\n    constructor() { super('sign-request', 4); }\r\n}\r\nexports.GsnSignRequestEvent = GsnSignRequestEvent;\r\n// before sending the request to the relayer, the client attempt to verify it will succeed.\r\n// validation may fail if the paymaster rejects the request\r\nclass GsnValidateRequestEvent extends GsnEvent {\r\n    constructor() { super('validate-request', 5); }\r\n}\r\nexports.GsnValidateRequestEvent = GsnValidateRequestEvent;\r\nclass GsnSendToRelayerEvent extends GsnEvent {\r\n    constructor(relayUrl) {\r\n        super('send-to-relayer', 6);\r\n        this.relayUrl = relayUrl;\r\n    }\r\n}\r\nexports.GsnSendToRelayerEvent = GsnSendToRelayerEvent;\r\nclass GsnRelayerResponseEvent extends GsnEvent {\r\n    constructor(success) {\r\n        super('relayer-response', 7);\r\n        this.success = success;\r\n    }\r\n}\r\nexports.GsnRelayerResponseEvent = GsnRelayerResponseEvent;\r\n//# sourceMappingURL=GsnEvents.js.map"]},"metadata":{},"sourceType":"script"}