{"ast":null,"code":"'use strict';\n\nvar format = require('./format');\n\nvar _require = require('triple-beam'),\n    MESSAGE = _require.MESSAGE;\n\nvar jsonStringify = require('fast-safe-stringify');\n/*\r\n * function replacer (key, value)\r\n * Handles proper stringification of Buffer and bigint output.\r\n */\n\n\nfunction replacer(key, value) {\n  if (value instanceof Buffer) return value.toString('base64'); // eslint-disable-next-line valid-typeof\n\n  if (typeof value === 'bigint') return value.toString();\n  return value;\n}\n/*\r\n * function json (info)\r\n * Returns a new instance of the JSON format that turns a log `info`\r\n * object into pure JSON. This was previously exposed as { json: true }\r\n * to transports in `winston < 3.0.0`.\r\n */\n\n\nmodule.exports = format(function (info) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  info[MESSAGE] = (opts.stable ? jsonStringify.stableStringify : jsonStringify)(info, opts.replacer || replacer, opts.space);\n  return info;\n});","map":{"version":3,"sources":["C:/Users/nomif/Desktop/Programming/Blockchain/ethereum-gasless-transactions/OpenGSN/node_modules/logform/dist/json.js"],"names":["format","require","_require","MESSAGE","jsonStringify","replacer","key","value","Buffer","toString","module","exports","info","opts","arguments","length","undefined","stable","stableStringify","space"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIE,OAAO,GAAGD,QAAQ,CAACC,OADvB;;AAGA,IAAIC,aAAa,GAAGH,OAAO,CAAC,qBAAD,CAA3B;AACA;AACA;AACA;AACA;;;AAGA,SAASI,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5B,MAAIA,KAAK,YAAYC,MAArB,EAA6B,OAAOD,KAAK,CAACE,QAAN,CAAe,QAAf,CAAP,CADD,CACkC;;AAE9D,MAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B,OAAOA,KAAK,CAACE,QAAN,EAAP;AAC/B,SAAOF,KAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGAG,MAAM,CAACC,OAAP,GAAiBX,MAAM,CAAC,UAAUY,IAAV,EAAgB;AACtC,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AACAF,EAAAA,IAAI,CAACT,OAAD,CAAJ,GAAgB,CAACU,IAAI,CAACI,MAAL,GAAcb,aAAa,CAACc,eAA5B,GAA8Cd,aAA/C,EAA8DQ,IAA9D,EAAoEC,IAAI,CAACR,QAAL,IAAiBA,QAArF,EAA+FQ,IAAI,CAACM,KAApG,CAAhB;AACA,SAAOP,IAAP;AACD,CAJsB,CAAvB","sourcesContent":["'use strict';\r\n\r\nvar format = require('./format');\r\n\r\nvar _require = require('triple-beam'),\r\n    MESSAGE = _require.MESSAGE;\r\n\r\nvar jsonStringify = require('fast-safe-stringify');\r\n/*\r\n * function replacer (key, value)\r\n * Handles proper stringification of Buffer and bigint output.\r\n */\r\n\r\n\r\nfunction replacer(key, value) {\r\n  if (value instanceof Buffer) return value.toString('base64'); // eslint-disable-next-line valid-typeof\r\n\r\n  if (typeof value === 'bigint') return value.toString();\r\n  return value;\r\n}\r\n/*\r\n * function json (info)\r\n * Returns a new instance of the JSON format that turns a log `info`\r\n * object into pure JSON. This was previously exposed as { json: true }\r\n * to transports in `winston < 3.0.0`.\r\n */\r\n\r\n\r\nmodule.exports = format(function (info) {\r\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  info[MESSAGE] = (opts.stable ? jsonStringify.stableStringify : jsonStringify)(info, opts.replacer || replacer, opts.space);\r\n  return info;\r\n});"]},"metadata":{},"sourceType":"script"}