{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jay/Desktop/Blockchain/ethereum-gasless-transactions/OpenGSN/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jay/Desktop/Blockchain/ethereum-gasless-transactions/OpenGSN/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var ethers=require('ethers');var _require=require('ethers/lib/utils'),formatEther=_require.formatEther;var _require2=require('@opengsn/provider'),RelayProvider=_require2.RelayProvider;var contractArtifact=require('../build/contracts/TargetContract.json');var noFeePaymasterArtifact=require('../build/contracts/NoFeePaymaster.json');var tokenFeePaymasterArtifact=require('../build/contracts/TokenFeePaymaster.json');var tokenBankArtifact=require('../build/contracts/TokenBank.json');var targetContractNoFeePaymaster;var targetContractTokenFeePaymaster;var noFeePaymasterContract;var tokenFeePaymasterContract;var tokenBankContract;var contractAddress;var artifactNetwork;var networkId;var TokenFeeprovider;var NoFeeprovider;function initNoFeePaymaster(){return _initNoFeePaymaster.apply(this,arguments);}function _initNoFeePaymaster(){_initNoFeePaymaster=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var gsnProviderNoFeePaymaster,noFeeNetwork;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(window.ethereum){_context.next=2;break;}throw new Error('provider not found');case 2:window.ethereum.on('accountsChanged',function(){console.log('acct');window.location.reload();});window.ethereum.on('chainChanged',function(){console.log('chainChained');window.location.reload();});_context.next=6;return window.ethereum.request({method:'net_version'});case 6:networkId=_context.sent;_context.next=9;return RelayProvider.newProvider({provider:window.ethereum,config:{paymasterAddress:noFeePaymasterArtifact.networks[networkId].address}}).init();case 9:gsnProviderNoFeePaymaster=_context.sent;NoFeeprovider=new ethers.providers.Web3Provider(gsnProviderNoFeePaymaster);_context.next=13;return NoFeeprovider.getNetwork();case 13:noFeeNetwork=_context.sent;artifactNetwork=contractArtifact.networks[networkId];if(artifactNetwork){_context.next=17;break;}throw new Error('Can\\'t find deployment on network '+networkId);case 17:contractAddress=artifactNetwork.address;targetContractNoFeePaymaster=new ethers.Contract(contractAddress,contractArtifact.abi,NoFeeprovider.getSigner());noFeePaymasterContract=new ethers.Contract(noFeePaymasterArtifact.networks[networkId].address,noFeePaymasterArtifact.abi,NoFeeprovider.getSigner());_context.next=22;return listenToNoFeeEvents();case 22:return _context.abrupt(\"return\",{contractAddress:contractAddress,noFeeNetwork:noFeeNetwork});case 23:case\"end\":return _context.stop();}}},_callee);}));return _initNoFeePaymaster.apply(this,arguments);}function initTokenFeePaymaster(){return _initTokenFeePaymaster.apply(this,arguments);}function _initTokenFeePaymaster(){_initTokenFeePaymaster=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var gsnProviderTokenFeePaymaster,TokenFeeNetwork;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(window.ethereum){_context2.next=2;break;}throw new Error('provider not found');case 2:window.ethereum.on('accountsChanged',function(){console.log('acct');window.location.reload();});window.ethereum.on('chainChanged',function(){console.log('chainChained');window.location.reload();});_context2.next=6;return window.ethereum.request({method:'net_version'});case 6:networkId=_context2.sent;_context2.next=9;return RelayProvider.newProvider({provider:window.ethereum,config:{paymasterAddress:tokenFeePaymasterArtifact.networks[networkId].address}}).init();case 9:gsnProviderTokenFeePaymaster=_context2.sent;TokenFeeprovider=new ethers.providers.Web3Provider(gsnProviderTokenFeePaymaster);_context2.next=13;return TokenFeeprovider.getNetwork();case 13:TokenFeeNetwork=_context2.sent;artifactNetwork=contractArtifact.networks[networkId];if(artifactNetwork){_context2.next=17;break;}throw new Error('Can\\'t find deployment on network '+networkId);case 17:contractAddress=artifactNetwork.address;targetContractTokenFeePaymaster=new ethers.Contract(contractAddress,contractArtifact.abi,TokenFeeprovider.getSigner());tokenFeePaymasterContract=new ethers.Contract(tokenFeePaymasterArtifact.networks[networkId].address,tokenFeePaymasterArtifact.abi,TokenFeeprovider.getSigner());_context2.next=22;return listenToTokenFeeEvents();case 22:return _context2.abrupt(\"return\",{contractAddress:contractAddress,TokenFeeNetwork:TokenFeeNetwork});case 23:case\"end\":return _context2.stop();}}},_callee2);}));return _initTokenFeePaymaster.apply(this,arguments);}function noFeeContractCall(){return _noFeeContractCall.apply(this,arguments);}function _noFeeContractCall(){_noFeeContractCall=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var transaction,hash,receipt;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return window.ethereum.send('eth_requestAccounts');case 2:_context3.next=4;return targetContractNoFeePaymaster.noCommissionTx();case 4:transaction=_context3.sent;hash=transaction.hash;console.log(\"Transaction \".concat(hash,\" sent\"));_context3.next=9;return NoFeeprovider.waitForTransaction(hash);case 9:receipt=_context3.sent;console.log(\"Mined in block: \".concat(receipt.blockNumber));case 11:case\"end\":return _context3.stop();}}},_callee3);}));return _noFeeContractCall.apply(this,arguments);}function tokenFeeContractCall(){return _tokenFeeContractCall.apply(this,arguments);}function _tokenFeeContractCall(){_tokenFeeContractCall=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var transaction,hash,receipt;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return window.ethereum.send('eth_requestAccounts');case 2:_context4.next=4;return targetContractTokenFeePaymaster.tokenCommissionTx();case 4:transaction=_context4.sent;hash=transaction.hash;console.log(\"Transaction \".concat(hash,\" sent\"));_context4.next=9;return TokenFeeprovider.waitForTransaction(hash);case 9:receipt=_context4.sent;console.log(\"Mined in block: \".concat(receipt.blockNumber));case 11:case\"end\":return _context4.stop();}}},_callee4);}));return _tokenFeeContractCall.apply(this,arguments);}var logview;function log(message){message=message.replace(/(0x\\w\\w\\w\\w)\\w*(\\w\\w\\w\\w)\\b/g,'<b>$1...$2</b>');if(!logview){logview=document.getElementById('logview');}logview.innerHTML=message+\"<br>\\n\"+logview.innerHTML;}// async function listenToEvents() {\n//   targetContractNoFeePaymaster.on('NoFeeFlagCaptured', (previousHolder, currentHolder, rawEvent) => {\n//     log(`No FEE Flag Captured from&nbsp;${previousHolder} by&nbsp;${currentHolder}`)\n//     console.log(`NO FEE Flag Captured from ${previousHolder} by ${currentHolder}`)\n//   })\n//   targetContractTokenFeePaymaster.on('TokenFeeFlagCaptured', (previousHolder, currentHolder, rawEvent) => {\n//     log(`Token Fee Flag Captured from&nbsp;${previousHolder} by&nbsp;${currentHolder}`)\n//     console.log(`TOKEN FEE Flag Captured from ${previousHolder} by ${currentHolder}`)\n//   })\n// }\nfunction listenToNoFeeEvents(){return _listenToNoFeeEvents.apply(this,arguments);}function _listenToNoFeeEvents(){_listenToNoFeeEvents=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:targetContractNoFeePaymaster.on('NoFeeFlagCaptured',function(previousHolder,currentHolder,rawEvent){log(\"No Fee Flag Captured from&nbsp;\".concat(previousHolder,\" by&nbsp;\").concat(currentHolder));console.log(\"No Fee Flag Captured from \".concat(previousHolder,\" by \").concat(currentHolder));});case 1:case\"end\":return _context5.stop();}}},_callee5);}));return _listenToNoFeeEvents.apply(this,arguments);}function listenToTokenFeeEvents(){return _listenToTokenFeeEvents.apply(this,arguments);}function _listenToTokenFeeEvents(){_listenToTokenFeeEvents=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:targetContractTokenFeePaymaster.on('TokenFeeFlagCaptured',function(previousHolder,currentHolder,rawEvent){log(\"Token Fee Flag Captured from&nbsp;\".concat(previousHolder,\" by&nbsp;\").concat(currentHolder));console.log(\"Token Fee Flag Captured from \".concat(previousHolder,\" by \").concat(currentHolder));});case 1:case\"end\":return _context6.stop();}}},_callee6);}));return _listenToTokenFeeEvents.apply(this,arguments);}window.app={initNoFeePaymaster:initNoFeePaymaster,initTokenFeePaymaster:initTokenFeePaymaster,noFeeContractCall:noFeeContractCall,tokenFeeContractCall:tokenFeeContractCall,log:log};","map":{"version":3,"sources":["/Users/jay/Desktop/Blockchain/ethereum-gasless-transactions/OpenGSN/ui/src/ethereum.js"],"names":["ethers","require","formatEther","RelayProvider","contractArtifact","noFeePaymasterArtifact","tokenFeePaymasterArtifact","tokenBankArtifact","targetContractNoFeePaymaster","targetContractTokenFeePaymaster","noFeePaymasterContract","tokenFeePaymasterContract","tokenBankContract","contractAddress","artifactNetwork","networkId","TokenFeeprovider","NoFeeprovider","initNoFeePaymaster","window","ethereum","Error","on","console","log","location","reload","request","method","newProvider","provider","config","paymasterAddress","networks","address","init","gsnProviderNoFeePaymaster","providers","Web3Provider","getNetwork","noFeeNetwork","Contract","abi","getSigner","listenToNoFeeEvents","initTokenFeePaymaster","gsnProviderTokenFeePaymaster","TokenFeeNetwork","listenToTokenFeeEvents","noFeeContractCall","send","noCommissionTx","transaction","hash","waitForTransaction","receipt","blockNumber","tokenFeeContractCall","tokenCommissionTx","logview","message","replace","document","getElementById","innerHTML","previousHolder","currentHolder","rawEvent","app"],"mappings":"uXAAA,GAAMA,CAAAA,MAAM,CAAGC,OAAO,CAAC,QAAD,CAAtB,CACA,aAAwBA,OAAO,CAAC,kBAAD,CAA/B,CAAQC,WAAR,UAAQA,WAAR,CACA,cAA0BD,OAAO,CAAC,mBAAD,CAAjC,CAAQE,aAAR,WAAQA,aAAR,CAGA,GAAMC,CAAAA,gBAAgB,CAAGH,OAAO,CAAC,wCAAD,CAAhC,CAGA,GAAMI,CAAAA,sBAAsB,CAAGJ,OAAO,CAAC,wCAAD,CAAtC,CACA,GAAMK,CAAAA,yBAAyB,CAAGL,OAAO,CAAC,2CAAD,CAAzC,CAEA,GAAMM,CAAAA,iBAAiB,CAAGN,OAAO,CAAC,mCAAD,CAAjC,CAEA,GAAIO,CAAAA,4BAAJ,CACA,GAAIC,CAAAA,+BAAJ,CACA,GAAIC,CAAAA,sBAAJ,CACA,GAAIC,CAAAA,yBAAJ,CACA,GAAIC,CAAAA,iBAAJ,CAEA,GAAIC,CAAAA,eAAJ,CAEA,GAAIC,CAAAA,eAAJ,CACA,GAAIC,CAAAA,SAAJ,CACA,GAAIC,CAAAA,gBAAJ,CACA,GAAIC,CAAAA,aAAJ,C,QAGeC,CAAAA,kB,gKAAf,iLAESC,MAAM,CAACC,QAFhB,8BAGc,IAAIC,CAAAA,KAAJ,CAAU,oBAAV,CAHd,QAKIF,MAAM,CAACC,QAAP,CAAgBE,EAAhB,CAAmB,iBAAnB,CAAsC,UAAM,CACxCC,OAAO,CAACC,GAAR,CAAY,MAAZ,EACAL,MAAM,CAACM,QAAP,CAAgBC,MAAhB,GACH,CAHD,EAIAP,MAAM,CAACC,QAAP,CAAgBE,EAAhB,CAAmB,cAAnB,CAAmC,UAAM,CACrCC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACAL,MAAM,CAACM,QAAP,CAAgBC,MAAhB,GACH,CAHD,EATJ,sBAcsBP,CAAAA,MAAM,CAACC,QAAP,CAAgBO,OAAhB,CAAwB,CAAEC,MAAM,CAAE,aAAV,CAAxB,CAdtB,QAcIb,SAdJ,qCAgB4CZ,CAAAA,aAAa,CAAC0B,WAAd,CAA0B,CAC9DC,QAAQ,CAAEX,MAAM,CAACC,QAD6C,CAE9DW,MAAM,CAAE,CACJC,gBAAgB,CAAE3B,sBAAsB,CAAC4B,QAAvB,CAAgClB,SAAhC,EAA2CmB,OADzD,CAFsD,CAA1B,EAKrCC,IALqC,EAhB5C,QAgBUC,yBAhBV,eAwBInB,aAAa,CAAG,GAAIjB,CAAAA,MAAM,CAACqC,SAAP,CAAiBC,YAArB,CAAkCF,yBAAlC,CAAhB,CAxBJ,uBA0B+BnB,CAAAA,aAAa,CAACsB,UAAd,EA1B/B,SA0BUC,YA1BV,eA2BI1B,eAAe,CAAGV,gBAAgB,CAAC6B,QAAjB,CAA0BlB,SAA1B,CAAlB,CA3BJ,GA8BSD,eA9BT,+BA+Bc,IAAIO,CAAAA,KAAJ,CAAU,qCAAuCN,SAAjD,CA/Bd,SAiCIF,eAAe,CAAGC,eAAe,CAACoB,OAAlC,CAGA1B,4BAA4B,CAAG,GAAIR,CAAAA,MAAM,CAACyC,QAAX,CAC3B5B,eAD2B,CACVT,gBAAgB,CAACsC,GADP,CACYzB,aAAa,CAAC0B,SAAd,EADZ,CAA/B,CAGAjC,sBAAsB,CAAG,GAAIV,CAAAA,MAAM,CAACyC,QAAX,CACrBpC,sBAAsB,CAAC4B,QAAvB,CAAgClB,SAAhC,EAA2CmB,OADtB,CAC+B7B,sBAAsB,CAACqC,GADtD,CAC2DzB,aAAa,CAAC0B,SAAd,EAD3D,CAAzB,CAvCJ,uBA4CUC,CAAAA,mBAAmB,EA5C7B,yCA6CW,CAAE/B,eAAe,CAAfA,eAAF,CAAmB2B,YAAY,CAAZA,YAAnB,CA7CX,yD,6DAgDeK,CAAAA,qB,yKAAf,4LAES1B,MAAM,CAACC,QAFhB,+BAGc,IAAIC,CAAAA,KAAJ,CAAU,oBAAV,CAHd,QAKIF,MAAM,CAACC,QAAP,CAAgBE,EAAhB,CAAmB,iBAAnB,CAAsC,UAAM,CACxCC,OAAO,CAACC,GAAR,CAAY,MAAZ,EACAL,MAAM,CAACM,QAAP,CAAgBC,MAAhB,GACH,CAHD,EAIAP,MAAM,CAACC,QAAP,CAAgBE,EAAhB,CAAmB,cAAnB,CAAmC,UAAM,CACrCC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACAL,MAAM,CAACM,QAAP,CAAgBC,MAAhB,GACH,CAHD,EATJ,uBAcsBP,CAAAA,MAAM,CAACC,QAAP,CAAgBO,OAAhB,CAAwB,CAAEC,MAAM,CAAE,aAAV,CAAxB,CAdtB,QAcIb,SAdJ,uCAgB+CZ,CAAAA,aAAa,CAAC0B,WAAd,CAA0B,CACjEC,QAAQ,CAAEX,MAAM,CAACC,QADgD,CAEjEW,MAAM,CAAE,CACJC,gBAAgB,CAAE1B,yBAAyB,CAAC2B,QAA1B,CAAmClB,SAAnC,EAA8CmB,OAD5D,CAFyD,CAA1B,EAKxCC,IALwC,EAhB/C,QAgBUW,4BAhBV,gBAwBI9B,gBAAgB,CAAG,GAAIhB,CAAAA,MAAM,CAACqC,SAAP,CAAiBC,YAArB,CAAkCQ,4BAAlC,CAAnB,CAxBJ,wBA0BkC9B,CAAAA,gBAAgB,CAACuB,UAAjB,EA1BlC,SA0BUQ,eA1BV,gBA2BIjC,eAAe,CAAGV,gBAAgB,CAAC6B,QAAjB,CAA0BlB,SAA1B,CAAlB,CA3BJ,GA8BSD,eA9BT,gCA+Bc,IAAIO,CAAAA,KAAJ,CAAU,qCAAuCN,SAAjD,CA/Bd,SAiCIF,eAAe,CAAGC,eAAe,CAACoB,OAAlC,CAGAzB,+BAA+B,CAAG,GAAIT,CAAAA,MAAM,CAACyC,QAAX,CAC9B5B,eAD8B,CACbT,gBAAgB,CAACsC,GADJ,CACS1B,gBAAgB,CAAC2B,SAAjB,EADT,CAAlC,CAIAhC,yBAAyB,CAAG,GAAIX,CAAAA,MAAM,CAACyC,QAAX,CACxBnC,yBAAyB,CAAC2B,QAA1B,CAAmClB,SAAnC,EAA8CmB,OADtB,CAC+B5B,yBAAyB,CAACoC,GADzD,CAC8D1B,gBAAgB,CAAC2B,SAAjB,EAD9D,CAA5B,CAxCJ,wBA2CUK,CAAAA,sBAAsB,EA3ChC,0CA4CW,CAAEnC,eAAe,CAAfA,eAAF,CAAmBkC,eAAe,CAAfA,eAAnB,CA5CX,2D,gEAgDeE,CAAAA,iB,6JAAf,4LACU9B,CAAAA,MAAM,CAACC,QAAP,CAAgB8B,IAAhB,CAAqB,qBAArB,CADV,+BAG4B1C,CAAAA,4BAA4B,CAAC2C,cAA7B,EAH5B,QAGQC,WAHR,gBAIQC,IAJR,CAIeD,WAAW,CAACC,IAJ3B,CAKI9B,OAAO,CAACC,GAAR,uBAA2B6B,IAA3B,WALJ,uBAMwBpC,CAAAA,aAAa,CAACqC,kBAAd,CAAiCD,IAAjC,CANxB,QAMQE,OANR,gBAOIhC,OAAO,CAACC,GAAR,2BAA+B+B,OAAO,CAACC,WAAvC,GAPJ,yD,4DAYeC,CAAAA,oB,sKAAf,4LAEUtC,CAAAA,MAAM,CAACC,QAAP,CAAgB8B,IAAhB,CAAqB,qBAArB,CAFV,+BAI4BzC,CAAAA,+BAA+B,CAACiD,iBAAhC,EAJ5B,QAIQN,WAJR,gBAKQC,IALR,CAKeD,WAAW,CAACC,IAL3B,CAMI9B,OAAO,CAACC,GAAR,uBAA2B6B,IAA3B,WANJ,uBAOwBrC,CAAAA,gBAAgB,CAACsC,kBAAjB,CAAoCD,IAApC,CAPxB,QAOQE,OAPR,gBAQIhC,OAAO,CAACC,GAAR,2BAA+B+B,OAAO,CAACC,WAAvC,GARJ,yD,uDAcA,GAAIG,CAAAA,OAAJ,CAEA,QAASnC,CAAAA,GAAT,CAAaoC,OAAb,CAAsB,CAClBA,OAAO,CAAGA,OAAO,CAACC,OAAR,CAAgB,8BAAhB,CAAgD,gBAAhD,CAAV,CACA,GAAI,CAACF,OAAL,CAAc,CACVA,OAAO,CAAGG,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAV,CACH,CACDJ,OAAO,CAACK,SAAR,CAAoBJ,OAAO,CAAG,QAAV,CAAqBD,OAAO,CAACK,SAAjD,CACH,CAGD;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;QAIepB,CAAAA,mB,mKAAf,wIACIpC,4BAA4B,CAACc,EAA7B,CAAgC,mBAAhC,CAAqD,SAAC2C,cAAD,CAAiBC,aAAjB,CAAgCC,QAAhC,CAA6C,CAC9F3C,GAAG,0CAAmCyC,cAAnC,qBAA6DC,aAA7D,EAAH,CACA3C,OAAO,CAACC,GAAR,qCAAyCyC,cAAzC,gBAA8DC,aAA9D,GACH,CAHD,EADJ,wD,8DAOelB,CAAAA,sB,4KAAf,wIACIvC,+BAA+B,CAACa,EAAhC,CAAmC,sBAAnC,CAA2D,SAAC2C,cAAD,CAAiBC,aAAjB,CAAgCC,QAAhC,CAA6C,CACpG3C,GAAG,6CAAsCyC,cAAtC,qBAAgEC,aAAhE,EAAH,CACA3C,OAAO,CAACC,GAAR,wCAA4CyC,cAA5C,gBAAiEC,aAAjE,GACH,CAHD,EADJ,wD,yDAUA/C,MAAM,CAACiD,GAAP,CAAa,CACTlD,kBAAkB,CAAlBA,kBADS,CAET2B,qBAAqB,CAArBA,qBAFS,CAGTI,iBAAiB,CAAjBA,iBAHS,CAITQ,oBAAoB,CAApBA,oBAJS,CAKTjC,GAAG,CAAHA,GALS,CAAb","sourcesContent":["const ethers = require('ethers')\nconst { formatEther } = require('ethers/lib/utils')\nconst { RelayProvider } = require('@opengsn/provider')\n\n\nconst contractArtifact = require('../build/contracts/TargetContract.json')\n\n\nconst noFeePaymasterArtifact = require('../build/contracts/NoFeePaymaster.json')\nconst tokenFeePaymasterArtifact = require('../build/contracts/TokenFeePaymaster.json')\n\nconst tokenBankArtifact = require('../build/contracts/TokenBank.json')\n\nlet targetContractNoFeePaymaster\nlet targetContractTokenFeePaymaster\nlet noFeePaymasterContract\nlet tokenFeePaymasterContract\nlet tokenBankContract\n\nlet contractAddress\n\nlet artifactNetwork\nlet networkId\nlet TokenFeeprovider\nlet NoFeeprovider\n\n\nasync function initNoFeePaymaster() {\n\n    if (!window.ethereum) {\n        throw new Error('provider not found')\n    }\n    window.ethereum.on('accountsChanged', () => {\n        console.log('acct');\n        window.location.reload()\n    })\n    window.ethereum.on('chainChanged', () => {\n        console.log('chainChained');\n        window.location.reload()\n    })\n\n    networkId = await window.ethereum.request({ method: 'net_version' })\n\n    const gsnProviderNoFeePaymaster = await RelayProvider.newProvider({\n        provider: window.ethereum,\n        config: {\n            paymasterAddress: noFeePaymasterArtifact.networks[networkId].address\n        }\n    }).init()\n\n\n    NoFeeprovider = new ethers.providers.Web3Provider(gsnProviderNoFeePaymaster)\n\n    const noFeeNetwork = await NoFeeprovider.getNetwork()\n    artifactNetwork = contractArtifact.networks[networkId]\n\n\n    if (!artifactNetwork)\n        throw new Error('Can\\'t find deployment on network ' + networkId)\n\n    contractAddress = artifactNetwork.address\n\n\n    targetContractNoFeePaymaster = new ethers.Contract(\n        contractAddress, contractArtifact.abi, NoFeeprovider.getSigner())\n\n    noFeePaymasterContract = new ethers.Contract(\n        noFeePaymasterArtifact.networks[networkId].address, noFeePaymasterArtifact.abi, NoFeeprovider.getSigner())\n\n\n\n    await listenToNoFeeEvents()\n    return { contractAddress, noFeeNetwork }\n}\n\nasync function initTokenFeePaymaster() {\n\n    if (!window.ethereum) {\n        throw new Error('provider not found')\n    }\n    window.ethereum.on('accountsChanged', () => {\n        console.log('acct');\n        window.location.reload()\n    })\n    window.ethereum.on('chainChanged', () => {\n        console.log('chainChained');\n        window.location.reload()\n    })\n\n    networkId = await window.ethereum.request({ method: 'net_version' })\n\n    const gsnProviderTokenFeePaymaster = await RelayProvider.newProvider({\n        provider: window.ethereum,\n        config: {\n            paymasterAddress: tokenFeePaymasterArtifact.networks[networkId].address\n        }\n    }).init()\n\n\n    TokenFeeprovider = new ethers.providers.Web3Provider(gsnProviderTokenFeePaymaster)\n\n    const TokenFeeNetwork = await TokenFeeprovider.getNetwork()\n    artifactNetwork = contractArtifact.networks[networkId]\n\n\n    if (!artifactNetwork)\n        throw new Error('Can\\'t find deployment on network ' + networkId)\n\n    contractAddress = artifactNetwork.address\n\n\n    targetContractTokenFeePaymaster = new ethers.Contract(\n        contractAddress, contractArtifact.abi, TokenFeeprovider.getSigner())\n\n\n    tokenFeePaymasterContract = new ethers.Contract(\n        tokenFeePaymasterArtifact.networks[networkId].address, tokenFeePaymasterArtifact.abi, TokenFeeprovider.getSigner())\n\n    await listenToTokenFeeEvents()\n    return { contractAddress, TokenFeeNetwork }\n}\n\n\nasync function noFeeContractCall() {\n    await window.ethereum.send('eth_requestAccounts')\n\n    let transaction = await targetContractNoFeePaymaster.noCommissionTx()\n    let hash = transaction.hash\n    console.log(`Transaction ${hash} sent`)\n    let receipt = await NoFeeprovider.waitForTransaction(hash)\n    console.log(`Mined in block: ${receipt.blockNumber}`)\n\n}\n\n\nasync function tokenFeeContractCall() {\n\n    await window.ethereum.send('eth_requestAccounts')\n\n    let transaction = await targetContractTokenFeePaymaster.tokenCommissionTx()\n    let hash = transaction.hash\n    console.log(`Transaction ${hash} sent`)\n    let receipt = await TokenFeeprovider.waitForTransaction(hash)\n    console.log(`Mined in block: ${receipt.blockNumber}`)\n\n\n}\n\n\nlet logview\n\nfunction log(message) {\n    message = message.replace(/(0x\\w\\w\\w\\w)\\w*(\\w\\w\\w\\w)\\b/g, '<b>$1...$2</b>')\n    if (!logview) {\n        logview = document.getElementById('logview')\n    }\n    logview.innerHTML = message + \"<br>\\n\" + logview.innerHTML\n}\n\n\n// async function listenToEvents() {\n\n//   targetContractNoFeePaymaster.on('NoFeeFlagCaptured', (previousHolder, currentHolder, rawEvent) => {\n//     log(`No FEE Flag Captured from&nbsp;${previousHolder} by&nbsp;${currentHolder}`)\n//     console.log(`NO FEE Flag Captured from ${previousHolder} by ${currentHolder}`)\n//   })\n\n\n//   targetContractTokenFeePaymaster.on('TokenFeeFlagCaptured', (previousHolder, currentHolder, rawEvent) => {\n//     log(`Token Fee Flag Captured from&nbsp;${previousHolder} by&nbsp;${currentHolder}`)\n//     console.log(`TOKEN FEE Flag Captured from ${previousHolder} by ${currentHolder}`)\n//   })\n\n// }\n\n\n\nasync function listenToNoFeeEvents() {\n    targetContractNoFeePaymaster.on('NoFeeFlagCaptured', (previousHolder, currentHolder, rawEvent) => {\n        log(`No Fee Flag Captured from&nbsp;${previousHolder} by&nbsp;${currentHolder}`)\n        console.log(`No Fee Flag Captured from ${previousHolder} by ${currentHolder}`)\n    })\n}\n\nasync function listenToTokenFeeEvents() {\n    targetContractTokenFeePaymaster.on('TokenFeeFlagCaptured', (previousHolder, currentHolder, rawEvent) => {\n        log(`Token Fee Flag Captured from&nbsp;${previousHolder} by&nbsp;${currentHolder}`)\n        console.log(`Token Fee Flag Captured from ${previousHolder} by ${currentHolder}`)\n    })\n}\n\n\n\n\nwindow.app = {\n    initNoFeePaymaster,\n    initTokenFeePaymaster,\n    noFeeContractCall,\n    tokenFeeContractCall,\n    log\n}"]},"metadata":{},"sourceType":"module"}