{"ast":null,"code":"const TargetContract = artifacts.require('TargetContract');\n\nconst NoFeePaymaster = artifacts.require('NoFeePaymaster');\n\nconst TokenFeePaymaster = artifacts.require('TokenFeePaymaster');\n\nconst RelayHub = artifacts.require('RelayHub');\n\nconst Token = artifacts.require('Token');\n\nconst TokenBank = artifacts.require('TokenBank');\n\nmodule.exports = async function (deployer) {\n  const forwarder = require('../build/gsn/Forwarder').address;\n\n  await deployer.deploy(Token);\n  const token = await Token.deployed();\n  await deployer.deploy(TokenBank, token.address);\n  const tokenBank = await TokenBank.deployed();\n  token.mint(tokenBank.address);\n  token.passMinterRole(tokenBank.address);\n  await deployer.deploy(TargetContract, forwarder);\n\n  const relayHubAddress = require('../build/gsn/RelayHub.json').address;\n\n  await deployer.deploy(NoFeePaymaster);\n  const noFeepaymaster = await NoFeePaymaster.deployed();\n  await noFeepaymaster.setRelayHub(relayHubAddress);\n  await noFeepaymaster.setTrustedForwarder(forwarder); // only trusted forwarder atm\n\n  await noFeepaymaster.setToken(token.address);\n  await deployer.deploy(TokenFeePaymaster);\n  const tokenFeepaymaster = await TokenFeePaymaster.deployed();\n  await tokenFeepaymaster.setRelayHub(relayHubAddress);\n  await tokenFeepaymaster.setTrustedForwarder(forwarder); // only trusted forwarder atm\n\n  await tokenFeepaymaster.setToken(token.address);\n  console.log(`RelayHub(${relayHubAddress}) set on Paymaster(${noFeepaymaster.address})`);\n  const relayHub = await RelayHub.at(relayHubAddress);\n  await relayHub.depositFor(noFeepaymaster.address, {\n    value: 1e18.toString()\n  });\n  console.log(`1 ETH deposited to Paymaster(${noFeepaymaster.address})`);\n  console.log(`RelayHub(${relayHubAddress}) set on Paymaster(${tokenFeepaymaster.address})`);\n  await relayHub.depositFor(tokenFeepaymaster.address, {\n    value: 1e18.toString()\n  });\n  console.log(`1 ETH deposited to Paymaster(${tokenFeepaymaster.address})`);\n};","map":{"version":3,"sources":["/Users/jay/Desktop/Blockchain/ethereum-gasless-transactions/OpenGSN/migrations/2_deploy_contracts.js"],"names":["TargetContract","artifacts","require","NoFeePaymaster","TokenFeePaymaster","RelayHub","Token","TokenBank","module","exports","deployer","forwarder","address","deploy","token","deployed","tokenBank","mint","passMinterRole","relayHubAddress","noFeepaymaster","setRelayHub","setTrustedForwarder","setToken","tokenFeepaymaster","console","log","relayHub","at","depositFor","value","toString"],"mappings":"AAAA,MAAMA,cAAc,GAAGC,SAAS,CAACC,OAAV,CAAkB,gBAAlB,CAAvB;;AACA,MAAMC,cAAc,GAAGF,SAAS,CAACC,OAAV,CAAkB,gBAAlB,CAAvB;;AACA,MAAME,iBAAiB,GAAGH,SAAS,CAACC,OAAV,CAAkB,mBAAlB,CAA1B;;AACA,MAAMG,QAAQ,GAAGJ,SAAS,CAACC,OAAV,CAAkB,UAAlB,CAAjB;;AACA,MAAMI,KAAK,GAAGL,SAAS,CAACC,OAAV,CAAkB,OAAlB,CAAd;;AACA,MAAMK,SAAS,GAAGN,SAAS,CAACC,OAAV,CAAkB,WAAlB,CAAlB;;AAGAM,MAAM,CAACC,OAAP,GAAiB,gBAAgBC,QAAhB,EAA0B;AAEzC,QAAMC,SAAS,GAAGT,OAAO,CAAE,wBAAF,CAAP,CAAoCU,OAAtD;;AAED,QAAMF,QAAQ,CAACG,MAAT,CAAgBP,KAAhB,CAAN;AACA,QAAMQ,KAAK,GAAG,MAAMR,KAAK,CAACS,QAAN,EAApB;AAGC,QAAML,QAAQ,CAACG,MAAT,CAAgBN,SAAhB,EAA0BO,KAAK,CAACF,OAAhC,CAAN;AACD,QAAMI,SAAS,GAAG,MAAMT,SAAS,CAACQ,QAAV,EAAxB;AAECD,EAAAA,KAAK,CAACG,IAAN,CAAWD,SAAS,CAACJ,OAArB;AACAE,EAAAA,KAAK,CAACI,cAAN,CAAqBF,SAAS,CAACJ,OAA/B;AAEA,QAAMF,QAAQ,CAACG,MAAT,CAAgBb,cAAhB,EAAgCW,SAAhC,CAAN;;AAKA,QAAMQ,eAAe,GAAGjB,OAAO,CAAC,4BAAD,CAAP,CAAsCU,OAA9D;;AAEA,QAAMF,QAAQ,CAACG,MAAT,CAAgBV,cAAhB,CAAN;AACA,QAAMiB,cAAc,GAAG,MAAMjB,cAAc,CAACY,QAAf,EAA7B;AACA,QAAMK,cAAc,CAACC,WAAf,CAA2BF,eAA3B,CAAN;AACA,QAAMC,cAAc,CAACE,mBAAf,CAAmCX,SAAnC,CAAN,CAxByC,CAwBW;;AACpD,QAAMS,cAAc,CAACG,QAAf,CAAwBT,KAAK,CAACF,OAA9B,CAAN;AAGA,QAAMF,QAAQ,CAACG,MAAT,CAAgBT,iBAAhB,CAAN;AACA,QAAMoB,iBAAiB,GAAG,MAAMpB,iBAAiB,CAACW,QAAlB,EAAhC;AACA,QAAMS,iBAAiB,CAACH,WAAlB,CAA8BF,eAA9B,CAAN;AACA,QAAMK,iBAAiB,CAACF,mBAAlB,CAAsCX,SAAtC,CAAN,CA/ByC,CA+Bc;;AACvD,QAAMa,iBAAiB,CAACD,QAAlB,CAA2BT,KAAK,CAACF,OAAjC,CAAN;AAGAa,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWP,eAAgB,sBAAqBC,cAAc,CAACR,OAAQ,GAApF;AACA,QAAMe,QAAQ,GAAG,MAAMtB,QAAQ,CAACuB,EAAT,CAAYT,eAAZ,CAAvB;AACA,QAAMQ,QAAQ,CAACE,UAAT,CAAoBT,cAAc,CAACR,OAAnC,EAA4C;AAACkB,IAAAA,KAAK,EAAE,KAAKC,QAAL;AAAR,GAA5C,CAAN;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BN,cAAc,CAACR,OAAQ,GAAnE;AAGAa,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWP,eAAgB,sBAAqBK,iBAAiB,CAACZ,OAAQ,GAAvF;AACA,QAAMe,QAAQ,CAACE,UAAT,CAAoBL,iBAAiB,CAACZ,OAAtC,EAA+C;AAACkB,IAAAA,KAAK,EAAE,KAAKC,QAAL;AAAR,GAA/C,CAAN;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BF,iBAAiB,CAACZ,OAAQ,GAAtE;AACD,CA5CD","sourcesContent":["const TargetContract = artifacts.require('TargetContract')\nconst NoFeePaymaster = artifacts.require('NoFeePaymaster')\nconst TokenFeePaymaster = artifacts.require('TokenFeePaymaster')\nconst RelayHub = artifacts.require('RelayHub')\nconst Token = artifacts.require('Token')\nconst TokenBank = artifacts.require('TokenBank')\n\n\nmodule.exports = async function (deployer) {\n\n  const forwarder = require( '../build/gsn/Forwarder' ).address\n  \n\tawait deployer.deploy(Token)\n\tconst token = await Token.deployed()\n  \n\n  await deployer.deploy(TokenBank,token.address)\n\tconst tokenBank = await TokenBank.deployed()\n\n  token.mint(tokenBank.address)\n  token.passMinterRole(tokenBank.address)\n\n  await deployer.deploy(TargetContract, forwarder)\n\n  \n\n\n  const relayHubAddress = require('../build/gsn/RelayHub.json').address\n\n  await deployer.deploy(NoFeePaymaster)\n  const noFeepaymaster = await NoFeePaymaster.deployed()\n  await noFeepaymaster.setRelayHub(relayHubAddress)\n  await noFeepaymaster.setTrustedForwarder(forwarder) // only trusted forwarder atm\n  await noFeepaymaster.setToken(token.address)\n\n\n  await deployer.deploy(TokenFeePaymaster)\n  const tokenFeepaymaster = await TokenFeePaymaster.deployed()\n  await tokenFeepaymaster.setRelayHub(relayHubAddress)\n  await tokenFeepaymaster.setTrustedForwarder(forwarder) // only trusted forwarder atm\n  await tokenFeepaymaster.setToken(token.address)\n\n\n  console.log(`RelayHub(${relayHubAddress}) set on Paymaster(${noFeepaymaster.address})`)\n  const relayHub = await RelayHub.at(relayHubAddress)\n  await relayHub.depositFor(noFeepaymaster.address, {value: 1e18.toString()})\n  console.log(`1 ETH deposited to Paymaster(${noFeepaymaster.address})`)\n\n  \n  console.log(`RelayHub(${relayHubAddress}) set on Paymaster(${tokenFeepaymaster.address})`)\n  await relayHub.depositFor(tokenFeepaymaster.address, {value: 1e18.toString()})\n  console.log(`1 ETH deposited to Paymaster(${tokenFeepaymaster.address})`)\n}\n"]},"metadata":{},"sourceType":"script"}