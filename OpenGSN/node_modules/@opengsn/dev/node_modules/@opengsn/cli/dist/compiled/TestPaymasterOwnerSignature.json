{
    "contractName": "TestPaymasterOwnerSignature",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "actualCharge",
                    "type": "uint256"
                }
            ],
            "name": "SampleRecipientPostCall",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "SampleRecipientPreCall",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "CALLDATA_SIZE_LIMIT",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "FORWARDER_HUB_OVERHEAD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "PAYMASTER_ACCEPTANCE_BUDGET",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "POST_RELAYED_CALL_GAS_LIMIT",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "PRE_RELAYED_CALL_GAS_LIMIT",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "from",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "gas",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "validUntil",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct IForwarder.ForwardRequest",
                            "name": "request",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "gasPrice",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "pctRelayFee",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "baseRelayFee",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "relayWorker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "paymaster",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "forwarder",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "paymasterData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "clientId",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct GsnTypes.RelayData",
                            "name": "relayData",
                            "type": "tuple"
                        }
                    ],
                    "internalType": "struct GsnTypes.RelayRequest",
                    "name": "relayRequest",
                    "type": "tuple"
                }
            ],
            "name": "_verifyForwarder",
            "outputs": [],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "deposit",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getGasAndDataLimits",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "acceptanceBudget",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "preRelayedCallGasLimit",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "postRelayedCallGasLimit",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "calldataSizeLimit",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct IPaymaster.GasAndDataLimits",
                    "name": "limits",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getHubAddr",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getRelayHubDeposit",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "context",
                    "type": "bytes"
                },
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "gasUseWithoutPost",
                    "type": "uint256"
                },
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "gasPrice",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "pctRelayFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "baseRelayFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "relayWorker",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "paymaster",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "forwarder",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "paymasterData",
                            "type": "bytes"
                        },
                        {
                            "internalType": "uint256",
                            "name": "clientId",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct GsnTypes.RelayData",
                    "name": "relayData",
                    "type": "tuple"
                }
            ],
            "name": "postRelayedCall",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "contract IRelayHub",
                    "name": "hub",
                    "type": "address"
                }
            ],
            "name": "setRelayHub",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "forwarder",
                    "type": "address"
                }
            ],
            "name": "setTrustedForwarder",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "trustedForwarder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "versionPaymaster",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address payable",
                    "name": "destination",
                    "type": "address"
                }
            ],
            "name": "withdrawAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "address payable",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "withdrawRelayHubDepositTo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "from",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "gas",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "validUntil",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct IForwarder.ForwardRequest",
                            "name": "request",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "gasPrice",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "pctRelayFee",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "baseRelayFee",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "relayWorker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "paymaster",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "forwarder",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "paymasterData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "clientId",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct GsnTypes.RelayData",
                            "name": "relayData",
                            "type": "tuple"
                        }
                    ],
                    "internalType": "struct GsnTypes.RelayRequest",
                    "name": "relayRequest",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                },
                {
                    "internalType": "bytes",
                    "name": "approvalData",
                    "type": "bytes"
                },
                {
                    "internalType": "uint256",
                    "name": "maxPossibleGas",
                    "type": "uint256"
                }
            ],
            "name": "preRelayedCall",
            "outputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                },
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualCharge\",\"type\":\"uint256\"}],\"name\":\"SampleRecipientPostCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SampleRecipientPreCall\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLDATA_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORWARDER_HUB_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_ACCEPTANCE_BUDGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POST_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRE_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"}],\"name\":\"_verifyForwarder\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasAndDataLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHubDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRelayHub\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setRelayHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawRelayHubDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"context\":\"- the call context, as returned by the preRelayedCall\",\"gasUseWithoutPost\":\"- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.\",\"relayData\":\"- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.\",\"success\":\"- true if the relayed call succeeded, false if it reverted\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGasAndDataLimits()\":{\"notice\":\"Return the Gas Limits and msg.data max size constants used by the Paymaster.\"},\"getHubAddr()\":{\"notice\":\"return the relayHub of this contract.\"},\"getRelayHubDeposit()\":{\"notice\":\"check current deposit on relay hub.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state.\"},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"This demonstrates how dapps can provide an off-chain signatures to relayed transactions.\"},\"withdrawRelayHubDepositTo(uint256,address)\":{\"notice\":\"withdraw deposit from relayHub\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/test/TestPaymasterOwnerSignature.sol\":\"TestPaymasterOwnerSignature\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/BasePaymaster.sol\":{\"keccak256\":\"0x037963afa348ba25ed25d26f07a1b3545534e5447262eac8218f92246797569e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://482ab51f9c7a4fc86d3d1540a2465b1f5bf0a7244cc61de186233321dddbcdee\",\"dweb:/ipfs/QmY4geP56GPzkHADJ5xdks1ztrtFeVHqMu2SabHn8E3uuB\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/forwarder/IForwarder.sol\":{\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e42577c586894c9fc9e11a3281c0e2d4183121714fd1101380b6b2b66c144ba3\",\"dweb:/ipfs/QmPQphvUxhvnYGXtNRbU7WcmbEP2N7mMDgC5R8R9AqC9xG\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x9c717edb87debd2e6d3a7291ae1b2ec3248776617f20dbc2cbba66c7f1bf749c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ef2ce174df7e8dd8ac15c112768028bd89a517e21c354d5d35aa071f923e721d\",\"dweb:/ipfs/QmYHFK3FzfiiDRWhM8Q6KdT6YKmaA5JfDNKj6am7EymJU3\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/interfaces/IRelayHub.sol\":{\"keccak256\":\"0x3497133a7147174c498d2feeb2569b973396a8c2c220b5876fd9eb3b59841c85\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://32bb285a0f675310ee87647d00717e2dee9dbc7179e5455a3e1d7a2e121b6bf7\",\"dweb:/ipfs/QmZABWeS7pi5KfhoDUKyZHEvwqiAL4sYvjr3UcWZ7SvqCX\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x199e82e0a2833a97213b5c16ac9b4e2b1814f2e90a4c4916855cbc21e710ad5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92112fc87990f2d55c538946266c48f43e6ca442186ef3b8172eb4632deb0db3\",\"dweb:/ipfs/QmU6pqFXYT8fYfyhw7viRA775eBH4W7PAd589DVFGtSgxo\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x834859879435b9032dc629a03baaa0d7ce645c184997985a7b8da944086753bb\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://08ac05ead3b791dc42287fdfb3ac1a3734876ed19971ddfedc904910dc88ee72\",\"dweb:/ipfs/QmSPBuZtdr8QtLWQSzX7eQo754bxzR2wnxoeWJxGWzK8Qb\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/test/TestPaymasterEverythingAccepted.sol\":{\"keccak256\":\"0xebe2cf204d19752dc3fe1adacc70555826769ea80484ec59a52aff2df8c35164\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1d9cfc01e04657854ab72a806ac55b34b489f64f8d7463a8f70e57e1ac8b4e82\",\"dweb:/ipfs/QmcnXyGxsy4uf73T8tHCrDyVLkB9YfLy2cV7hZo3yj3Kh9\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/test/TestPaymasterOwnerSignature.sol\":{\"keccak256\":\"0x9cb9b32c303cd3d9eb190c8440fab98c5b4129b2c21df4c64f48b4c64b6c905e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://28f2221bb4f31d8e4bb02459f98ecf0e60d583db7596da7fdecd0efee277c658\",\"dweb:/ipfs/QmXZzUaH3uWrnUfFsdHP84wa12ruutX1K5rdksR32HtYqZ\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/utils/GsnEip712Library.sol\":{\"keccak256\":\"0x329a0634ba63c397bde0cf2b003b577cacf1bfbab9616bbf415781de243730d3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a6e52a2b8598d3478272f8791be1493645a14d850fac70c8a7180d72f00a45d2\",\"dweb:/ipfs/QmQmbSNNBU1LEgxEmhpVqhbts3RjEn9Zavwv5PmQJEdfoZ\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/utils/GsnTypes.sol\":{\"keccak256\":\"0x632b33731c279b0a14b00ceeaaed067e0570881bf31ef383b6970cb595566269\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c4ef0205cbfd132c978dac437b361749caecd2e69ae339b5826cb65a086bdbc1\",\"dweb:/ipfs/Qme5emF1fkmqfTWydJ4S97CbTidEx72VYvKLzTbapH3nGB\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/utils/GsnUtils.sol\":{\"keccak256\":\"0x93465757df9b5721f0dde979be1675f82296b8f3cd196c6eee29d828698cb0de\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b9a5628093b0cffc70f851a64aef968e4a379b98d60a7855fa9afce102dad052\",\"dweb:/ipfs/QmaQZXC9vxMrhwXXsr8C6fNpYPQx1PfiAbfmweL3aHZCy5\"]},\"/Users/dror/IdeaProjects/gsn223/packages/contracts/src/utils/MinLibBytes.sol\":{\"keccak256\":\"0x8063af8e0f134be3d794ad39bdc0041f33a16c91a4ee7abb968d4c15c8d10c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c56adf5ddc717546e922b5f0cdb1d2bf084b070d2256b684a746d535cefdfa23\",\"dweb:/ipfs/QmbGgdbkpg4fz79c8tgKFJB4afXHRYgL3iMRf9KBQSVkWu\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x828774372910d18e7337bc31a288d786748af4cd9da80222467e486ed1d569ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e842b3d6847ba32ca4f67c91d46ccb3996f3ff923266913e4b0bcda006e07536\",\"dweb:/ipfs/QmWkaboTtbEz3aazAqhHfn9TLrQNQZQckNHC16jLbezMWc\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
    "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6113f98061007e6000396000f3fe60806040526004361061012d5760003560e01c8063921276ea116100ab578063d0e30db01161006f578063d0e30db0146103fd578063da74222814610405578063df463a6614610425578063f2fde38b1461043a578063f9c002f71461045a578063fa09e6301461047157600080fd5b8063921276ea14610346578063a5dcd07b14610368578063b039a88f14610388578063b90b41cf146103d0578063bbdaa3c9146103e657600080fd5b806374e861d6116100f257806374e861d61461029857806376fa01c3146102ca5780637bb05264146102ea5780637da0a8771461030a5780638da5cb5b1461032857600080fd5b8062be5dd4146101f15780632afe31c1146102285780632d14c4b71461024b5780635c5e3db11461026d578063715018a61461028357600080fd5b366101ec576001546001600160a01b031661018b5760405162461bcd60e51b81526020600482015260196024820152781c995b185e481a1d58881859191c995cdcc81b9bdd081cd95d603a1b60448201526064015b60405180910390fd5b60015460405163aa67c91960e01b81523060048201526001600160a01b039091169063aa67c9199034906024016000604051808303818588803b1580156101d157600080fd5b505af11580156101e5573d6000803e3d6000fd5b5050505050005b600080fd5b3480156101fd57600080fd5b5061021161020c366004611163565b610491565b60405161021f929190611291565b60405180910390f35b34801561023457600080fd5b5061023d610620565b60405190815260200161021f565b34801561025757600080fd5b5061026b610266366004611219565b6106a1565b005b34801561027957600080fd5b5061023d61290481565b34801561028f57600080fd5b5061026b610733565b3480156102a457600080fd5b506001546001600160a01b03165b6040516001600160a01b03909116815260200161021f565b3480156102d657600080fd5b5061026b6102e5366004611096565b610769565b3480156102f657600080fd5b5061026b610305366004611055565b6107ab565b34801561031657600080fd5b506002546001600160a01b03166102b2565b34801561033457600080fd5b506000546001600160a01b03166102b2565b34801561035257600080fd5b5061035b6107f7565b60405161021f91906112b5565b34801561037457600080fd5b5061026b610383366004611126565b610817565b34801561039457600080fd5b5061039d61089e565b60405161021f91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b3480156103dc57600080fd5b5061023d61c35081565b3480156103f257600080fd5b5061023d6201adb081565b61026b610907565b34801561041157600080fd5b5061026b610420366004611055565b6109bc565b34801561043157600080fd5b5061023d610a08565b34801561044657600080fd5b5061026b610455366004611055565b610a1a565b34801561046657600080fd5b5061023d620186a081565b34801561047d57600080fd5b5061026b61048c366004611055565b610ab2565b6060600061049e88610817565b600061059786868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061059192506104e991508d9050806112fd565b6104f7906020810190611055565b6040516020016105319190684920617070726f766560b81b815260609190911b6bffffffffffffffffffffffff19166009820152601d0190565b60408051601f1981840301815282825280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000084830152603c8085019190915282518085039091018152605c909301909152815191012090565b90610b3e565b90506105ab6000546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146106005760405162461bcd60e51b81526020600482015260126024820152711d195cdd0e881b9bdd08185c1c1c9bdd995960721b6044820152606401610182565b505060408051602081019091526000808252909150965096945050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561066457600080fd5b505afa158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c9190611200565b905090565b6000546001600160a01b031633146106cb5760405162461bcd60e51b8152600401610182906112c8565b600154604051627b8a6760e11b8152600481018490526001600160a01b0383811660248301529091169062f714ce90604401600060405180830381600087803b15801561071757600080fd5b505af115801561072b573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331461075d5760405162461bcd60e51b8152600401610182906112c8565b6107676000610be8565b565b604080518415158152602081018490527f8c7dc6f54401600ae78b31aec3dec125cfa5b7bcbf4ff3cbc5bfd818ba082b49910160405180910390a15050505050565b6000546001600160a01b031633146107d55760405162461bcd60e51b8152600401610182906112c8565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60606040518060600160405280602181526020016113a360219139905090565b6108246020820182611313565b6108359060c081019060a001611055565b6002546001600160a01b039081169116146108925760405162461bcd60e51b815260206004820152601860248201527f466f72776172646572206973206e6f74207472757374656400000000000000006044820152606401610182565b61089b81610c38565b50565b6108c96040518060800160405280600081526020016000815260200160008152602001600081525090565b604051806080016040528061c350620186a06108e59190611329565b8152602001620186a081526020016201adb08152602001612904815250905090565b6001546001600160a01b031661095b5760405162461bcd60e51b81526020600482015260196024820152781c995b185e481a1d58881859191c995cdcc81b9bdd081cd95d603a1b6044820152606401610182565b60015460405163aa67c91960e01b81523060048201526001600160a01b039091169063aa67c9199034906024016000604051808303818588803b1580156109a157600080fd5b505af11580156109b5573d6000803e3d6000fd5b5050505050565b6000546001600160a01b031633146109e65760405162461bcd60e51b8152600401610182906112c8565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b610a1761c350620186a0611329565b81565b6000546001600160a01b03163314610a445760405162461bcd60e51b8152600401610182906112c8565b6001600160a01b038116610aa95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610182565b61089b81610be8565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610af657600080fd5b505afa158015610b0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2e9190611200565b9050610b3a81836106a1565b5050565b6000815160411415610b725760208201516040830151606084015160001a610b6886828585610e21565b9350505050610be2565b815160401415610b9a5760208201516040830151610b91858383610fca565b92505050610be2565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610182565b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080610c4583806112fd565b610c56906040810190602001611055565b6001600160a01b031663572b6c0560e01b610c746020860186611313565b610c859060c081019060a001611055565b6040516001600160a01b03909116602482015260440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610cd99190611275565b600060405180830381855afa9150503d8060008114610d14576040519150601f19603f3d011682016040523d82523d6000602084013e610d19565b606091505b509150915081610d6b5760405162461bcd60e51b815260206004820152601c60248201527f697354727573746564466f727761726465723a207265766572746564000000006044820152606401610182565b8051602014610dbc5760405162461bcd60e51b815260206004820181905260248201527f697354727573746564466f727761726465723a2062616420726573706f6e73656044820152606401610182565b80806020019051810190610dd09190611079565b610e1c5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420666f7277617264657220666f7220726563697069656e74006044820152606401610182565b505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610e9e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610182565b8360ff16601b1480610eb357508360ff16601c145b610f0a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610182565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610f5e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610fc15760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610182565b95945050505050565b60006001600160ff1b03821660ff83901c601b01610fea86828785610e21565b9695505050505050565b60008083601f84011261100657600080fd5b50813567ffffffffffffffff81111561101e57600080fd5b60208301915083602082850101111561103657600080fd5b9250929050565b60006040828403121561104f57600080fd5b50919050565b60006020828403121561106757600080fd5b81356110728161137f565b9392505050565b60006020828403121561108b57600080fd5b815161107281611394565b6000806000806000608086880312156110ae57600080fd5b853567ffffffffffffffff808211156110c657600080fd5b6110d289838a01610ff4565b9097509550602088013591506110e782611394565b909350604087013592506060870135908082111561110457600080fd5b508601610100818903121561111857600080fd5b809150509295509295909350565b60006020828403121561113857600080fd5b813567ffffffffffffffff81111561114f57600080fd5b61115b8482850161103d565b949350505050565b6000806000806000806080878903121561117c57600080fd5b863567ffffffffffffffff8082111561119457600080fd5b6111a08a838b0161103d565b975060208901359150808211156111b657600080fd5b6111c28a838b01610ff4565b909750955060408901359150808211156111db57600080fd5b506111e889828a01610ff4565b979a9699509497949695606090950135949350505050565b60006020828403121561121257600080fd5b5051919050565b6000806040838503121561122c57600080fd5b82359150602083013561123e8161137f565b809150509250929050565b6000815180845261126181602086016020860161134f565b601f01601f19169290920160200192915050565b6000825161128781846020870161134f565b9190910192915050565b6040815260006112a46040830185611249565b905082151560208301529392505050565b6020815260006110726020830184611249565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000823560de1983360301811261128757600080fd5b6000823560fe1983360301811261128757600080fd5b6000821982111561134a57634e487b7160e01b600052601160045260246000fd5b500190565b60005b8381101561136a578181015183820152602001611352565b83811115611379576000848401525b50505050565b6001600160a01b038116811461089b57600080fd5b801515811461089b57600080fdfe322e322e332b6f70656e67736e2e746573742d7065612e697061796d6173746572a26469706673582212209940088ced3cfdf271ccafa28bf803a6906b3716174e7f0f7cf54d466bda5b6a64736f6c63430008070033",
    "deployedBytecode": "",
    "immutableReferences": {},
    "sourceMap": "199:825:19:-:0;;;;;;;;;;;;-1:-1:-1;867:23:36;665:10:37;867:9:36;:23::i;:::-;199:825:19;;2041:169:36;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:36;;;-1:-1:-1;;;;;;2131:17:36;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;199:825:19:-;;;;;;;",
    "deployedSourceMap": "199:825:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3026:8:0;;-1:-1:-1;;;;;3026:8:0;3010:69;;;;-1:-1:-1;;;3010:69:0;;9128:2:40;3010:69:0;;;9110:21:40;9167:2;9147:18;;;9140:30;-1:-1:-1;;;9186:18:40;;;9179:55;9251:18;;3010:69:0;;;;;;;;;3089:8;;:51;;-1:-1:-1;;;3089:51:0;;3134:4;3089:51;;;5834::40;-1:-1:-1;;;;;3089:8:0;;;;:19;;3115:9;;5807:18:40;;3089:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;199:825:19;;;;;419:603;;;;;;;;;;-1:-1:-1;419:603:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2643:139:0;;;;;;;;;;;;;:::i;:::-;;;12101:25:40;;;12089:2;12074:18;2643:139:0;11955:177:40;3192:139:0;;;;;;;;;;-1:-1:-1;3192:139:0;;;;;:::i;:::-;;:::i;:::-;;1148:51;;;;;;;;;;;;1194:5;1148:51;;1605:92:36;;;;;;;;;;;;;:::i;603:102:0:-;;;;;;;;;;-1:-1:-1;689:8:0;;-1:-1:-1;;;;;689:8:0;603:102;;;-1:-1:-1;;;;;5852:32:40;;;5834:51;;5822:2;5807:18;603:102:0;5688:203:40;924:331:18;;;;;;;;;;-1:-1:-1;924:331:18;;;;;:::i;:::-;;:::i;2262:84:0:-;;;;;;;;;;-1:-1:-1;2262:84:0;;;;;:::i;:::-;;:::i;2477:115::-;;;;;;;;;;-1:-1:-1;2568:17:0;;-1:-1:-1;;;;;2568:17:0;2477:115;;973:85:36;;;;;;;;;;-1:-1:-1;1019:7:36;1045:6;-1:-1:-1;;;;;1045:6:36;973:85;;221:141:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1733:274:0:-;;;;;;;;;;-1:-1:-1;1733:274:0;;;;;:::i;:::-;;:::i;1206:362::-;;;;;;;;;;;;;:::i;:::-;;;;;;11741:13:40;;11723:32;;11811:4;11799:17;;;11793:24;11771:20;;;11764:54;11874:4;11862:17;;;11856:24;11834:20;;;11827:54;11937:4;11925:17;;;11919:24;11897:20;;;11890:54;;;;11710:3;11695:19;;11508:442;776:54:0;;;;;;;;;;;;825:5;776:54;;971:60;;;;;;;;;;;;1025:6;971:60;;1261:181:18;;;:::i;2352:119:0:-;;;;;;;;;;-1:-1:-1;2352:119:0;;;;;:::i;:::-;;:::i;1037:105::-;;;;;;;;;;;;;:::i;1846:189:36:-;;;;;;;;;;-1:-1:-1;1846:189:36;;;;;:::i;:::-;;:::i;906:59:0:-;;;;;;;;;;;;959:6;906:59;;1448:180:18;;;;;;;;;;-1:-1:-1;1448:180:18;;;;;:::i;:::-;;:::i;419:603:19:-;653:12;667:4;720:30;737:12;720:16;:30::i;:::-;761:14;790:140;917:12;;790:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:105:19;;-1:-1:-1;830:20:19;;-1:-1:-1;830:12:19;;-1:-1:-1;830:12:19;:20;:::i;:::-;:25;;;;;;;:::i;:::-;800:56;;;;;;;-1:-1:-1;;;5157:24:40;;5218:2;5214:15;;;;-1:-1:-1;;5210:53:40;5206:1;5197:11;;5190:74;5289:2;5280:12;;4927:371;800:56:19;;;;-1:-1:-1;;800:56:19;;;;;;;;;790:67;;800:56;790:67;;;;5545:66:40;5240:58:38;;;5533:79:40;5628:12;;;;5621:28;;;;5240:58:38;;;;;;;;;;5665:12:40;;;;5240:58:38;;;5230:69;;;;;;5041:265;790:105:19;:126;;:140::i;:::-;761:169;;958:7;1019::36;1045:6;-1:-1:-1;;;;;1045:6:36;;973:85;958:7:19;-1:-1:-1;;;;;948:17:19;:6;-1:-1:-1;;;;;948:17:19;;940:48;;;;-1:-1:-1;;;940:48:19;;11363:2:40;940:48:19;;;11345:21:40;11402:2;11382:18;;;11375:30;-1:-1:-1;;;11421:18:40;;;11414:48;11479:18;;940:48:19;11161:342:40;940:48:19;-1:-1:-1;;998:17:19;;;;;;;;;1009:5;998:17;;;;;-1:-1:-1;419:603:19;;;;;;;;;:::o;2643:139:0:-;2742:8;;:33;;-1:-1:-1;;;2742:33:0;;2769:4;2742:33;;;5834:51:40;2719:4:0;;-1:-1:-1;;;;;2742:8:0;;:18;;5807::40;;2742:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2735:40;;2643:139;:::o;3192:::-;1019:7:36;1045:6;-1:-1:-1;;;;;1045:6:36;665:10:37;1185:23:36;1177:68;;;;-1:-1:-1;;;1177:68:36;;;;;;;:::i;:::-;3291:8:0::1;::::0;:33:::1;::::0;-1:-1:-1;;;3291:33:0;;::::1;::::0;::::1;12327:25:40::0;;;-1:-1:-1;;;;;12388:32:40;;;12368:18;;;12361:60;3291:8:0;;::::1;::::0;:17:::1;::::0;12300:18:40;;3291:33:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3192:139:::0;;:::o;1605:92:36:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:36;665:10:37;1185:23:36;1177:68;;;;-1:-1:-1;;;1177:68:36;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;924:331:18:-;1197:51;;;6089:14:40;;6082:22;6064:41;;6136:2;6121:18;;6114:34;;;1197:51:18;;6037:18:40;1197:51:18;;;;;;;924:331;;;;;:::o;2262:84:0:-;1019:7:36;1045:6;-1:-1:-1;;;;;1045:6:36;665:10:37;1185:23:36;1177:68;;;;-1:-1:-1;;;1177:68:36;;;;;;;:::i;:::-;2325:8:0::1;:14:::0;;-1:-1:-1;;;;;;2325:14:0::1;-1:-1:-1::0;;;;;2325:14:0;;;::::1;::::0;;;::::1;::::0;;2262:84::o;221:141:18:-;289:13;313:42;;;;;;;;;;;;;;;;;;;221:141;:::o;1733:274:0:-;1876:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;1854:17;;-1:-1:-1;;;;;1854:17:0;;;1846:62;;;1838:99;;;;-1:-1:-1;;;1838:99:0;;9482:2:40;1838:99:0;;;9464:21:40;9521:2;9501:18;;;9494:30;9560:26;9540:18;;;9533:54;9604:18;;1838:99:0;9280:348:40;1838:99:0;1947:53;1987:12;1947:39;:53::i;:::-;1733:274;:::o;1206:362::-;1304:41;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:41:0;1369:192;;;;;;;;825:5;959:6;1091:51;;;;:::i;:::-;1369:192;;;;959:6;1369:192;;;;1025:6;1369:192;;;;1194:5;1369:192;;;1362:199;;1206:362;:::o;1261:181:18:-;1321:8;;-1:-1:-1;;;;;1321:8:18;1305:69;;;;-1:-1:-1;;;1305:69:18;;9128:2:40;1305:69:18;;;9110:21:40;9167:2;9147:18;;;9140:30;-1:-1:-1;;;9186:18:40;;;9179:55;9251:18;;1305:69:18;8926:349:40;1305:69:18;1384:8;;:51;;-1:-1:-1;;;1384:51:18;;1429:4;1384:51;;;5834::40;-1:-1:-1;;;;;1384:8:18;;;;:19;;1410:9;;5807:18:40;;1384:51:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1261:181::o;2352:119:0:-;1019:7:36;1045:6;-1:-1:-1;;;;;1045:6:36;665:10:37;1185:23:36;1177:68;;;;-1:-1:-1;;;1177:68:36;;;;;;;:::i;:::-;2435:17:0::1;:29:::0;;-1:-1:-1;;;;;;2435:29:0::1;-1:-1:-1::0;;;;;2435:29:0;;;::::1;::::0;;;::::1;::::0;;2352:119::o;1037:105::-;1091:51;825:5;959:6;1091:51;:::i;:::-;1037:105;:::o;1846:189:36:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:36;665:10:37;1185:23:36;1177:68;;;;-1:-1:-1;;;1177:68:36;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:36;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:36;;8364:2:40;1926:73:36::1;::::0;::::1;8346:21:40::0;8403:2;8383:18;;;8376:30;8442:34;8422:18;;;8415:62;-1:-1:-1;;;8493:18:40;;;8486:36;8539:19;;1926:73:36::1;8162:402:40::0;1926:73:36::1;2009:19;2019:8;2009:9;:19::i;1448:180:18:-:0;1532:8;;:33;;-1:-1:-1;;;1532:33:18;;1559:4;1532:33;;;5834:51:40;1515:14:18;;-1:-1:-1;;;;;1532:8:18;;:18;;5807::40;;1532:33:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1515:50;;1575:46;1601:6;1609:11;1575:25;:46::i;:::-;1505:123;1448:180;:::o;1288:1241:38:-;1366:7;1582:9;:16;1602:2;1582:22;1578:945;;;1871:4;1856:20;;1850:27;1920:4;1905:20;;1899:27;1977:4;1962:20;;1956:27;1620:9;1948:36;2018:22;2026:4;1948:36;1850:27;1899;2018:7;:22::i;:::-;2011:29;;;;;;;1578:945;2061:9;:16;2081:2;2061:22;2057:466;;;2330:4;2315:20;;2309:27;2380:4;2365:20;;2359:27;2420:20;2428:4;2309:27;2359;2420:7;:20::i;:::-;2413:27;;;;;;2057:466;2471:41;;-1:-1:-1;;;2471:41:38;;7644:2:40;2471:41:38;;;7626:21:40;7683:2;7663:18;;;7656:30;7722:33;7702:18;;;7695:61;7773:18;;2471:41:38;7442:355:40;2057:466:38;1288:1241;;;;:::o;2041:169:36:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:36;;;-1:-1:-1;;;;;;2131:17:36;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;2051:538:27:-;2153:12;;2187:20;:12;;:20;:::i;:::-;:23;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2187:34:27;-1:-1:-1;;;2320:22:27;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;2235:131;;-1:-1:-1;;;;;5852:32:40;;;2235:131:27;;;5834:51:40;5807:18;;2235:131:27;;;-1:-1:-1;;2235:131:27;;;;;;;;;;;;;;-1:-1:-1;;;;;2235:131:27;-1:-1:-1;;;;;;2235:131:27;;;;;;;;;;2187:189;;;;2235:131;2187:189;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2152:224;;;;2394:7;2386:48;;;;-1:-1:-1;;;2386:48:27;;8771:2:40;2386:48:27;;;8753:21:40;8810:2;8790:18;;;8783:30;8849;8829:18;;;8822:58;8897:18;;2386:48:27;8569:352:40;2386:48:27;2452:3;:10;2466:2;2452:16;2444:61;;;;-1:-1:-1;;;2444:61:27;;10641:2:40;2444:61:27;;;10623:21:40;;;10660:18;;;10653:30;10719:34;10699:18;;;10692:62;10771:18;;2444:61:27;10439:356:40;2444:61:27;2534:3;2523:23;;;;;;;;;;;;:::i;:::-;2515:67;;;;-1:-1:-1;;;2515:67:27;;8004:2:40;2515:67:27;;;7986:21:40;8043:2;8023:18;;;8016:30;8082:33;8062:18;;;8055:61;8133:18;;2515:67:27;7802:355:40;2515:67:27;2142:447;;2051:538;:::o;3265:1486:38:-;3388:7;4316:66;4302:80;;;4281:161;;;;-1:-1:-1;;;4281:161:38;;9835:2:40;4281:161:38;;;9817:21:40;9874:2;9854:18;;;9847:30;9913:34;9893:18;;;9886:62;-1:-1:-1;;;9964:18:40;;;9957:32;10006:19;;4281:161:38;9633:398:40;4281:161:38;4460:1;:7;;4465:2;4460:7;:18;;;;4471:1;:7;;4476:2;4471:7;4460:18;4452:65;;;;-1:-1:-1;;;4452:65:38;;10238:2:40;4452:65:38;;;10220:21:40;10277:2;10257:18;;;10250:30;10316:34;10296:18;;;10289:62;-1:-1:-1;;;10367:18:40;;;10360:32;10409:19;;4452:65:38;10036:398:40;4452:65:38;4629:24;;;4612:14;4629:24;;;;;;;;;6386:25:40;;;6459:4;6447:17;;6427:18;;;6420:45;;;;6481:18;;;6474:34;;;6524:18;;;6517:34;;;4629:24:38;;6358:19:40;;4629:24:38;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4629:24:38;;-1:-1:-1;;4629:24:38;;;-1:-1:-1;;;;;;;4671:20:38;;4663:57;;;;-1:-1:-1;;;4663:57:38;;7291:2:40;4663:57:38;;;7273:21:40;7330:2;7310:18;;;7303:30;7369:26;7349:18;;;7342:54;7413:18;;4663:57:38;7089:348:40;4663:57:38;4738:6;3265:1486;-1:-1:-1;;;;;3265:1486:38:o;2780:359::-;2887:7;-1:-1:-1;;;;;2970:75:38;;3071:3;3067:12;;;3081:2;3063:21;3110:22;3118:4;3063:21;3127:1;2970:75;3110:7;:22::i;:::-;3103:29;2780:359;-1:-1:-1;;;;;;2780:359:38:o;14:347:40:-;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:55;;147:1;144;137:12;96:55;-1:-1:-1;170:20:40;;213:18;202:30;;199:50;;;245:1;242;235:12;199:50;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:59;;;351:1;348;341:12;296:59;14:347;;;;;:::o;366:160::-;431:5;476:2;467:6;462:3;458:16;454:25;451:45;;;492:1;489;482:12;451:45;-1:-1:-1;514:6:40;366:160;-1:-1:-1;366:160:40:o;531:247::-;590:6;643:2;631:9;622:7;618:23;614:32;611:52;;;659:1;656;649:12;611:52;698:9;685:23;717:31;742:5;717:31;:::i;:::-;767:5;531:247;-1:-1:-1;;;531:247:40:o;1043:245::-;1110:6;1163:2;1151:9;1142:7;1138:23;1134:32;1131:52;;;1179:1;1176;1169:12;1131:52;1211:9;1205:16;1230:28;1252:5;1230:28;:::i;1293:895::-;1416:6;1424;1432;1440;1448;1501:3;1489:9;1480:7;1476:23;1472:33;1469:53;;;1518:1;1515;1508:12;1469:53;1558:9;1545:23;1587:18;1628:2;1620:6;1617:14;1614:34;;;1644:1;1641;1634:12;1614:34;1683:58;1733:7;1724:6;1713:9;1709:22;1683:58;:::i;:::-;1760:8;;-1:-1:-1;1657:84:40;-1:-1:-1;1845:2:40;1830:18;;1817:32;;-1:-1:-1;1858:28:40;1817:32;1858:28;:::i;:::-;1905:5;;-1:-1:-1;1957:2:40;1942:18;;1929:32;;-1:-1:-1;2014:2:40;1999:18;;1986:32;;2030:16;;;2027:36;;;2059:1;2056;2049:12;2027:36;-1:-1:-1;2082:24:40;;2140:3;2122:16;;;2118:26;2115:46;;;2157:1;2154;2147:12;2115:46;2180:2;2170:12;;;1293:895;;;;;;;;:::o;2463:366::-;2554:6;2607:2;2595:9;2586:7;2582:23;2578:32;2575:52;;;2623:1;2620;2613:12;2575:52;2663:9;2650:23;2696:18;2688:6;2685:30;2682:50;;;2728:1;2725;2718:12;2682:50;2751:72;2815:7;2806:6;2795:9;2791:22;2751:72;:::i;:::-;2741:82;2463:366;-1:-1:-1;;;;2463:366:40:o;2834:1030::-;2974:6;2982;2990;2998;3006;3014;3067:3;3055:9;3046:7;3042:23;3038:33;3035:53;;;3084:1;3081;3074:12;3035:53;3124:9;3111:23;3153:18;3194:2;3186:6;3183:14;3180:34;;;3210:1;3207;3200:12;3180:34;3233:72;3297:7;3288:6;3277:9;3273:22;3233:72;:::i;:::-;3223:82;;3358:2;3347:9;3343:18;3330:32;3314:48;;3387:2;3377:8;3374:16;3371:36;;;3403:1;3400;3393:12;3371:36;3442:60;3494:7;3483:8;3472:9;3468:24;3442:60;:::i;:::-;3521:8;;-1:-1:-1;3416:86:40;-1:-1:-1;3609:2:40;3594:18;;3581:32;;-1:-1:-1;3625:16:40;;;3622:36;;;3654:1;3651;3644:12;3622:36;;3693:60;3745:7;3734:8;3723:9;3719:24;3693:60;:::i;:::-;2834:1030;;;;-1:-1:-1;2834:1030:40;;;;;3854:2;3839:18;;;3826:32;;2834:1030;-1:-1:-1;;;;2834:1030:40:o;3869:184::-;3939:6;3992:2;3980:9;3971:7;3967:23;3963:32;3960:52;;;4008:1;4005;3998:12;3960:52;-1:-1:-1;4031:16:40;;3869:184;-1:-1:-1;3869:184:40:o;4058:323::-;4134:6;4142;4195:2;4183:9;4174:7;4170:23;4166:32;4163:52;;;4211:1;4208;4201:12;4163:52;4247:9;4234:23;4224:33;;4307:2;4296:9;4292:18;4279:32;4320:31;4345:5;4320:31;:::i;:::-;4370:5;4360:15;;;4058:323;;;;;:::o;4386:257::-;4427:3;4465:5;4459:12;4492:6;4487:3;4480:19;4508:63;4564:6;4557:4;4552:3;4548:14;4541:4;4534:5;4530:16;4508:63;:::i;:::-;4625:2;4604:15;-1:-1:-1;;4600:29:40;4591:39;;;;4632:4;4587:50;;4386:257;-1:-1:-1;;4386:257:40:o;4648:274::-;4777:3;4815:6;4809:13;4831:53;4877:6;4872:3;4865:4;4857:6;4853:17;4831:53;:::i;:::-;4900:16;;;;;4648:274;-1:-1:-1;;4648:274:40:o;6562:298::-;6731:2;6720:9;6713:21;6694:4;6751:44;6791:2;6780:9;6776:18;6768:6;6751:44;:::i;:::-;6743:52;;6845:6;6838:14;6831:22;6826:2;6815:9;6811:18;6804:50;6562:298;;;;;:::o;6865:219::-;7014:2;7003:9;6996:21;6977:4;7034:44;7074:2;7063:9;7059:18;7051:6;7034:44;:::i;10800:356::-;11002:2;10984:21;;;11021:18;;;11014:30;11080:34;11075:2;11060:18;;11053:62;11147:2;11132:18;;10800:356::o;12432:332::-;12532:4;12590:11;12577:25;12684:3;12680:8;12669;12653:14;12649:29;12645:44;12625:18;12621:69;12611:97;;12704:1;12701;12694:12;12769:327;12864:4;12922:11;12909:25;13016:3;13012:8;13001;12985:14;12981:29;12977:44;12957:18;12953:69;12943:97;;13036:1;13033;13026:12;13101:225;13141:3;13172:1;13168:6;13165:1;13162:13;13159:136;;;13217:10;13212:3;13208:20;13205:1;13198:31;13252:4;13249:1;13242:15;13280:4;13277:1;13270:15;13159:136;-1:-1:-1;13311:9:40;;13101:225::o;13331:258::-;13403:1;13413:113;13427:6;13424:1;13421:13;13413:113;;;13503:11;;;13497:18;13484:11;;;13477:39;13449:2;13442:10;13413:113;;;13544:6;13541:1;13538:13;13535:48;;;13579:1;13570:6;13565:3;13561:16;13554:27;13535:48;;13331:258;;;:::o;13594:131::-;-1:-1:-1;;;;;13669:31:40;;13659:42;;13649:70;;13715:1;13712;13705:12;13730:118;13816:5;13809:13;13802:21;13795:5;13792:32;13782:60;;13838:1;13835;13828:12",
    "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\nimport \"./TestPaymasterEverythingAccepted.sol\";\n\ncontract TestPaymasterOwnerSignature is TestPaymasterEverythingAccepted {\n    using ECDSA for bytes32;\n\n    /**\n     * This demonstrates how dapps can provide an off-chain signatures to relayed transactions.\n     */\n    function preRelayedCall(\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData,\n        uint256 maxPossibleGas\n    )\n    external\n    view\n    override\n    returns (bytes memory, bool) {\n        (signature, maxPossibleGas);\n        _verifyForwarder(relayRequest);\n\n        address signer =\n            keccak256(abi.encodePacked(\"I approve\", relayRequest.request.from))\n            .toEthSignedMessageHash()\n            .recover(approvalData);\n        require(signer == owner(), \"test: not approved\");\n        return (\"\",false);\n    }\n}\n",
    "sourcePath": "/Users/dror/IdeaProjects/gsn223/packages/contracts/src/test/TestPaymasterOwnerSignature.sol",
    "ast": {
        "absolutePath": "/Users/dror/IdeaProjects/gsn223/packages/contracts/src/test/TestPaymasterOwnerSignature.sol",
        "exportedSymbols": {
            "BasePaymaster": [
                199
            ],
            "Context": [
                7513
            ],
            "ECDSA": [
                7696
            ],
            "GsnEip712Library": [
                6190
            ],
            "GsnTypes": [
                6218
            ],
            "GsnUtils": [
                6265
            ],
            "IForwarder": [
                3584
            ],
            "IPaymaster": [
                3864
            ],
            "IRelayHub": [
                4211
            ],
            "IRelayRecipient": [
                4240
            ],
            "IStakeManager": [
                4404
            ],
            "MinLibBytes": [
                6380
            ],
            "Ownable": [
                7492
            ],
            "SafeMath": [
                8008
            ],
            "TestPaymasterEverythingAccepted": [
                5019
            ],
            "TestPaymasterOwnerSignature": [
                5086
            ]
        },
        "id": 5087,
        "license": "GPL-3.0-only",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 5021,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "41:23:19"
            },
            {
                "id": 5022,
                "literals": [
                    "abicoder",
                    "v2"
                ],
                "nodeType": "PragmaDirective",
                "src": "65:19:19"
            },
            {
                "absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                "id": 5023,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 5087,
                "sourceUnit": 7697,
                "src": "86:62:19",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/dror/IdeaProjects/gsn223/packages/contracts/src/test/TestPaymasterEverythingAccepted.sol",
                "file": "./TestPaymasterEverythingAccepted.sol",
                "id": 5024,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 5087,
                "sourceUnit": 5020,
                "src": "150:47:19",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5025,
                            "name": "TestPaymasterEverythingAccepted",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5019,
                            "src": "239:31:19"
                        },
                        "id": 5026,
                        "nodeType": "InheritanceSpecifier",
                        "src": "239:31:19"
                    }
                ],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 5086,
                "linearizedBaseContracts": [
                    5086,
                    5019,
                    199,
                    7492,
                    7513,
                    3864
                ],
                "name": "TestPaymasterOwnerSignature",
                "nameLocation": "208:27:19",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 5029,
                        "libraryName": {
                            "id": 5027,
                            "name": "ECDSA",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7696,
                            "src": "283:5:19"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "277:24:19",
                        "typeName": {
                            "id": 5028,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "293:7:19",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        }
                    },
                    {
                        "baseFunctions": [
                            4944
                        ],
                        "body": {
                            "id": 5084,
                            "nodeType": "Block",
                            "src": "673:349:19",
                            "statements": [
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "id": 5047,
                                                "name": "signature",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5035,
                                                "src": "684:9:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            },
                                            {
                                                "id": 5048,
                                                "name": "maxPossibleGas",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5039,
                                                "src": "695:14:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "id": 5049,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "683:27:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bytes_calldata_ptr_$_t_uint256_$",
                                            "typeString": "tuple(bytes calldata,uint256)"
                                        }
                                    },
                                    "id": 5050,
                                    "nodeType": "ExpressionStatement",
                                    "src": "683:27:19"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 5052,
                                                "name": "relayRequest",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5033,
                                                "src": "737:12:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_RelayRequest_$6217_calldata_ptr",
                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_RelayRequest_$6217_calldata_ptr",
                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                }
                                            ],
                                            "id": 5051,
                                            "name": "_verifyForwarder",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 88,
                                            "src": "720:16:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_RelayRequest_$6217_calldata_ptr_$returns$__$",
                                                "typeString": "function (struct GsnTypes.RelayRequest calldata) view"
                                            }
                                        },
                                        "id": 5053,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "720:30:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 5054,
                                    "nodeType": "ExpressionStatement",
                                    "src": "720:30:19"
                                },
                                {
                                    "assignments": [
                                        5056
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 5056,
                                            "mutability": "mutable",
                                            "name": "signer",
                                            "nameLocation": "769:6:19",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 5084,
                                            "src": "761:14:19",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 5055,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "761:7:19",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 5071,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 5069,
                                                "name": "approvalData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5037,
                                                "src": "917:12:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "hexValue": "4920617070726f7665",
                                                                        "id": 5060,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "817:11:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_03a2668fd26a26a35630edd18b674c8942a272905d6b3bcb85a878fad357308e",
                                                                            "typeString": "literal_string \"I approve\""
                                                                        },
                                                                        "value": "I approve"
                                                                    },
                                                                    {
                                                                        "expression": {
                                                                            "expression": {
                                                                                "id": 5061,
                                                                                "name": "relayRequest",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 5033,
                                                                                "src": "830:12:19",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_RelayRequest_$6217_calldata_ptr",
                                                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                                                }
                                                                            },
                                                                            "id": 5062,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "request",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 6213,
                                                                            "src": "830:20:19",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_struct$_ForwardRequest_$3514_calldata_ptr",
                                                                                "typeString": "struct IForwarder.ForwardRequest calldata"
                                                                            }
                                                                        },
                                                                        "id": 5063,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "from",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 3501,
                                                                        "src": "830:25:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_03a2668fd26a26a35630edd18b674c8942a272905d6b3bcb85a878fad357308e",
                                                                            "typeString": "literal_string \"I approve\""
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 5058,
                                                                        "name": "abi",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967295,
                                                                        "src": "800:3:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_abi",
                                                                            "typeString": "abi"
                                                                        }
                                                                    },
                                                                    "id": 5059,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "encodePacked",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "800:16:19",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                        "typeString": "function () pure returns (bytes memory)"
                                                                    }
                                                                },
                                                                "id": 5064,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "800:56:19",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            ],
                                                            "id": 5057,
                                                            "name": "keccak256",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967288,
                                                            "src": "790:9:19",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                                            }
                                                        },
                                                        "id": 5065,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "790:67:19",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    "id": 5066,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "toEthSignedMessageHash",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 7675,
                                                    "src": "790:103:19",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                                                        "typeString": "function (bytes32) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 5067,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "790:105:19",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "id": 5068,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "recover",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 7574,
                                            "src": "790:126:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                                            }
                                        },
                                        "id": 5070,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "790:140:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "761:169:19"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 5076,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 5073,
                                                    "name": "signer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5056,
                                                    "src": "948:6:19",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 5074,
                                                        "name": "owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7421,
                                                        "src": "958:5:19",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                            "typeString": "function () view returns (address)"
                                                        }
                                                    },
                                                    "id": 5075,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "958:7:19",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "948:17:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "746573743a206e6f7420617070726f766564",
                                                "id": 5077,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "967:20:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_f1cc01e27b570ec7fc8efef8c7e724f1302d5dcbeae0b4745684b08f8d4c987d",
                                                    "typeString": "literal_string \"test: not approved\""
                                                },
                                                "value": "test: not approved"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_f1cc01e27b570ec7fc8efef8c7e724f1302d5dcbeae0b4745684b08f8d4c987d",
                                                    "typeString": "literal_string \"test: not approved\""
                                                }
                                            ],
                                            "id": 5072,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "940:7:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 5078,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "940:48:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 5079,
                                    "nodeType": "ExpressionStatement",
                                    "src": "940:48:19"
                                },
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "hexValue": "",
                                                "id": 5080,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1006:2:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                            },
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 5081,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1009:5:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            }
                                        ],
                                        "id": 5082,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "1005:10:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_bool_$",
                                            "typeString": "tuple(literal_string \"\",bool)"
                                        }
                                    },
                                    "functionReturnParameters": 5046,
                                    "id": 5083,
                                    "nodeType": "Return",
                                    "src": "998:17:19"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 5030,
                            "nodeType": "StructuredDocumentation",
                            "src": "307:107:19",
                            "text": " This demonstrates how dapps can provide an off-chain signatures to relayed transactions."
                        },
                        "functionSelector": "00be5dd4",
                        "id": 5085,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "preRelayedCall",
                        "nameLocation": "428:14:19",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 5041,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "631:8:19"
                        },
                        "parameters": {
                            "id": 5040,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 5033,
                                    "mutability": "mutable",
                                    "name": "relayRequest",
                                    "nameLocation": "483:12:19",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "452:43:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RelayRequest_$6217_calldata_ptr",
                                        "typeString": "struct GsnTypes.RelayRequest"
                                    },
                                    "typeName": {
                                        "id": 5032,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 5031,
                                            "name": "GsnTypes.RelayRequest",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 6217,
                                            "src": "452:21:19"
                                        },
                                        "referencedDeclaration": 6217,
                                        "src": "452:21:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_RelayRequest_$6217_storage_ptr",
                                            "typeString": "struct GsnTypes.RelayRequest"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 5035,
                                    "mutability": "mutable",
                                    "name": "signature",
                                    "nameLocation": "520:9:19",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "505:24:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 5034,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "505:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 5037,
                                    "mutability": "mutable",
                                    "name": "approvalData",
                                    "nameLocation": "554:12:19",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "539:27:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 5036,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "539:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 5039,
                                    "mutability": "mutable",
                                    "name": "maxPossibleGas",
                                    "nameLocation": "584:14:19",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "576:22:19",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 5038,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "576:7:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "442:162:19"
                        },
                        "returnParameters": {
                            "id": 5046,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 5043,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "653:12:19",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 5042,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "653:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 5045,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "667:4:19",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 5044,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "667:4:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "652:20:19"
                        },
                        "scope": 5086,
                        "src": "419:603:19",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 5087,
                "src": "199:825:19",
                "usedErrors": []
            }
        ],
        "src": "41:984:19"
    },
    "legacyAST": {
        "absolutePath": "/Users/dror/IdeaProjects/gsn223/packages/contracts/src/test/TestPaymasterOwnerSignature.sol",
        "exportedSymbols": {
            "BasePaymaster": [
                199
            ],
            "Context": [
                7513
            ],
            "ECDSA": [
                7696
            ],
            "GsnEip712Library": [
                6190
            ],
            "GsnTypes": [
                6218
            ],
            "GsnUtils": [
                6265
            ],
            "IForwarder": [
                3584
            ],
            "IPaymaster": [
                3864
            ],
            "IRelayHub": [
                4211
            ],
            "IRelayRecipient": [
                4240
            ],
            "IStakeManager": [
                4404
            ],
            "MinLibBytes": [
                6380
            ],
            "Ownable": [
                7492
            ],
            "SafeMath": [
                8008
            ],
            "TestPaymasterEverythingAccepted": [
                5019
            ],
            "TestPaymasterOwnerSignature": [
                5086
            ]
        },
        "id": 5087,
        "license": "GPL-3.0-only",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 5021,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "41:23:19"
            },
            {
                "id": 5022,
                "literals": [
                    "abicoder",
                    "v2"
                ],
                "nodeType": "PragmaDirective",
                "src": "65:19:19"
            },
            {
                "absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                "id": 5023,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 5087,
                "sourceUnit": 7697,
                "src": "86:62:19",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/dror/IdeaProjects/gsn223/packages/contracts/src/test/TestPaymasterEverythingAccepted.sol",
                "file": "./TestPaymasterEverythingAccepted.sol",
                "id": 5024,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 5087,
                "sourceUnit": 5020,
                "src": "150:47:19",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5025,
                            "name": "TestPaymasterEverythingAccepted",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5019,
                            "src": "239:31:19"
                        },
                        "id": 5026,
                        "nodeType": "InheritanceSpecifier",
                        "src": "239:31:19"
                    }
                ],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 5086,
                "linearizedBaseContracts": [
                    5086,
                    5019,
                    199,
                    7492,
                    7513,
                    3864
                ],
                "name": "TestPaymasterOwnerSignature",
                "nameLocation": "208:27:19",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 5029,
                        "libraryName": {
                            "id": 5027,
                            "name": "ECDSA",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7696,
                            "src": "283:5:19"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "277:24:19",
                        "typeName": {
                            "id": 5028,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "293:7:19",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        }
                    },
                    {
                        "baseFunctions": [
                            4944
                        ],
                        "body": {
                            "id": 5084,
                            "nodeType": "Block",
                            "src": "673:349:19",
                            "statements": [
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "id": 5047,
                                                "name": "signature",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5035,
                                                "src": "684:9:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            },
                                            {
                                                "id": 5048,
                                                "name": "maxPossibleGas",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5039,
                                                "src": "695:14:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "id": 5049,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "683:27:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bytes_calldata_ptr_$_t_uint256_$",
                                            "typeString": "tuple(bytes calldata,uint256)"
                                        }
                                    },
                                    "id": 5050,
                                    "nodeType": "ExpressionStatement",
                                    "src": "683:27:19"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 5052,
                                                "name": "relayRequest",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5033,
                                                "src": "737:12:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_RelayRequest_$6217_calldata_ptr",
                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_RelayRequest_$6217_calldata_ptr",
                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                }
                                            ],
                                            "id": 5051,
                                            "name": "_verifyForwarder",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 88,
                                            "src": "720:16:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_RelayRequest_$6217_calldata_ptr_$returns$__$",
                                                "typeString": "function (struct GsnTypes.RelayRequest calldata) view"
                                            }
                                        },
                                        "id": 5053,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "720:30:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 5054,
                                    "nodeType": "ExpressionStatement",
                                    "src": "720:30:19"
                                },
                                {
                                    "assignments": [
                                        5056
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 5056,
                                            "mutability": "mutable",
                                            "name": "signer",
                                            "nameLocation": "769:6:19",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 5084,
                                            "src": "761:14:19",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 5055,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "761:7:19",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 5071,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 5069,
                                                "name": "approvalData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5037,
                                                "src": "917:12:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "hexValue": "4920617070726f7665",
                                                                        "id": 5060,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "817:11:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_03a2668fd26a26a35630edd18b674c8942a272905d6b3bcb85a878fad357308e",
                                                                            "typeString": "literal_string \"I approve\""
                                                                        },
                                                                        "value": "I approve"
                                                                    },
                                                                    {
                                                                        "expression": {
                                                                            "expression": {
                                                                                "id": 5061,
                                                                                "name": "relayRequest",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 5033,
                                                                                "src": "830:12:19",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_RelayRequest_$6217_calldata_ptr",
                                                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                                                }
                                                                            },
                                                                            "id": 5062,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "request",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 6213,
                                                                            "src": "830:20:19",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_struct$_ForwardRequest_$3514_calldata_ptr",
                                                                                "typeString": "struct IForwarder.ForwardRequest calldata"
                                                                            }
                                                                        },
                                                                        "id": 5063,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "from",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 3501,
                                                                        "src": "830:25:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_03a2668fd26a26a35630edd18b674c8942a272905d6b3bcb85a878fad357308e",
                                                                            "typeString": "literal_string \"I approve\""
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 5058,
                                                                        "name": "abi",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967295,
                                                                        "src": "800:3:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_abi",
                                                                            "typeString": "abi"
                                                                        }
                                                                    },
                                                                    "id": 5059,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "encodePacked",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "800:16:19",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                        "typeString": "function () pure returns (bytes memory)"
                                                                    }
                                                                },
                                                                "id": 5064,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "800:56:19",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            ],
                                                            "id": 5057,
                                                            "name": "keccak256",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967288,
                                                            "src": "790:9:19",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                                            }
                                                        },
                                                        "id": 5065,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "790:67:19",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    "id": 5066,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "toEthSignedMessageHash",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 7675,
                                                    "src": "790:103:19",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                                                        "typeString": "function (bytes32) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 5067,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "790:105:19",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "id": 5068,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "recover",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 7574,
                                            "src": "790:126:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                                            }
                                        },
                                        "id": 5070,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "790:140:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "761:169:19"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 5076,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 5073,
                                                    "name": "signer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5056,
                                                    "src": "948:6:19",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 5074,
                                                        "name": "owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7421,
                                                        "src": "958:5:19",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                            "typeString": "function () view returns (address)"
                                                        }
                                                    },
                                                    "id": 5075,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "958:7:19",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "948:17:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "746573743a206e6f7420617070726f766564",
                                                "id": 5077,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "967:20:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_f1cc01e27b570ec7fc8efef8c7e724f1302d5dcbeae0b4745684b08f8d4c987d",
                                                    "typeString": "literal_string \"test: not approved\""
                                                },
                                                "value": "test: not approved"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_f1cc01e27b570ec7fc8efef8c7e724f1302d5dcbeae0b4745684b08f8d4c987d",
                                                    "typeString": "literal_string \"test: not approved\""
                                                }
                                            ],
                                            "id": 5072,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "940:7:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 5078,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "940:48:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 5079,
                                    "nodeType": "ExpressionStatement",
                                    "src": "940:48:19"
                                },
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "hexValue": "",
                                                "id": 5080,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1006:2:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                            },
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 5081,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1009:5:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            }
                                        ],
                                        "id": 5082,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "1005:10:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_bool_$",
                                            "typeString": "tuple(literal_string \"\",bool)"
                                        }
                                    },
                                    "functionReturnParameters": 5046,
                                    "id": 5083,
                                    "nodeType": "Return",
                                    "src": "998:17:19"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 5030,
                            "nodeType": "StructuredDocumentation",
                            "src": "307:107:19",
                            "text": " This demonstrates how dapps can provide an off-chain signatures to relayed transactions."
                        },
                        "functionSelector": "00be5dd4",
                        "id": 5085,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "preRelayedCall",
                        "nameLocation": "428:14:19",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 5041,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "631:8:19"
                        },
                        "parameters": {
                            "id": 5040,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 5033,
                                    "mutability": "mutable",
                                    "name": "relayRequest",
                                    "nameLocation": "483:12:19",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "452:43:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RelayRequest_$6217_calldata_ptr",
                                        "typeString": "struct GsnTypes.RelayRequest"
                                    },
                                    "typeName": {
                                        "id": 5032,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 5031,
                                            "name": "GsnTypes.RelayRequest",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 6217,
                                            "src": "452:21:19"
                                        },
                                        "referencedDeclaration": 6217,
                                        "src": "452:21:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_RelayRequest_$6217_storage_ptr",
                                            "typeString": "struct GsnTypes.RelayRequest"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 5035,
                                    "mutability": "mutable",
                                    "name": "signature",
                                    "nameLocation": "520:9:19",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "505:24:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 5034,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "505:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 5037,
                                    "mutability": "mutable",
                                    "name": "approvalData",
                                    "nameLocation": "554:12:19",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "539:27:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 5036,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "539:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 5039,
                                    "mutability": "mutable",
                                    "name": "maxPossibleGas",
                                    "nameLocation": "584:14:19",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "576:22:19",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 5038,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "576:7:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "442:162:19"
                        },
                        "returnParameters": {
                            "id": 5046,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 5043,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "653:12:19",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 5042,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "653:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 5045,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 5085,
                                    "src": "667:4:19",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 5044,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "667:4:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "652:20:19"
                        },
                        "scope": 5086,
                        "src": "419:603:19",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 5087,
                "src": "199:825:19",
                "usedErrors": []
            }
        ],
        "src": "41:984:19"
    },
    "compiler": {
        "name": "solc",
        "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
    },
    "networks": {},
    "schemaVersion": "3.1.0",
    "updatedAt": "2021-10-19T22:54:16.096Z",
    "devdoc": {
        "kind": "dev",
        "methods": {
            "owner()": {
                "details": "Returns the address of the current owner."
            },
            "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "params": {
                    "context": "- the call context, as returned by the preRelayedCall",
                    "gasUseWithoutPost": "- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.",
                    "relayData": "- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.",
                    "success": "- true if the relayed call succeeded, false if it reverted"
                }
            },
            "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            }
        },
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "getGasAndDataLimits()": {
                "notice": "Return the Gas Limits and msg.data max size constants used by the Paymaster."
            },
            "getHubAddr()": {
                "notice": "return the relayHub of this contract."
            },
            "getRelayHubDeposit()": {
                "notice": "check current deposit on relay hub."
            },
            "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "notice": "This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state."
            },
            "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
                "notice": "This demonstrates how dapps can provide an off-chain signatures to relayed transactions."
            },
            "withdrawRelayHubDepositTo(uint256,address)": {
                "notice": "withdraw deposit from relayHub"
            }
        },
        "version": 1
    }
}
