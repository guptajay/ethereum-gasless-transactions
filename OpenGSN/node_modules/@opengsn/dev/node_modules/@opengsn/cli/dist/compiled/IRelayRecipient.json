{
    "contractName": "IRelayRecipient",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "forwarder",
                    "type": "address"
                }
            ],
            "name": "isTrustedForwarder",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "versionRecipient",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"}},\"notice\":\"a contract must implement this interface in order to support relayed transaction. It is better to inherit the BaseRelayRecipient as its implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":\"IRelayRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x199e82e0a2833a97213b5c16ac9b4e2b1814f2e90a4c4916855cbc21e710ad5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92112fc87990f2d55c538946266c48f43e6ca442186ef3b8172eb4632deb0db3\",\"dweb:/ipfs/QmU6pqFXYT8fYfyhw7viRA775eBH4W7PAd589DVFGtSgxo\"]}},\"version\":1}",
    "bytecode": "0x",
    "deployedBytecode": "0x",
    "immutableReferences": {},
    "sourceMap": "",
    "deployedSourceMap": "",
    "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0;\n\n/**\n * a contract must implement this interface in order to support relayed transaction.\n * It is better to inherit the BaseRelayRecipient as its implementation.\n */\nabstract contract IRelayRecipient {\n\n    /**\n     * return if the forwarder is trusted to forward relayed transactions to us.\n     * the forwarder is required to verify the sender's signature, and verify\n     * the call is not a replay.\n     */\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\n\n    /**\n     * return the sender of this call.\n     * if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n     * of the msg.data.\n     * otherwise, return `msg.sender`\n     * should be used in the contract anywhere instead of msg.sender\n     */\n    function _msgSender() internal virtual view returns (address);\n\n    /**\n     * return the msg.data of this call.\n     * if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\n     * of the msg.data - so this method will strip those 20 bytes off.\n     * otherwise (if the call was made directly and not through the forwarder), return `msg.data`\n     * should be used in the contract instead of msg.data, where this difference matters.\n     */\n    function _msgData() internal virtual view returns (bytes calldata);\n\n    function versionRecipient() external virtual view returns (string memory);\n}\n",
    "sourcePath": "@opengsn/contracts/src/interfaces/IRelayRecipient.sol",
    "ast": {
        "absolutePath": "@opengsn/contracts/src/interfaces/IRelayRecipient.sol",
        "exportedSymbols": {
            "IRelayRecipient": [
                7388
            ]
        },
        "id": 7389,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 7361,
                "literals": [
                    "solidity",
                    ">=",
                    "0.6",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:24:35"
            },
            {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 7362,
                    "nodeType": "StructuredDocumentation",
                    "src": "58:165:35",
                    "text": " a contract must implement this interface in order to support relayed transaction.\n It is better to inherit the BaseRelayRecipient as its implementation."
                },
                "fullyImplemented": false,
                "id": 7388,
                "linearizedBaseContracts": [
                    7388
                ],
                "name": "IRelayRecipient",
                "nameLocation": "242:15:35",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "documentation": {
                            "id": 7363,
                            "nodeType": "StructuredDocumentation",
                            "src": "265:203:35",
                            "text": " return if the forwarder is trusted to forward relayed transactions to us.\n the forwarder is required to verify the sender's signature, and verify\n the call is not a replay."
                        },
                        "functionSelector": "572b6c05",
                        "id": 7370,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "isTrustedForwarder",
                        "nameLocation": "482:18:35",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7366,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7365,
                                    "mutability": "mutable",
                                    "name": "forwarder",
                                    "nameLocation": "509:9:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7370,
                                    "src": "501:17:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 7364,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "501:7:35",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "500:19:35"
                        },
                        "returnParameters": {
                            "id": 7369,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7368,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7370,
                                    "src": "548:4:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 7367,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "548:4:35",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "547:6:35"
                        },
                        "scope": 7388,
                        "src": "473:81:35",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "documentation": {
                            "id": 7371,
                            "nodeType": "StructuredDocumentation",
                            "src": "560:290:35",
                            "text": " return the sender of this call.\n if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n of the msg.data.\n otherwise, return `msg.sender`\n should be used in the contract anywhere instead of msg.sender"
                        },
                        "id": 7376,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_msgSender",
                        "nameLocation": "864:10:35",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7372,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "874:2:35"
                        },
                        "returnParameters": {
                            "id": 7375,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7374,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7376,
                                    "src": "908:7:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 7373,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "908:7:35",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "907:9:35"
                        },
                        "scope": 7388,
                        "src": "855:62:35",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "internal"
                    },
                    {
                        "documentation": {
                            "id": 7377,
                            "nodeType": "StructuredDocumentation",
                            "src": "923:421:35",
                            "text": " return the msg.data of this call.\n if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\n of the msg.data - so this method will strip those 20 bytes off.\n otherwise (if the call was made directly and not through the forwarder), return `msg.data`\n should be used in the contract instead of msg.data, where this difference matters."
                        },
                        "id": 7382,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_msgData",
                        "nameLocation": "1358:8:35",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7378,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1366:2:35"
                        },
                        "returnParameters": {
                            "id": 7381,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7380,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7382,
                                    "src": "1400:14:35",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 7379,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1400:5:35",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1399:16:35"
                        },
                        "scope": 7388,
                        "src": "1349:67:35",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "internal"
                    },
                    {
                        "functionSelector": "486ff0cd",
                        "id": 7387,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "versionRecipient",
                        "nameLocation": "1431:16:35",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7383,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1447:2:35"
                        },
                        "returnParameters": {
                            "id": 7386,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7385,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7387,
                                    "src": "1481:13:35",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 7384,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1481:6:35",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1480:15:35"
                        },
                        "scope": 7388,
                        "src": "1422:74:35",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "external"
                    }
                ],
                "scope": 7389,
                "src": "224:1274:35",
                "usedErrors": []
            }
        ],
        "src": "32:1467:35"
    },
    "legacyAST": {
        "absolutePath": "@opengsn/contracts/src/interfaces/IRelayRecipient.sol",
        "exportedSymbols": {
            "IRelayRecipient": [
                7388
            ]
        },
        "id": 7389,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 7361,
                "literals": [
                    "solidity",
                    ">=",
                    "0.6",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:24:35"
            },
            {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 7362,
                    "nodeType": "StructuredDocumentation",
                    "src": "58:165:35",
                    "text": " a contract must implement this interface in order to support relayed transaction.\n It is better to inherit the BaseRelayRecipient as its implementation."
                },
                "fullyImplemented": false,
                "id": 7388,
                "linearizedBaseContracts": [
                    7388
                ],
                "name": "IRelayRecipient",
                "nameLocation": "242:15:35",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "documentation": {
                            "id": 7363,
                            "nodeType": "StructuredDocumentation",
                            "src": "265:203:35",
                            "text": " return if the forwarder is trusted to forward relayed transactions to us.\n the forwarder is required to verify the sender's signature, and verify\n the call is not a replay."
                        },
                        "functionSelector": "572b6c05",
                        "id": 7370,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "isTrustedForwarder",
                        "nameLocation": "482:18:35",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7366,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7365,
                                    "mutability": "mutable",
                                    "name": "forwarder",
                                    "nameLocation": "509:9:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7370,
                                    "src": "501:17:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 7364,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "501:7:35",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "500:19:35"
                        },
                        "returnParameters": {
                            "id": 7369,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7368,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7370,
                                    "src": "548:4:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 7367,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "548:4:35",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "547:6:35"
                        },
                        "scope": 7388,
                        "src": "473:81:35",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "documentation": {
                            "id": 7371,
                            "nodeType": "StructuredDocumentation",
                            "src": "560:290:35",
                            "text": " return the sender of this call.\n if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n of the msg.data.\n otherwise, return `msg.sender`\n should be used in the contract anywhere instead of msg.sender"
                        },
                        "id": 7376,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_msgSender",
                        "nameLocation": "864:10:35",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7372,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "874:2:35"
                        },
                        "returnParameters": {
                            "id": 7375,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7374,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7376,
                                    "src": "908:7:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 7373,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "908:7:35",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "907:9:35"
                        },
                        "scope": 7388,
                        "src": "855:62:35",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "internal"
                    },
                    {
                        "documentation": {
                            "id": 7377,
                            "nodeType": "StructuredDocumentation",
                            "src": "923:421:35",
                            "text": " return the msg.data of this call.\n if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\n of the msg.data - so this method will strip those 20 bytes off.\n otherwise (if the call was made directly and not through the forwarder), return `msg.data`\n should be used in the contract instead of msg.data, where this difference matters."
                        },
                        "id": 7382,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_msgData",
                        "nameLocation": "1358:8:35",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7378,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1366:2:35"
                        },
                        "returnParameters": {
                            "id": 7381,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7380,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7382,
                                    "src": "1400:14:35",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 7379,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1400:5:35",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1399:16:35"
                        },
                        "scope": 7388,
                        "src": "1349:67:35",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "internal"
                    },
                    {
                        "functionSelector": "486ff0cd",
                        "id": 7387,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "versionRecipient",
                        "nameLocation": "1431:16:35",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7383,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1447:2:35"
                        },
                        "returnParameters": {
                            "id": 7386,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7385,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7387,
                                    "src": "1481:13:35",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 7384,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1481:6:35",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1480:15:35"
                        },
                        "scope": 7388,
                        "src": "1422:74:35",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "external"
                    }
                ],
                "scope": 7389,
                "src": "224:1274:35",
                "usedErrors": []
            }
        ],
        "src": "32:1467:35"
    },
    "compiler": {
        "name": "solc",
        "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
    },
    "networks": {},
    "schemaVersion": "3.1.0",
    "updatedAt": "2021-10-19T22:54:16.074Z",
    "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "isTrustedForwarder(address)": {
                "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
            }
        },
        "notice": "a contract must implement this interface in order to support relayed transaction. It is better to inherit the BaseRelayRecipient as its implementation.",
        "version": 1
    }
}
