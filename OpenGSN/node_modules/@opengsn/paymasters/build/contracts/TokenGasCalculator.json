{
  "contractName": "TokenGasCalculator",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IStakeManager",
          "name": "_stakeManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_penalizer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxWorkerCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasReserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_postOverhead",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasOverhead",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maximumRecipientDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimumUnstakeDelay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimumStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dataGasCostPerByte",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_externalCallDataCostOverhead",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "paymaster",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasUsedByPost",
          "type": "uint256"
        }
      ],
      "name": "GasUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromBlock",
          "type": "uint256"
        }
      ],
      "name": "HubDeprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "maxWorkerCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postOverhead",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasOverhead",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumRecipientDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumUnstakeDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumStake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataGasCostPerByte",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "externalCallDataCostOverhead",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IRelayHub.RelayHubConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "RelayHubConfigured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseRelayFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pctRelayFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "relayUrl",
          "type": "string"
        }
      ],
      "name": "RelayServerRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "newRelayWorkers",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "workersCount",
          "type": "uint256"
        }
      ],
      "name": "RelayWorkersAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "paymaster",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "relayWorker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "innerGasUsed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "TransactionRejectedByPaymaster",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayWorker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymaster",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "enum IRelayHub.RelayCallStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "charge",
          "type": "uint256"
        }
      ],
      "name": "TransactionRelayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IRelayHub.RelayCallStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "returnValue",
          "type": "bytes"
        }
      ],
      "name": "TransactionResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dest",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "G_NONZERO",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "newRelayWorkers",
          "type": "address[]"
        }
      ],
      "name": "addRelayWorkers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasUsed",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pctRelayFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseRelayFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "relayWorker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "paymaster",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "paymasterData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "clientId",
              "type": "uint256"
            }
          ],
          "internalType": "struct GsnTypes.RelayData",
          "name": "relayData",
          "type": "tuple"
        }
      ],
      "name": "calculateCharge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "calldataGasCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "depositFor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fromBlock",
          "type": "uint256"
        }
      ],
      "name": "deprecateHub",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deprecationBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConfiguration",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "maxWorkerCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postOverhead",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasOverhead",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumRecipientDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumUnstakeDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumStake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataGasCostPerByte",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "externalCallDataCostOverhead",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRelayHub.RelayHubConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "validUntil",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IForwarder.ForwardRequest",
              "name": "request",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "gasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pctRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "clientId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GsnTypes.RelayData",
              "name": "relayData",
              "type": "tuple"
            }
          ],
          "internalType": "struct GsnTypes.RelayRequest",
          "name": "relayRequest",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "approvalData",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "acceptanceBudget",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preRelayedCallGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postRelayedCallGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "calldataSizeLimit",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPaymaster.GasAndDataLimits",
          "name": "gasAndDataLimits",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "totalInitialGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPossibleGas",
          "type": "uint256"
        }
      ],
      "name": "innerRelayCall",
      "outputs": [
        {
          "internalType": "enum IRelayHub.RelayCallStatus",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDeprecated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "relayManager",
          "type": "address"
        }
      ],
      "name": "isRelayManagerStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "relayWorker",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "penalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "penalizer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseRelayFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pctRelayFee",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "url",
          "type": "string"
        }
      ],
      "name": "registerRelayServer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxAcceptanceBudget",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "validUntil",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IForwarder.ForwardRequest",
              "name": "request",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "gasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pctRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "clientId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GsnTypes.RelayData",
              "name": "relayData",
              "type": "tuple"
            }
          ],
          "internalType": "struct GsnTypes.RelayRequest",
          "name": "relayRequest",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "approvalData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "externalGasLimit",
          "type": "uint256"
        }
      ],
      "name": "relayCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "paymasterAccepted",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "returnValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "maxWorkerCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postOverhead",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasOverhead",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumRecipientDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumUnstakeDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumStake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataGasCostPerByte",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "externalCallDataCostOverhead",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRelayHub.RelayHubConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "name": "setConfiguration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeManager",
      "outputs": [
        {
          "internalType": "contract IStakeManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionHub",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "dest",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "workerCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "workerToManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TokenPaymaster",
          "name": "paymaster",
          "type": "address"
        }
      ],
      "name": "calculatePostGas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gasUsedByPost",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStakeManager\",\"name\":\"_stakeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_penalizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxWorkerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_postOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maximumRecipientDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumUnstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dataGasCostPerByte\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_externalCallDataCostOverhead\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsedByPost\",\"type\":\"uint256\"}],\"name\":\"GasUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"}],\"name\":\"HubDeprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxWorkerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRecipientDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumUnstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataGasCostPerByte\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalCallDataCostOverhead\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IRelayHub.RelayHubConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"RelayHubConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"relayUrl\",\"type\":\"string\"}],\"name\":\"RelayServerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newRelayWorkers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"workersCount\",\"type\":\"uint256\"}],\"name\":\"RelayWorkersAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"innerGasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"TransactionRejectedByPaymaster\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"enum IRelayHub.RelayCallStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"charge\",\"type\":\"uint256\"}],\"name\":\"TransactionRelayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IRelayHub.RelayCallStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnValue\",\"type\":\"bytes\"}],\"name\":\"TransactionResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"G_NONZERO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newRelayWorkers\",\"type\":\"address[]\"}],\"name\":\"addRelayWorkers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"calculateCharge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TokenPaymaster\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"calculatePostGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsedByPost\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"calldataGasCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"}],\"name\":\"deprecateHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deprecationBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxWorkerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRecipientDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumUnstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataGasCostPerByte\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalCallDataCostOverhead\",\"type\":\"uint256\"}],\"internalType\":\"struct IRelayHub.RelayHubConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"gasAndDataLimits\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"totalInitialGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"innerRelayCall\",\"outputs\":[{\"internalType\":\"enum IRelayHub.RelayCallStatus\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDeprecated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"isRelayManagerStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"penalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penalizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"registerRelayServer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAcceptanceBudget\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"externalGasLimit\",\"type\":\"uint256\"}],\"name\":\"relayCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paymasterAccepted\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnValue\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxWorkerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRecipientDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumUnstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataGasCostPerByte\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalCallDataCostOverhead\",\"type\":\"uint256\"}],\"internalType\":\"struct IRelayHub.RelayHubConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeManager\",\"outputs\":[{\"internalType\":\"contract IStakeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionHub\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"workerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"workerToManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isRelayManagerStaked(address)\":{\"returns\":{\"_0\":\"true if stake size and delay satisfy all requirements\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"relayCall(uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"params\":{\"approvalData\":\": dapp-specific data forwarded to preRelayedCall.        This value is *not* verified by the Hub. For example, it can be used to pass a signature to the Paymaster\",\"externalGasLimit\":\"- the value passed as gasLimit to the transaction. Emits a TransactionRelayed event.\",\"maxAcceptanceBudget\":\"- max valid value for paymaster.getGasLimits().acceptanceBudget\",\"relayRequest\":\"- all details of the requested relayed call\",\"signature\":\"- client's EIP-712 signature over the relayRequest struct\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,address,uint256)\":{\"notice\":\"Emitted when depositFor is called, including the amount and account that was funded.\"},\"RelayServerRegistered(address,uint256,uint256,string)\":{\"notice\":\"Emitted when a relay server registers or updates its details Looking at these events lets a client discover relay servers\"},\"RelayWorkersAdded(address,address[],uint256)\":{\"notice\":\"Emitted when relays are added by a relayManager\"},\"TransactionRejectedByPaymaster(address,address,address,address,address,bytes4,uint256,bytes)\":{\"notice\":\"Emitted when an attempt to relay a call fails and Paymaster does not accept the transaction. The actual relayed call was not executed, and the recipient not charged.\"},\"TransactionRelayed(address,address,address,address,address,bytes4,uint8,uint256)\":{\"notice\":\"Emitted when a transaction is relayed. Note that the actual encoded function might be reverted: this will be indicated in the status field. Useful when monitoring a relay's operation and relayed calls to a contract. Charge is the ether value deducted from the recipient's balance, paid to the relay's manager.\"},\"Withdrawn(address,address,uint256)\":{\"notice\":\"Emitted when an account withdraws funds from RelayHub.\"}},\"kind\":\"user\",\"methods\":{\"addRelayWorkers(address[])\":{\"notice\":\"Add new worker addresses controlled by sender who must be a staked Relay Manager address. Emits a RelayWorkersAdded event. This function can be called multiple times, emitting new events\"},\"balanceOf(address)\":{\"notice\":\"Returns an account's deposits. It can be either a deposit of a paymaster, or a revenue of a relay manager.\"},\"calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"The fee is expressed as a base fee in wei plus percentage on actual charge. E.g. a value of 40 stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount.\"},\"calculatePostGas(address)\":{\"notice\":\"calculate actual cost of postRelayedCall. usage: - create this calculator. - create an instance of your TokenPaymaster, with your token's Uniswap instance. - move some tokens (1000 \\\"wei\\\") to the calculator (msg.sender is given approval to pull them back at the end) - set the calculator as owner of this calculator. - call this method. - use the returned values to set your real TokenPaymaster.setPostGasUsage() the above can be ran on a \\\"forked\\\" network, so that it will have the real token, uniswap instances, but still leave no side-effect on the network.\"},\"depositFor(address)\":{\"notice\":\"Deposits ether for a contract, so that it can receive (and pay for) relayed transactions. Unused balance can only be withdrawn by the contract itself, by calling withdraw. Emits a Deposited event.\"},\"getConfiguration()\":{\"notice\":\"Returns the whole hub configuration\"},\"isRelayManagerStaked(address)\":{\"notice\":\"Uses StakeManager info to decide if the Relay Manager can be considered staked\"},\"relayCall(uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"Relays a transaction. For this to succeed, multiple conditions must be met:  - Paymaster's \\\"preRelayCall\\\" method must succeed and not revert  - the sender must be a registered Relay Worker that the user signed  - the transaction's gas price must be equal or larger than the one that was signed by the sender  - the transaction must have enough gas to run all internal transactions if they use all gas available to them  - the Paymaster must have enough balance to pay the Relay Worker for the scenario when all gas is spent If all conditions are met, the call will be relayed and the recipient charged. Arguments:\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraws from an account's balance, sending it back to it. Relay managers call this to retrieve their revenue, and contracts can also use it to reduce their funding. Emits a Withdrawn event.\"}},\"notice\":\"Calculate the postRelayedCall gas usage for a TokenPaymaster.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/helpers/TokenGasCalculator.sol\":\"TokenGasCalculator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/TokenPaymaster.sol\":{\"keccak256\":\"0x20784b3ef93c2a2a67333848a4a7849058c10def6fc660a1c4c7fb1ed833b649\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a408db1c1f646f90e8304cfe9fc54f7d295f343b7c33b852454800718b7e61f\",\"dweb:/ipfs/QmNX33kBmRgNNq77YFqt86YaAEUyF2jAUNwjNrPferBABh\"]},\"/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/helpers/TokenGasCalculator.sol\":{\"keccak256\":\"0x5c15db7cade311fc5134abe8390db7ef303949c4de18fc8674631761c1595a8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1722e934e22eabeaa9ed5dfd5658b75e83c1e3b68dab2524f45ac4e28ea24f9\",\"dweb:/ipfs/QmVD56tHnyUKHSKXR6mgNfaGKsT89VNdA7zNmAQC9c7qsW\"]},\"/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/interfaces/IUniswap.sol\":{\"keccak256\":\"0x1badefbcb17b0ab0b89e9c09edc42c8ac8303c49af9f4affc713c495ae2e5da0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2d3ef7a5d74393c0d44c55ebc453499aa02c979f3229400c3e6a22efdfb9f77\",\"dweb:/ipfs/QmQT5ksA5uue2fkWCi2N54BJ7r66fvi7ddaLbFo6txkiYV\"]},\"@opengsn/contracts/src/BasePaymaster.sol\":{\"keccak256\":\"0xd914685ceab88a06d4a1c94d7dd11167bec794106b4c25554bce6491d0df6ec8\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7a4881660c732e5f08254d3cc8c76480e5a878c15cb28dc96e8132aaa0a01b3a\",\"dweb:/ipfs/QmXeRywWUcKxpu1y465Vf5LxXdk8F1VNveCjdSFN4CsgFv\"]},\"@opengsn/contracts/src/RelayHub.sol\":{\"keccak256\":\"0x75238f5adf00b45666443a6e8c74929c37f7fce546d0e666455040100fd8874b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d6c83a2b4d0f2ef036268177448b9de7485f0fd7982c20c24f77ec931c495681\",\"dweb:/ipfs/QmUJs4hxeTpKwg3i1ojaysErX26BxaodNLLT5YBcnXBLjX\"]},\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e42577c586894c9fc9e11a3281c0e2d4183121714fd1101380b6b2b66c144ba3\",\"dweb:/ipfs/QmPQphvUxhvnYGXtNRbU7WcmbEP2N7mMDgC5R8R9AqC9xG\"]},\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x4cf49c343b72cd8dac257e8b49009347dc2465d5d191c6d1f9455e74f331f5d9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9d851b3712a9931da139d1bab1f02fccafc313bcc754f2d88831699edf9bea20\",\"dweb:/ipfs/QmPxqoiiLiwFTVw6JZLet2Q5BtL2wDcbtF1UhZ6J7oryhT\"]},\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":{\"keccak256\":\"0x3497133a7147174c498d2feeb2569b973396a8c2c220b5876fd9eb3b59841c85\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://32bb285a0f675310ee87647d00717e2dee9dbc7179e5455a3e1d7a2e121b6bf7\",\"dweb:/ipfs/QmZABWeS7pi5KfhoDUKyZHEvwqiAL4sYvjr3UcWZ7SvqCX\"]},\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x6243d3a925653ed0bde57e9fae7fb87f12c58a2376b27ae23b53502322532e00\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://928801ac8ceac377f326cd48de8e0056db9a7f8767b60efee5dfca035f326702\",\"dweb:/ipfs/QmYFkKXZcSVmmLNpDF1hvsLwAnhjmVSZuvEueaJgp1aVSg\"]},\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x86fcc2f265ba3c2f987fe47823121b4df3ddc86b834d89a67aca585d0721747f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://3712113b0f9d49cc3e9ef7096de90aabc719c1d40bb2796930e1f891325fcc3c\",\"dweb:/ipfs/QmZPbxY2idt9DuXHXGxK3GFf1bXHj1CDB1WBAhtenStrjj\"]},\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":{\"keccak256\":\"0xeabda17c0116022fba48a5be922c093fd721fc21e400a8158a2d2c9ae1c0ac4f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d2632a6bfa1675269a04a28a26a3bde247f537ecc7a671fd6b1bb0f34a11ec4d\",\"dweb:/ipfs/QmaqwWq3RtvHFC55DmpwWsxwibKCroG6PvMrrsag8skMyY\"]},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"keccak256\":\"0x813b12755ca7e69d3f269b5ab801d36d208274c26ea2764a416c3033e61bc130\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f3b0de24eae014d96adac3946984f3f3b769b3d74c3b46ccdb6b93d516b6916d\",\"dweb:/ipfs/QmRVmrAzeYGve3sQ2qksDknA5MVmmJpgZiRZ7VWCQCehNz\"]},\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"keccak256\":\"0xeb0c5992c7c2648e414a14605a72e773e09c554036e9c9cd9aca34e292b195d7\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://5d35afd557b1b9a02ad97bfcb5ff06b7cebde782d10c63258fd724413fee0419\",\"dweb:/ipfs/QmcDVREDjsxkeaDif7nM9ammFfGcgEQR684jEsayk2Gkm1\"]},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"keccak256\":\"0x73c837126ff5369c63b7a71828b6d5c9e5bc8a6477f8d4fc97f8e28142380cd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4a7846ef4c46fcd3fcc36dc4d49f70470391da1da83102eb48ea6428fd5cdee\",\"dweb:/ipfs/QmdvZvjhTAYAzKzjeNrWM9sToiPuo6XaQs7AeKUG9aKrRy\"]},\"@opengsn/contracts/src/utils/RelayHubValidator.sol\":{\"keccak256\":\"0x29776ca405b81d72f91210d7085aff085027149f11ce599bcfc27266e305c08f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ce32054609be89257e108a8c0792499ec86174b96ac9588a12ced3f608709680\",\"dweb:/ipfs/QmdDVjcae9s2AJym5N7QxnHcpty9J18KcqkcDeFSLYA9Uv\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xc005d5d0c00724c37876c56a59ccde49fc681edce11e67a8a7ff53a36a042f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc2cd1d2877d2711b9f4c0375324e1528cb0127820837a163b14760b3a1b3bb\",\"dweb:/ipfs/QmNde8JwkcNsxhjR43iNrou6wMvJknN1CeXjB4cDsKHzHV\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x610100604052601b60c08190527f322e322e302b6f70656e67736e2e6875622e6972656c6179687562000000000060e09081526200004191600191906200028d565b50600019600e553480156200005557600080fd5b50604051620044f3380380620044f3833981016040819052620000789162000339565b8a8a8a8a8a8a8a8a8a8a8a60006200008f6200017f565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508a6001600160a01b03166080816001600160a01b031660601b81525050896001600160a01b031660a0816001600160a01b031660601b81525050620001636040518061012001604052808b81526020018a8152602001898152602001888152602001878152602001868152602001858152602001848152602001838152506200018360201b60201c565b5050505050505050505050505050505050505050505062000447565b3390565b6200018d6200017f565b6001600160a01b0316620001a06200027e565b6001600160a01b031614620001fc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b8051600290815560208201516003556040808301516004556060830151600555608083015160065560a083015160075560c083015160085560e0830151600955610100830151600a55517f918ee002eb112844e457f37ea6b320c5572bc73957ebb0423ffcfb03d7b939d7916200027391620003d1565b60405180910390a150565b6000546001600160a01b031690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620002c5576000855562000310565b82601f10620002e057805160ff191683800117855562000310565b8280016001018555821562000310579182015b8281111562000310578251825591602001919060010190620002f3565b506200031e92915062000322565b5090565b5b808211156200031e576000815560010162000323565b60008060008060008060008060008060006101608c8e0312156200035b578687fd5b8b5162000368816200042e565b60208d0151909b506200037b816200042e565b809a505060408c0151985060608c0151975060808c0151965060a08c0151955060c08c0151945060e08c015193506101008c015192506101208c015191506101408c015190509295989b509295989b9093969950565b8154815260018201546020820152600282015460408201526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e08201526008909101546101008201526101200190565b6001600160a01b03811681146200044457600080fd5b50565b60805160601c60a05160601c61406e6200048560003980611c2e5280611de9525080610caf52806111dc5280611e9d5280611f3e525061406e6000f3fe6080604052600436106101805760003560e01c80638da5cb5b116100d1578063c651bce81161008a578063d6a71c0d11610064578063d6a71c0d14610446578063d904c7321461045b578063ebcd31ac1461047d578063f2fde38b1461049d57610180565b8063c651bce8146103f1578063c717823014610411578063ca998f561461042657610180565b80638da5cb5b146103545780638e53548b14610369578063aa67c91914610389578063af595dfc1461039c578063c2da0786146103bc578063c4775a68146103dc57610180565b80636bd50cef1161013e578063746d300c11610118578063746d300c146102c45780637542ff95146102f2578063796a54711461031457806383b718711461033457610180565b80636bd50cef1461026d57806370a082311461028f578063715018a6146102af57610180565b8062f714ce146101855780630dd3eded146101a757806310c45431146101d2578063194ac3071461020057806326595b9d146102205780632ad311b514610240575b600080fd5b34801561019157600080fd5b506101a56101a0366004612f8b565b6104bd565b005b3480156101b357600080fd5b506101bc6105b3565b6040516101c99190613529565b60405180910390f35b3480156101de57600080fd5b506101f26101ed366004612fef565b6105b8565b6040516101c992919061350e565b34801561020c57600080fd5b506101bc61021b366004612b94565b610c65565b34801561022c57600080fd5b506101bc61023b366004612f5b565b610c77565b34801561024c57600080fd5b5061026061025b366004612b94565b610c8f565b6040516101c99190613503565b34801561027957600080fd5b50610282610d36565b6040516101c99190613c08565b34801561029b57600080fd5b506101bc6102aa366004612b94565b610d95565b3480156102bb57600080fd5b506101a5610db0565b3480156102d057600080fd5b506102e46102df366004612e39565b610e5c565b6040516101c99291906136b4565b3480156102fe57600080fd5b506103076111da565b6040516101c991906133a0565b34801561032057600080fd5b506101bc61032f366004612b94565b6111fe565b34801561034057600080fd5b506101a561034f366004613091565b611854565b34801561036057600080fd5b506103076118fd565b34801561037557600080fd5b506101bc610384366004612faf565b61190c565b6101a5610397366004612b94565b611952565b3480156103a857600080fd5b506101a56103b7366004612f5b565b6119f5565b3480156103c857600080fd5b506101a56103d7366004612c04565b611ab8565b3480156103e857600080fd5b50610307611c2c565b3480156103fd57600080fd5b506101a561040c366004612dbb565b611c50565b34801561041d57600080fd5b50610260611d27565b34801561043257600080fd5b50610307610441366004612b94565b611d30565b34801561045257600080fd5b506101bc611d4b565b34801561046757600080fd5b50610470611d51565b6040516101c991906136d4565b34801561048957600080fd5b506101a5610498366004612bcc565b611dde565b3480156104a957600080fd5b506101a56104b8366004612b94565b611fad565b336000818152600d60205260409020548311156104f55760405162461bcd60e51b81526004016104ec90613a93565b60405180910390fd5b6001600160a01b0381166000908152600d602052604090205461051890846120af565b6001600160a01b038083166000908152600d60205260408082209390935591519084169185156108fc02918691818181858888f19350505050158015610562573d6000803e3d6000fd5b50816001600160a01b0316816001600160a01b03167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb856040516105a69190613529565b60405180910390a3505050565b601081565b600060606105c4612992565b5a60408201526105d2611d27565b156105ef5760405162461bcd60e51b81526004016104ec90613715565b60046105fb8a80613dfd565b6106099060a0810190613db9565b9050101561061857600061066d565b61066d6106258a80613dfd565b6106339060a0810190613db9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250925061210c915050565b6001600160e01b031916602082015233321461069b5760405162461bcd60e51b81526004016104ec906138d0565b336000908152600b60205260409020546001600160a01b031661016082018190526106d85760405162461bcd60e51b81526004016104ec90613b87565b336106e660208b018b613e12565b6106f7906080810190606001612b94565b6001600160a01b03161461071d5760405162461bcd60e51b81526004016104ec90613aed565b61072b816101600151610c8f565b6107475760405162461bcd60e51b81526004016104ec90613899565b3a61075560208b018b613e12565b3511156107745760405162461bcd60e51b81526004016104ec90613845565b458411156107945760405162461bcd60e51b81526004016104ec906136e7565b6107a48a8a83604001518761217a565b61010083015260a08201526107bc89898989896123ae565b60035460009060405a603f02816107cf57fe5b040390505a826101200181815250506000600280015460026003015487840101019050600080306001600160a01b03168463746d300c60e01b8f8f8f8f8f8c60a001515a8c038e6101000151604051602401610832989796959493929190613cca565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161087091906132e9565b60006040518083038160008787f1925050503d80600081146108ae576040519150601f19603f3d011682016040523d82523d6000602084013e6108b3565b606091505b50811515875290925090505a6101208601510360e086015280516108e09082016020908101908301612d22565b8660c001876080018290528260068111156108f757fe5b600681111561090257fe5b9052505060808501515115610953577fa1478a4242848419db824250a0dddc645dca0d6a9b12ab1fd79b00145a0ba98e8560c00151866080015160405161094a9291906136b4565b60405180910390a15b505050506109646000369050610c77565b6101808201528051610aa85760028160c00151600681111561098257fe5b14806109d9575061018081015160a08201515161099e91612453565b8160e00151111580156109d9575060038160c0015160068111156109be57fe5b14806109d9575060048160c0015160068111156109d757fe5b145b15610aa857600092506109ec8980613dfd565b6109fa906020810190612b94565b6001600160a01b0316610a1060208b018b613e12565b610a219060a0810190608001612b94565b6101608301516001600160a01b0391821691167fddb88484d11f800b80fe63aa67488ec56ee001d85896d528912c5d850cbcd06a610a5f8d80613dfd565b610a70906040810190602001612b94565b3386602001518760e001518860800151604051610a919594939291906133cd565b60405180910390a460800151600092509050610c59565b6005546000905a86030190506000610ac78261038460208e018e613e12565b9050610b1281600d60008e8060200190610ae19190613e12565b610af29060a0810190608001612b94565b6001600160a01b03168152602081019190915260400160002054906120af565b600d6000610b2360208f018f613e12565b610b349060a0810190608001612b94565b6001600160a01b0390811682526020808301939093526040918201600090812094909455610160870151168352600d909152902054610b739082612453565b6101608401516001600160a01b03166000908152600d6020526040902055610b9b8b80613dfd565b610ba9906020810190612b94565b6101608401516001600160a01b03918216913391167fc9aa709786a3d5fe2cc947abc1ba8cbb0f6decb57aa74b84eb7f558125fee454610be98f80613dfd565b610bfa906040810190602001612b94565b8f8060200190610c0a9190613e12565b610c1b9060a0810190608001612b94565b88602001518960c0015188604051610c3795949392919061343f565b60405180910390a4600160405180602001604052806000815250945094505050505b97509795505050505050565b600c6020526000908152604090205481565b600954600090610c8790836124ad565b90505b919050565b600854600754604051636de8dd4160e01b81526000926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692636de8dd4192610ce69287923092600401613484565b60206040518083038186803b158015610cfe57600080fd5b505afa158015610d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c879190612c72565b610d3e612a15565b50604080516101208101825260025481526003546020820152600454918101919091526005546060820152600654608082015260075460a082015260085460c082015260095460e0820152600a5461010082015290565b6001600160a01b03166000908152600d602052604090205490565b610db8612506565b6001600160a01b0316610dc96118fd565b6001600160a01b031614610e12576040805162461bcd60e51b81526020600482018190526024820152600080516020614019833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60006060610e68612a61565b333014610e875760405162461bcd60e51b81526004016104ec9061380e565b600d6000610e9860208e018e613e12565b610ea99060a0810190608001612b94565b6001600160a01b031681526020810191909152604090810160002054825251622f977560e21b90610ee8908d908d908d908d908d908b90602401613d4a565b60408051601f19818403018152919052602080820180516001600160e01b03166001600160e01b03199094169390931790925260a0830152600090606090610f32908e018e613e12565b610f439060a0810190608001612b94565b6001600160a01b031688602001358460a00151604051610f6391906132e9565b60006040518083038160008787f1925050503d8060008114610fa1576040519150601f19603f3d011682016040523d82523d6000602084013e610fa6565b606091505b50909250905081610fc557610fba8161250a565b610fc5600282612519565b80806020019051810190610fd99190612cd7565b151560c085015260808401525060009050610ff58c8c8c612552565b6060850152151560408401529050806110175761101760038360600151612519565b8160c00151801561102a57508160400151155b1561103e5761103e60048360600151612519565b506376fa01c360e01b816080015182604001515a88038e80602001906110649190613e12565b6040516024016110779493929190613656565b60408051601f19818403018152919052602080820180516001600160e01b03166001600160e01b03199094169390931790925260a083015260009081906110c0908e018e613e12565b6110d19060a0810190608001612b94565b6001600160a01b031688604001358460a001516040516110f191906132e9565b60006040518083038160008787f1925050503d806000811461112f576040519150601f19603f3d011682016040523d82523d6000602084013e611134565b606091505b50915091508161114957611149600582612519565b50508051600d600061115e60208f018f613e12565b61116f9060a0810190608001612b94565b6001600160a01b03166001600160a01b031681526020019081526020016000205410156111b0576111b0600660405180602001604052806000815250612519565b80604001516111c05760016111c3565b60005b816060015192509250509850989650505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516327b2595f60e11b8152600090829082906001600160a01b03831690634f64b2be90611231908490600401613529565b60206040518083038186803b15801561124957600080fd5b505afa15801561125d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112819190612bb0565b90506000846001600160a01b0316636184391460006040518263ffffffff1660e01b81526004016112b29190613529565b60206040518083038186803b1580156112ca57600080fd5b505afa1580156112de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113029190612bb0565b90506103e8826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161133391906133a0565b60206040518083038186803b15801561134b57600080fd5b505afa15801561135f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113839190612f73565b10156113a15760405162461bcd60e51b81526004016104ec90613907565b306001600160a01b0316856001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113e457600080fd5b505afa1580156113f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141c9190612bb0565b6001600160a01b0316146114425760405162461bcd60e51b81526004016104ec906139fd565b60405163095ea7b360e01b81526001600160a01b0383169063095ea7b390611472908690600019906004016133b4565b602060405180830381600087803b15801561148c57600080fd5b505af11580156114a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c49190612c72565b5060405163095ea7b360e01b81526001600160a01b0383169063095ea7b3906114f5903390600019906004016133b4565b602060405180830381600087803b15801561150f57600080fd5b505af1158015611523573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115479190612c72565b5060405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906115789086906101f4906004016133b4565b602060405180830381600087803b15801561159257600080fd5b505af11580156115a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ca9190612c72565b50604051631eec149960e21b81526001600160a01b03861690637bb05264906115f79030906004016133a0565b600060405180830381600087803b15801561161157600080fd5b505af1158015611625573d6000803e3d6000fd5b505060408051610100810182526001815260006020808301829052828401829052606083018290526080830182905260a083018290528351808201855282815260c084015260e083018290529251919450925061168c9130916101f4918891889101613689565b604051602081830303815290604052905060005a6040516376fa01c360e01b81529091506001600160a01b038916906376fa01c3906116d790859060019060649089906004016135a8565b600060405180830381600087803b1580156116f157600080fd5b505af1158015611705573d6000803e3d6000fd5b5050505060005a9050856001600160a01b03166323b872dd8830896001600160a01b03166370a082318c6040518263ffffffff1660e01b815260040161174b91906133a0565b60206040518083038186803b15801561176357600080fd5b505afa158015611777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179b9190612f73565b6040518463ffffffff1660e01b81526004016117b99392919061341b565b602060405180830381600087803b1580156117d357600080fd5b505af11580156117e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180b9190612c72565b5080820397507f275c82ca4f491f0c9b7ffa4f6e3e85613c4a0d2c4f67b64995dc68806f0586e5886040516118409190613529565b60405180910390a150505050505050919050565b3361185e81610c8f565b61187a5760405162461bcd60e51b81526004016104ec90613899565b6001600160a01b0381166000908152600c60205260409020546118af5760405162461bcd60e51b81526004016104ec9061393e565b806001600160a01b03167f77f2d8afec4b9d82ffa0dea525320620292bd1067f575964994d5c4501479aed868686866040516118ee9493929190613d99565b60405180910390a25050505050565b6000546001600160a01b031690565b600061194961193e6064611938611927602087013583612453565b6119328888356124ad565b906124ad565b90612736565b604084013590612453565b90505b92915050565b60065434908111156119765760405162461bcd60e51b81526004016104ec90613870565b6001600160a01b0382166000908152600d60205260409020546119999082612453565b6001600160a01b0383166000818152600d6020526040908190209290925590513391907f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a7906119e9908590613529565b60405180910390a35050565b6119fd612506565b6001600160a01b0316611a0e6118fd565b6001600160a01b031614611a57576040805162461bcd60e51b81526020600482018190526024820152600080516020614019833981519152604482015290519081900360640190fd5b43600e5411611a785760405162461bcd60e51b81526004016104ec90613774565b600e8190556040517f1c0aa0c666483fbf0cf795d9d646ea3552d1e3008162ba9ab1d6d6dfd8c6ec6b90611aad908390613529565b60405180910390a150565b336000818152600c602052604090208054830190819055600254811115611af15760405162461bcd60e51b81526004016104ec90613a32565b611afa82610c8f565b611b165760405162461bcd60e51b81526004016104ec90613899565b60005b83811015611be0576000600b81878785818110611b3257fe5b9050602002016020810190611b479190612b94565b6001600160a01b0390811682526020820192909252604001600020541614611b815760405162461bcd60e51b81526004016104ec906137a0565b82600b6000878785818110611b9257fe5b9050602002016020810190611ba79190612b94565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b03191692909116919091179055600101611b19565b50816001600160a01b03167febf4a9bffb39f7c5dbf3f65540183b9381ae226ac3d0a45b4cad484713bd4a28858584604051611c1e939291906134ad565b60405180910390a250505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b611c58612506565b6001600160a01b0316611c696118fd565b6001600160a01b031614611cb2576040805162461bcd60e51b81526020600482018190526024820152600080516020614019833981519152604482015290519081900360640190fd5b8051600290815560208201516003556040808301516004556060830151600555608083015160065560a083015160075560c083015160085560e0830151600955610100830151600a55517f918ee002eb112844e457f37ea6b320c5572bc73957ebb0423ffcfb03d7b939d791611aad91613c6d565b600e5443101590565b600b602052600090815260409020546001600160a01b031681565b600e5481565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611dd65780601f10611dab57610100808354040283529160200191611dd6565b820191906000526020600020905b815481529060010190602001808311611db957829003601f168201915b505050505081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611e265760405162461bcd60e51b81526004016104ec9061399f565b6001600160a01b038083166000908152600b60205260409020541680611e5e5760405162461bcd60e51b81526004016104ec90613b87565b611e6781610c8f565b611e835760405162461bcd60e51b81526004016104ec90613899565b60405163c345315360e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c345315390611ed29085906004016133a0565b60806040518083038186803b158015611eea57600080fd5b505afa158015611efe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f229190612ef7565b805160405163026822bd60e21b81529192506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916309a08af491611f75918691889160040161341b565b600060405180830381600087803b158015611f8f57600080fd5b505af1158015611fa3573d6000803e3d6000fd5b5050505050505050565b611fb5612506565b6001600160a01b0316611fc66118fd565b6001600160a01b03161461200f576040805162461bcd60e51b81526020600482018190526024820152600080516020614019833981519152604482015290519081900360640190fd5b6001600160a01b0381166120545760405162461bcd60e51b8152600401808060200182810382526026815260200180613f316026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600082821115612106576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008160040183511015612167576040805162461bcd60e51b815260206004820152601a60248201527f726561644279746573343a206461746120746f6f2073686f7274000000000000604482015290519081900360640190fd5b5001602001516001600160e01b03191690565b612182612a9c565b60006121916020860186613e12565b6121a29060a0810190608001612b94565b6001600160a01b031663b039a88f61c3506040518263ffffffff1660e01b815260040160806040518083038187803b1580156121dd57600080fd5b5086fa1580156121f1573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906122169190612d5d565b606081015190925036111561223d5760405162461bcd60e51b81526004016104ec90613968565b600061224836610c77565b600a5490915085850303600036828161225d57fe5b04905060108111156122815760405162461bcd60e51b81526004016104ec9061373d565b84518910156122a25760405162461bcd60e51b81526004016104ec90613a5c565b6020850151855110156122c75760405162461bcd60e51b81526004016104ec906137d7565b6123088261230285816122da8d80613dfd565b606001356123028b604001516123028d6020015160026003015461245390919063ffffffff16565b90612453565b93508386101561232a5760405162461bcd60e51b81526004016104ec906139c6565b600061233d8561038460208c018c613e12565b9050600d600061235060208c018c613e12565b6123619060a0810190608001612b94565b6001600160a01b03166001600160a01b03168152602001908152602001600020548111156123a15760405162461bcd60e51b81526004016104ec90613b19565b5050505094509492505050565b60006123d36123c06020880188613e12565b6123ce9060c0810190613db9565b61279d565b6123ee6123e08880613dfd565b6123ce9060a0810190613db9565b6123f8858561279d565b612402888861279d565b0101016102c4019050604184111561242c5760405162461bcd60e51b81526004016104ec90613b50565b36811461244b5760405162461bcd60e51b81526004016104ec90613abf565b505050505050565b600082820183811015611949576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000826124bc5750600061194c565b828202828482816124c957fe5b04146119495760405162461bcd60e51b8152600401808060200182810382526021815260200180613ff86021913960400191505060405180910390fd5b3390565b612516816104006127ae565b50565b6000828260405160200161252e9291906136b4565b60405160208183030381529060405290506125488161250a565b8051602082018181fd5b60008060606000612562876127bf565b9050600061258c61257660208a018a613e12565b6125879060c081019060a001612b94565b6127fc565b905061259b6020890189613e12565b6125ac9060c081019060a001612b94565b6001600160a01b031663e024dc7f60e01b6125c78a80613dfd565b836040518060400160405280600c81526020016b14995b185e54995c5d595cdd60a21b8152506040518060800160405280605d8152602001613ed4605d91396040518060e0016040528060a18152602001613f5760a1913960405160200161262f9190613364565b60408051601f198184030181529082905261264e939291602001613305565b60405160208183030381529060405280519060200120868c8c60405160240161267c96959493929190613bb5565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516126ba91906132e9565b6000604051808303816000865af19150503d80600081146126f7576040519150601f19603f3d011682016040523d82523d6000602084013e6126fc565b606091505b5090955092508415612722578280602001905181019061271c9190612c8c565b90945092505b61272b8361250a565b505093509350939050565b600080821161278c576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161279557fe5b049392505050565b6020601f8201601f19160192915050565b80825111156127bb578082525b5050565b60606127d66127d16020840184613e12565b61287c565b6040516020016127e69190613529565b6040516020818303038152906040529050919050565b6040805160c0810182526017608082019081527f47534e2052656c61796564205472616e73616374696f6e00000000000000000060a083015281528151808301835260018152601960f91b602082810191909152820152600091610c8791908101612865612935565b8152602001846001600160a01b0316815250612939565b60006040518060e0016040528060a18152602001613f5760a1913980516020918201209083359084013560408501356128bb6080870160608801612b94565b6128cb60a0880160808901612b94565b6128db60c0890160a08a01612b94565b6128e860c08a018a613db9565b6040516128f69291906132d9565b604051908190038120612918989796959493929160e08c01359060200161355e565b604051602081830303815290604052805190602001209050919050565b4690565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82600001518051906020012083602001518051906020012084604001518560600151604051602001612918959493929190613532565b604051806101a0016040528060001515815260200160006001600160e01b03191681526020016000815260200160608152602001606081526020016129d5612a9c565b8152602001600081526020016000815260200160008152602001600081526020016060815260200160006001600160a01b03168152602001600081525090565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160e08101825260008082526020820181905291810182905260608082018190526080820181905260a082015260c081019190915290565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b80518015158114610c8a57600080fd5b60008083601f840112612ae5578182fd5b5081356001600160401b03811115612afb578182fd5b602083019150836020828501011115612b1357600080fd5b9250929050565b600082601f830112612b2a578081fd5b81516001600160401b03811115612b3d57fe5b612b50601f8201601f1916602001613e27565b818152846020838601011115612b64578283fd5b612b75826020830160208701613e8e565b949350505050565b600060408284031215612b8e578081fd5b50919050565b600060208284031215612ba5578081fd5b813561194981613ebe565b600060208284031215612bc1578081fd5b815161194981613ebe565b60008060408385031215612bde578081fd5b8235612be981613ebe565b91506020830135612bf981613ebe565b809150509250929050565b60008060208385031215612c16578182fd5b82356001600160401b0380821115612c2c578384fd5b818501915085601f830112612c3f578384fd5b813581811115612c4d578485fd5b8660208083028501011115612c60578485fd5b60209290920196919550909350505050565b600060208284031215612c83578081fd5b61194982612ac4565b60008060408385031215612c9e578182fd5b612ca783612ac4565b915060208301516001600160401b03811115612cc1578182fd5b612ccd85828601612b1a565b9150509250929050565b60008060408385031215612ce9578182fd5b82516001600160401b03811115612cfe578283fd5b612d0a85828601612b1a565b925050612d1960208401612ac4565b90509250929050565b60008060408385031215612d34578182fd5b825160078110612d42578283fd5b60208401519092506001600160401b03811115612cc1578182fd5b600060808284031215612d6e578081fd5b604051608081018181106001600160401b0382111715612d8a57fe5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b6000610120808385031215612dce578182fd5b612dd781613e27565b9050823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013581830152508091505092915050565b600080600080600080600080888a03610120811215612e56578485fd5b89356001600160401b0380821115612e6c578687fd5b612e788d838e01612b7d565b9a5060208c0135915080821115612e8d578687fd5b612e998d838e01612ad4565b909a50985060408c0135915080821115612eb1578687fd5b50612ebe8c828d01612ad4565b9097509550506080605f1982011215612ed5578384fd5b5096999598509396929550909360608301935060e08301359261010001359150565b600060808284031215612f08578081fd5b604051608081018181106001600160401b0382111715612f2457fe5b80604052508251815260208301516020820152604083015160408201526060830151612f4f81613ebe565b60608201529392505050565b600060208284031215612f6c578081fd5b5035919050565b600060208284031215612f84578081fd5b5051919050565b60008060408385031215612f9d578182fd5b823591506020830135612bf981613ebe565b60008060408385031215612fc1578182fd5b8235915060208301356001600160401b03811115612fdd578182fd5b83016101008186031215612bf9578182fd5b600080600080600080600060a0888a031215613009578081fd5b8735965060208801356001600160401b0380821115613026578283fd5b6130328b838c01612b7d565b975060408a0135915080821115613047578283fd5b6130538b838c01612ad4565b909750955060608a013591508082111561306b578283fd5b506130788a828b01612ad4565b989b979a50959894979596608090950135949350505050565b600080600080606085870312156130a6578182fd5b843593506020850135925060408501356001600160401b038111156130c9578283fd5b6130d587828801612ad4565b95989497509550505050565b6001600160a01b03169052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452613130816020860160208601613e8e565b601f01601f19169290920160200192915050565b6007811061314e57fe5b9052565b6000813561315f81613ebe565b6001600160a01b03908116845260208301359061317b82613ebe565b1660208401526040828101359084015260608083013590840152608080830135908401526131ac60a0830183613e4a565b60e060a08601526131c160e0860182846130ee565b91505060c083013560c08501528091505092915050565b6000610100823584526020830135602085015260408301356040850152606083013561320381613ebe565b6001600160a01b03908116606086015260808401359061322282613ebe565b16608085015260a083013561323681613ebe565b61324360a08601826130e1565b5061325160c0840184613e4a565b8260c087015261326483870182846130ee565b9250505060e083013560e08501528091505092915050565b6000813582360360de1981018212613292578283fd5b604085526132a560408601858401613152565b9150602084013560fe19820181126132bb578384fd5b85830360208701526132cf838683016131d8565b9695505050505050565b6000828483379101908152919050565b600082516132fb818460208701613e8e565b9190910192915050565b60008451613317818460208901613e8e565b600560fb1b9083019081528451613335816001840160208901613e8e565b600b60fa1b600192909101918201528351613357816002840160208801613e8e565b0160020195945050505050565b60007352656c6179446174612072656c6179446174612960601b82528251613393816014850160208701613e8e565b9190910160140192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b038681168252851660208201526001600160e01b0319841660408201526060810183905260a06080820181905260009061341090830184613118565b979650505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038681168252851660208201526001600160e01b03198416604082015260a081016134746060830185613144565b8260808301529695505050505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6040808252810183905260008460608301825b868110156134f05782356134d381613ebe565b6001600160a01b03168252602092830192909101906001016134c0565b5060209390930193909352509392505050565b901515815260200190565b6000831515825260406020830152612b756040830184613118565b90815260200190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b9889526020890197909752604088019590955260608701939093526001600160a01b039182166080870152811660a08601521660c084015260e08301526101008201526101200190565b6000608082526135bb6080830187613118565b8515156020840152846040840152828103606084015261010084518252602085015160208301526040850151604083015260018060a01b036060860151166060830152608085015161361060808401826130e1565b5060a085015161362360a08401826130e1565b5060c08501518160c084015261363b82840182613118565b91505060e085015160e0830152809250505095945050505050565b6000608082526136696080830187613118565b8515156020840152846040840152828103606084015261341081856131d8565b6001600160a01b03948516815260208101939093529083166040830152909116606082015260800190565b60006136c08285613144565b60406020830152612b756040830184613118565b6000602082526119496020830184613118565b602080825260149082015273125b5c1bdcdcda589b194819d85cc81b1a5b5a5d60621b604082015260600190565b6020808252600e908201526d1a1d588819195c1c9958d85d195960921b604082015260600190565b60208082526018908201527f696e76616c69642065787465726e616c4761734c696d69740000000000000000604082015260600190565b602080825260129082015271105b1c9958591e4819195c1c9958d85d195960721b604082015260600190565b60208082526019908201527f7468697320776f726b6572206861732061206d616e6167657200000000000000604082015260600190565b60208082526019908201527f616363657074616e63652062756467657420746f6f206c6f7700000000000000604082015260600190565b6020808252601a908201527f4d7573742062652063616c6c65642062792052656c6179487562000000000000604082015260600190565b602080825260119082015270496e76616c69642067617320707269636560781b604082015260600190565b6020808252600f908201526e6465706f73697420746f6f2062696760881b604082015260600190565b60208082526018908201527f72656c6179206d616e61676572206e6f74207374616b65640000000000000000604082015260600190565b60208082526018908201527f72656c617920776f726b6572206d75737420626520454f410000000000000000604082015260600190565b6020808252601b908201527f63616c633a206d757374206861766520736f6d6520746f6b656e730000000000604082015260600190565b60208082526010908201526f6e6f2072656c617920776f726b65727360801b604082015260600190565b60208082526017908201527f6d73672e64617461206578636565646564206c696d6974000000000000000000604082015260600190565b6020808252600d908201526c2737ba103832b730b634bd32b960991b604082015260600190565b60208082526019908201527f6e6f2067617320666f7220696e6e657252656c617943616c6c00000000000000604082015260600190565b6020808252818101527f63616c633a206d757374206265206f776e6572206f66207061796d6173746572604082015260600190565b60208082526010908201526f746f6f206d616e7920776f726b65727360801b604082015260600190565b6020808252601a908201527f616363657074616e63652062756467657420746f6f2068696768000000000000604082015260600190565b602080825260129082015271696e73756666696369656e742066756e647360701b604082015260600190565b6020808252601490820152736578747261206d73672e6461746120627974657360601b604082015260600190565b6020808252601290820152712737ba1030903934b3b43a103bb7b935b2b960711b604082015260600190565b60208082526019908201527f5061796d61737465722062616c616e636520746f6f206c6f7700000000000000604082015260600190565b60208082526018908201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604082015260600190565b6020808252601490820152732ab735b737bbb7103932b630bc903bb7b935b2b960611b604082015260600190565b600060a08252613bc860a0830189613152565b8760208401528660408401528281036060840152613be68187613118565b90508281036080840152613bfb8185876130ee565b9998505050505050505050565b600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525092915050565b8154815260018201546020820152600282015460408201526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e08201526008909101546101008201526101200190565b6000610120808352613cde8184018c61327c565b90508281036020840152613cf3818a8c6130ee565b90508281036040840152613d0881888a6130ee565b9150508451606083015260208501516080830152604085015160a0830152606085015160c08301528360e0830152826101008301529998505050505050505050565b600060808252613d5d608083018961327c565b8281036020840152613d7081888a6130ee565b90508281036040840152613d858186886130ee565b915050826060830152979650505050505050565b6000858252846020830152606060408301526132cf6060830184866130ee565b6000808335601e19843603018112613dcf578283fd5b8301803591506001600160401b03821115613de8578283fd5b602001915036819003821315612b1357600080fd5b6000823560de198336030181126132fb578182fd5b6000823560fe198336030181126132fb578182fd5b6040518181016001600160401b0381118282101715613e4257fe5b604052919050565b6000808335601e19843603018112613e60578283fd5b83016020810192503590506001600160401b03811115613e7f57600080fd5b803603831315612b1357600080fd5b60005b83811015613ea9578181015183820152602001613e91565b83811115613eb8576000848401525b50505050565b6001600160a01b038116811461251657600080fdfe616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c627974657320646174612c75696e743235362076616c6964556e74696c4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737352656c6179446174612875696e743235362067617350726963652c75696e743235362070637452656c61794665652c75696e74323536206261736552656c61794665652c616464726573732072656c6179576f726b65722c61646472657373207061796d61737465722c6164647265737320666f727761726465722c6279746573207061796d6173746572446174612c75696e7432353620636c69656e74496429536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220299aabe3efebc4935451e3c705dd9d1853f50d3ff2b9a7be58571571a74f2c1864736f6c63430007060033",
  "deployedBytecode": "",
  "immutableReferences": {
    "3192": [
      {
        "length": 32,
        "start": 3247
      },
      {
        "length": 32,
        "start": 4572
      },
      {
        "length": 32,
        "start": 7837
      },
      {
        "length": 32,
        "start": 7998
      }
    ],
    "3195": [
      {
        "length": 32,
        "start": 7214
      },
      {
        "length": 32,
        "start": 7657
      }
    ]
  },
  "sourceMap": "798:65:21:-:0;305:2857:15;798:65:21;;305:2857:15;798:65:21;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;1636:57:21;;550:752:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;962:13;985:10;1005:15;1030:11;1051:13;1074:12;1096:24;1130:20;1160:13;1183:19;1212:29;888:17:36;908:12;:10;:12::i;:::-;930:6;:18;;-1:-1:-1;;;;;;930:18:36;-1:-1:-1;;;;;930:18:36;;;;;;;963:43;;930:18;;-1:-1:-1;930:18:36;963:43;;930:6;;963:43;850:163;2127:13:21;-1:-1:-1;;;;;2112:28:21;;;-1:-1:-1;;;;;2112:28:21;;;;;;;2162:10;-1:-1:-1;;;;;2150:22:21;;;-1:-1:-1;;;;;2150:22:21;;;;;;;2182:324;2199:306;;;;;;;;2227:15;2199:306;;;;2256:11;2199:306;;;;2281:13;2199:306;;;;2308:12;2199:306;;;;2334:24;2199:306;;;;2372:20;2199:306;;;;2406:13;2199:306;;;;2433:19;2199:306;;;;2466:29;2199:306;;;2182:16;;;:324;;:::i;:::-;1700:813;;;;;;;;;;;550:752:15;;;;;;;;;;;305:2857;;598:104:43;685:10;598:104;:::o;1131:157:21:-;1312:12:36;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:16:21;;:6:::1;:16:::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;1255:26;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;1131:157:::0;:::o;1089:85:36:-;1135:7;1161:6;-1:-1:-1;;;;;1161:6:36;1089:85;:::o;305:2857:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;305:2857:15;;;-1:-1:-1;305:2857:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:980:44;;;;;;;;;;;;330:3;318:9;309:7;305:23;301:33;298:2;;;352:6;344;337:22;298:2;389:9;383:16;408:33;435:5;408:33;:::i;:::-;510:2;495:18;;489:25;460:5;;-1:-1:-1;523:35:44;489:25;523:35;:::i;:::-;577:7;567:17;;;624:2;613:9;609:18;603:25;593:35;;668:2;657:9;653:18;647:25;637:35;;712:3;701:9;697:19;691:26;681:36;;757:3;746:9;742:19;736:26;726:36;;802:3;791:9;787:19;781:26;771:36;;847:3;836:9;832:19;826:26;816:36;;892:3;881:9;877:19;871:26;861:36;;937:3;926:9;922:19;916:26;906:36;;983:3;972:9;968:19;962:26;951:37;;288:706;;;;;;;;;;;;;;:::o;999:752::-;1225:13;;1207:32;;1295:4;1283:17;;1277:24;1270:4;1255:20;;1248:54;1358:4;1346:17;;1340:24;1333:4;1318:20;;1311:54;1421:4;1409:17;;1403:24;1396:4;1381:20;;1374:54;1484:4;1472:17;;1466:24;1459:4;1444:20;;1437:54;1547:4;1535:17;;1529:24;1522:4;1507:20;;1500:54;1610:4;1598:17;;1592:24;1585:4;1570:20;;1563:54;1673:4;1661:17;;1655:24;1648:4;1633:20;;1626:54;1738:4;1726:17;;;1720:24;1711:6;1696:22;;1689:56;1194:3;1179:19;;1161:590::o;1756:133::-;-1:-1:-1;;;;;1833:31:44;;1823:42;;1813:2;;1879:1;1876;1869:12;1813:2;1803:86;:::o;:::-;305:2857:15;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "305:2857:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4156:332:21;;;;;;;;;;-1:-1:-1;4156:332:21;;;;;:::i;:::-;;:::i;:::-;;1294:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7164:4582;;;;;;;;;;-1:-1:-1;7164:4582:21;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1523:55::-;;;;;;;;;;-1:-1:-1;1523:55:21;;;;;:::i;:::-;;:::i;4494:137::-;;;;;;;;;;-1:-1:-1;4494:137:21;;;;;:::i;:::-;;:::i;16717:223::-;;;;;;;;;;-1:-1:-1;16717:223:21;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1014:111::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4034:116::-;;;;;;;;;;-1:-1:-1;4034:116:21;;;;;:::i;:::-;;:::i;1721:145:36:-;;;;;;;;;;;;;:::i;12015:3946:21:-;;;;;;;;;;-1:-1:-1;12015:3946:21;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;870:52::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1953:1167:15:-;;;;;;;;;;-1:-1:-1;1953:1167:15;;;;;:::i;:::-;;:::i;2519:426:21:-;;;;;;;;;;-1:-1:-1;2519:426:21;;;;;:::i;:::-;;:::i;1089:85:36:-;;;;;;;;;;;;;:::i;16453:258:21:-;;;;;;;;;;-1:-1:-1;16453:258:21;;;;;:::i;:::-;;:::i;3736:292::-;;;;;;:::i;:::-;;:::i;16946:223::-;;;;;;;;;;-1:-1:-1;16946:223:21;;;;;:::i;:::-;;:::i;2951:779::-;;;;;;;;;;-1:-1:-1;2951:779:21;;;;;:::i;:::-;;:::i;928:43::-;;;;;;;;;;;;;:::i;1131:157::-;;;;;;;;;;-1:-1:-1;1131:157:21;;;;;:::i;:::-;;:::i;17175:116::-;;;;;;;;;;;;;:::i;1399:59::-;;;;;;;;;;-1:-1:-1;1399:59:21;;;;;:::i;:::-;;:::i;1636:57::-;;;;;;;;;;;;;:::i;798:65::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;17406:605::-;;;;;;;;;;-1:-1:-1;17406:605:21;;;;;:::i;:::-;;:::i;2015:240:36:-;;;;;;;;;;-1:-1:-1;2015:240:36;;;;;:::i;:::-;;:::i;4156:332:21:-;4264:10;4238:23;4292:17;;;:8;:17;;;;;;:27;-1:-1:-1;4292:27:21;4284:58;;;;-1:-1:-1;;;4284:58:21;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;4373:17:21;;;;;;:8;:17;;;;;;:29;;4395:6;4373:21;:29::i;:::-;-1:-1:-1;;;;;4353:17:21;;;;;;;:8;:17;;;;;;:49;;;;4412:21;;:13;;;;:21;;;;;4426:6;;4412:21;4353:17;4412:21;4426:6;4412:13;:21;;;;;;;;;;;;;;;;;;;;;4468:4;-1:-1:-1;;;;;4449:32:21;4459:7;-1:-1:-1;;;;;4449:32:21;;4474:6;4449:32;;;;;;:::i;:::-;;;;;;;;4156:332;;;:::o;1294:38::-;1330:2;1294:38;:::o;7164:4582::-;7417:22;7441:24;7481:25;;:::i;:::-;7538:9;7516:19;;;:31;7566:14;:12;:14::i;:::-;7565:15;7557:42;;;;-1:-1:-1;;;7557:42:21;;;;;;;:::i;:::-;7667:1;7633:20;:12;;:20;:::i;:::-;:25;;;;;;;:::i;:::-;:32;;:35;;:102;;7733:1;7633:102;;;7671:52;7694:20;:12;;:20;:::i;:::-;:25;;;;;;;:::i;:::-;7671:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7671:52:21;-1:-1:-1;7671:22:21;;-1:-1:-1;;7671:52:21:i;:::-;-1:-1:-1;;;;;;7609:126:21;:21;;;:126;7753:10;7767:9;7753:23;7745:60;;;;-1:-1:-1;;;7745:60:21;;;;;;;:::i;:::-;7851:10;7835:27;;;;:15;:27;;;;;;-1:-1:-1;;;;;7835:27:21;7815:17;;;:47;;;7872:64;;;;-1:-1:-1;;;7872:64:21;;;;;;;:::i;:::-;7992:10;7954:22;;;;:12;:22;:::i;:::-;:34;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7954:48:21;;7946:79;;;;-1:-1:-1;;;7946:79:21;;;;;;;:::i;:::-;8056:39;8077:4;:17;;;8056:20;:39::i;:::-;8035:110;;;;-1:-1:-1;;;8035:110:21;;;;;;;:::i;:::-;8198:11;8163:22;;;;:12;:22;:::i;:::-;:31;:46;;8155:76;;;;-1:-1:-1;;;8155:76:21;;;;;;;:::i;:::-;8269:14;8249:16;:34;;8241:67;;;;-1:-1:-1;;;8241:67:21;;;;;;;:::i;:::-;8379:96;8402:19;8423:12;8437:4;:19;;;8458:16;8379:22;:96::i;:::-;8343:19;;;8319:156;8320:21;;;8319:156;8486:79;8529:12;8542:9;;8552:12;;8486:42;:79::i;:::-;8794:17;;8753:21;;8790:2;8777:9;8787:2;8777:12;:15;;;;;;:34;8753:58;;8843:9;8821:4;:19;;:31;;;;;8863:22;8944:6;:19;;;8923:6;:18;;;8904:16;8888:13;:32;:53;:75;8863:100;;9232:12;9246:28;9286:4;-1:-1:-1;;;;;9278:18:21;9301:13;9352:32;;;9386:12;9400:9;;9411:12;;9425:4;:21;;;9481:9;9464:14;:26;9508:4;:19;;;9329:216;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9329:216:21;;;;;;;;;;;;;;-1:-1:-1;;;;;9329:216:21;-1:-1:-1;;;;;;9329:216:21;;;;;;;;;;9278:277;;;;9329:216;9278:277;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9565:22:21;;;;;9231:324;;-1:-1:-1;9231:324:21;-1:-1:-1;9637:9:21;9617:19;;;;:29;9597:17;;;:49;9701:53;;;;;;;;;;;;;;:::i;:::-;9657:4;:11;;9670:4;:27;;9656:98;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9769:27:21;;;;:34;:36;9764:133;;9827:59;9845:4;:11;;;9858:4;:27;;;9827:59;;;;;;;:::i;:::-;;;;;;;;9764:133;7164:4582;;;;9937:32;9953:8;;:15;;9937;:32::i;:::-;9918:16;;;:51;9984:12;;9979:1005;;10084:36;10069:4;:11;;;:51;;;;;;;;;:383;;;-1:-1:-1;10209:16:21;;;;10166:21;;;;:38;:60;;:42;:60::i;:::-;10145:4;:17;;;:81;;10144:308;;;;-1:-1:-1;10268:35:21;10253:4;:11;;;:50;;;;;;;;;:130;;;-1:-1:-1;10342:41:21;10327:4;:11;;;:56;;;;;;;;;10253:130;10065:909;;;10490:5;;-1:-1:-1;10664:20:21;:12;;:20;:::i;:::-;:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;10519:379:21;10610:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;10571:17;;;;-1:-1:-1;;;;;10519:379:21;;;;;;10711:20;:12;;:20;:::i;:::-;:23;;;;;;;;;:::i;:::-;10756:10;10788:4;:21;;;10831:4;:17;;;10870:4;:27;;;10519:379;;;;;;;;;;:::i;:::-;;;;;;;;10931:27;;;10924:5;;-1:-1:-1;10931:27:21;-1:-1:-1;10916:43:21;;10065:909;11132:18;;11081:15;;11119:9;11100:28;;11099:51;;-1:-1:-1;11160:14:21;11177:48;11099:51;11202:22;;;;:12;:22;:::i;11177:48::-;11160:65;;11281:54;11328:6;11281:8;:42;11290:12;:22;;;;;;;;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11281:42:21;;;;;;;;;;;;-1:-1:-1;11281:42:21;;;:46;:54::i;:::-;11236:8;:42;11245:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11236:42:21;;;;;;;;;;;;;;;;;-1:-1:-1;11236:42:21;;;:99;;;;11384:17;;;;11375:27;;;:8;:27;;;;;;:39;;11407:6;11375:31;:39::i;:::-;11354:17;;;;-1:-1:-1;;;;;11345:27:21;;;;;:8;:27;;;;;:69;11517:20;:12;;:20;:::i;:::-;:25;;;;;;;:::i;:::-;11462:17;;;;-1:-1:-1;;;;;11430:276:21;;;;11493:10;;11430:276;;11556:20;:12;;:20;:::i;:::-;:23;;;;;;;;;:::i;:::-;11593:12;:22;;;;;;;;:::i;:::-;:32;;;;;;;;;:::i;:::-;11639:4;:21;;;11674:4;:11;;;11699:6;11430:276;;;;;;;;;;:::i;:::-;;;;;;;;11724:4;11716:17;;;;;;;;;;;;;;;;;;;7164:4582;;;;;;;;;;;:::o;1523:55::-;;;;;;;;;;;;;:::o;4494:137::-;4591:25;;4565:7;;4591:37;;4621:6;4591:29;:37::i;:::-;4584:44;;4494:137;;;;:::o;16717:223::-;16885:19;;16906:26;;16822:111;;-1:-1:-1;;;16822:111:21;;16799:4;;-1:-1:-1;;;;;16822:12:21;:33;;;;:111;;16856:12;;16878:4;;16822:111;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1014:::-;1072:21;;:::i;:::-;-1:-1:-1;1105:13:21;;;;;;;;1112:6;1105:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1014:111;:::o;4034:116::-;-1:-1:-1;;;;;4127:16:21;4101:7;4127:16;;;:8;:16;;;;;;;4034:116::o;1721:145:36:-;1312:12;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;1827:1:::1;1811:6:::0;;1790:40:::1;::::0;-1:-1:-1;;;;;1811:6:36;;::::1;::::0;1790:40:::1;::::0;1827:1;;1790:40:::1;1857:1;1840:19:::0;;-1:-1:-1;;;;;;1840:19:36::1;::::0;;1721:145::o;12015:3946:21:-;12323:15;12340:12;12368:30;;:::i;:::-;12826:10;12848:4;12826:27;12818:66;;;;-1:-1:-1;;;12818:66:21;;;;;;;:::i;:::-;13304:8;:42;13313:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13304:42:21;;;;;;;;;;;;;;-1:-1:-1;13304:42:21;;13283:63;;13488:151;-1:-1:-1;;;13524:34:21;13488:151;;13576:12;;13590:9;;;;13601:12;;;;13615:14;;13488:151;;;:::i;:::-;;;;-1:-1:-1;;13488:151:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;13488:151:21;-1:-1:-1;;;;;;13488:151:21;;;;;;;;;;13476:9;;;:163;-1:-1:-1;;13689:20:21;;13744:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13744:37:21;13786:16;:39;;;13827:4;:9;;;13744:93;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13723:114:21;;-1:-1:-1;13723:114:21;-1:-1:-1;13723:114:21;13851:169;;13883:41;13916:7;13883:32;:41::i;:::-;13942:63;13959:36;13997:7;13942:16;:63::i;:::-;14100:7;14089:33;;;;;;;;;;;;:::i;:::-;14033:89;;14057:28;;;14033:89;14034:21;;;14033:89;-1:-1:-1;;;;14388:49:21;14413:12;14427:9;;14388:24;:49::i;:::-;14357:27;;;14313:124;;;14332:23;;;14313:124;;-1:-1:-1;14313:124:21;14451:140;;14494:82;14511:35;14548:4;:27;;;14494:16;:82::i;:::-;14609:4;:28;;;:56;;;;;14642:4;:23;;;14641:24;14609:56;14605:247;;;14749:88;14766:41;14809:4;:27;;;14749:16;:88::i;:::-;12015:3946;15172:35;;;15221:4;:21;;;15256:4;:23;;;15311:9;15293:15;:27;15356:12;:22;;;;;;;;:::i;:::-;15136:252;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;15136:252:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;15136:252:21;-1:-1:-1;;;;;;15136:252:21;;;;;;;;;;15124:9;;;:264;-1:-1:-1;;;;15447:22:21;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15447:37:21;15489:16;:40;;;15531:4;:9;;;15447:94;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15409:132;;;;15557:11;15552:99;;15584:56;15601:33;15636:3;15584:16;:56::i;:::-;-1:-1:-1;;15720:18:21;;15675:8;15720:18;15684:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15675:42:21;-1:-1:-1;;;;;15675:42:21;;;;;;;;;;;;;:63;15671:155;;;15754:61;15771:39;15754:61;;;;;;;;;;;;:16;:61::i;:::-;15844:4;:23;;;:80;;15891:33;15844:80;;;15870:18;15844:80;15926:4;:27;;;15836:118;;;;;12015:3946;;;;;;;;;;;:::o;870:52::-;;;:::o;1953:1167:15:-;2121:19;;-1:-1:-1;;;2121:19:15;;2021:18;;2086:9;;2021:18;;-1:-1:-1;;;;;2121:16:15;;;;;:19;;2021:18;;2121:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2106:34;;2150:16;2169:9;-1:-1:-1;;;;;2169:18:15;;2188:1;2169:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2150:40;;2242:4;2208:5;-1:-1:-1;;;;;2208:15:15;;2232:4;2208:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;2200:78;;;;-1:-1:-1;;;2200:78:15;;;;;;;:::i;:::-;2325:4;-1:-1:-1;;;;;2296:34:15;:9;-1:-1:-1;;;;;2296:15:15;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2296:34:15;;2288:79;;;;-1:-1:-1;;;2288:79:15;;;;;;;:::i;:::-;2377:41;;-1:-1:-1;;;2377:41:15;;-1:-1:-1;;;;;2377:13:15;;;;;:41;;2391:16;;-1:-1:-1;;2414:2:15;2377:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2428:35:15;;-1:-1:-1;;;2428:35:15;;-1:-1:-1;;;;;2428:13:15;;;;;:35;;2442:10;;-1:-1:-1;;2459:2:15;2428:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2506:37:15;;-1:-1:-1;;;2506:37:15;;-1:-1:-1;;;;;2506:14:15;;;;;:37;;2521:16;;2539:3;;2506:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2554:47:15;;-1:-1:-1;;;2554:47:15;;-1:-1:-1;;;;;2554:21:15;;;;;:47;;2594:4;;2554:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2650:70:15;;;;;;;;2669:1;2650:70;;2612:35;2650:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2751:41;;2650:70;;-1:-1:-1;2612:35:15;-1:-1:-1;2751:41:15;;2762:4;;2773:3;;2778:5;;2784:7;;2751:41;;:::i;:::-;;;;;;;;;;;;;2731:61;;2827:9;2839;2858:53;;-1:-1:-1;;;2858:53:15;;2827:21;;-1:-1:-1;;;;;;2858:25:15;;;;;:53;;2884:4;;2890;;2896:3;;2901:9;;2858:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2921:9;2933;2921:21;;2953:5;-1:-1:-1;;;;;2953:18:15;;2972:16;2998:4;3005:5;-1:-1:-1;;;;;3005:15:15;;3021:16;3005:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2953:86;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3072:4;3065;:11;3049:27;;3091:22;3099:13;3091:22;;;;;;:::i;:::-;;;;;;;;1953:1167;;;;;;;;;;:::o;2519:426:21:-;2663:10;2704:34;2663:10;2704:20;:34::i;:::-;2683:105;;;;-1:-1:-1;;;2683:105:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;2806:25:21;;2834:1;2806:25;;;:11;:25;;;;;;2798:58;;;;-1:-1:-1;;;2798:58:21;;;;;;;:::i;:::-;2893:12;-1:-1:-1;;;;;2871:67:21;;2907:12;2921:11;2934:3;;2871:67;;;;;;;;;:::i;:::-;;;;;;;;2519:426;;;;;:::o;1089:85:36:-;1135:7;1161:6;-1:-1:-1;;;;;1161:6:36;1089:85;:::o;16453:258:21:-;16572:7;16598:106;16625:78;16699:3;16626:67;16662:30;:21;;;;16699:3;16662:25;:30::i;:::-;16626:31;:7;16638:18;;16626:11;:31::i;:::-;:35;;:67::i;:::-;16625:73;;:78::i;:::-;16598:22;;;;;:26;:106::i;:::-;16591:113;;16453:258;;;;;:::o;3736:292::-;3860:30;;3823:9;;3850:40;;;3842:68;;;;-1:-1:-1;;;3842:68:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;3940:16:21;;;;;;:8;:16;;;;;;:28;;3961:6;3940:20;:28::i;:::-;-1:-1:-1;;;;;3921:16:21;;;;;;:8;:16;;;;;;;:47;;;;3984:37;;4002:10;;3921:16;3984:37;;;;4014:6;;3984:37;:::i;:::-;;;;;;;;3736:292;;:::o;16946:223::-;1312:12:36;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;17050:12:21::1;17031:16;;:31;17023:62;;;;-1:-1:-1::0;;;17023:62:21::1;;;;;;;:::i;:::-;17095:16;:28:::0;;;17138:24:::1;::::0;::::1;::::0;::::1;::::0;17114:9;;17138:24:::1;:::i;:::-;;;;;;;;16946:223:::0;:::o;2951:779::-;3063:10;3040:20;3108:25;;;:11;:25;;;;;;;:50;;3168:42;;;;3246:6;:21;3228:39;;;3220:68;;;;-1:-1:-1;;;3220:68:21;;;;;;;:::i;:::-;3320:34;3341:12;3320:20;:34::i;:::-;3299:105;;;;-1:-1:-1;;;3299:105:21;;;;;;;:::i;:::-;3420:9;3415:229;3435:26;;;3415:229;;;3537:1;3490:15;3537:1;3506:15;;3522:1;3506:18;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3490:35:21;;;;;;;;;;;;;;-1:-1:-1;3490:35:21;;;:49;3482:87;;;;-1:-1:-1;;;3482:87:21;;;;;;;:::i;:::-;3621:12;3583:15;:35;3599:15;;3615:1;3599:18;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3583:35:21;;;;;;;;;;;;;;-1:-1:-1;3583:35:21;:50;;-1:-1:-1;;;;;;3583:50:21;;;;;;;;;;;-1:-1:-1;3463:3:21;3415:229;;;;3677:12;-1:-1:-1;;;;;3659:64:21;;3691:15;;3708:14;3659:64;;;;;;;;:::i;:::-;;;;;;;;2951:779;;;;:::o;928:43::-;;;:::o;1131:157::-;1312:12:36;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;1224:16:21;;:6:::1;:16:::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;1255:26;::::1;::::0;::::1;::::0;::::1;:::i;17175:116::-:0;17268:16;;17252:12;:32;;17175:116;:::o;1399:59::-;;;;;;;;;;;;-1:-1:-1;;;;;1399:59:21;;:::o;1636:57::-;;;;:::o;798:65::-;;;;;;;;;;;;;;;-1:-1:-1;;798:65:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;17406:605::-;17341:10;-1:-1:-1;;;;;17355:9:21;17341:23;;17333:49;;;;-1:-1:-1;;;17333:49:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;17539:28:21;;::::1;17516:20;17539:28:::0;;;:15:::1;:28;::::0;;;;;::::1;17659:26:::0;17651:59:::1;;;;-1:-1:-1::0;;;17651:59:21::1;;;;;;;:::i;:::-;17741:34;17762:12;17741:20;:34::i;:::-;17720:105;;;;-1:-1:-1::0;;;17720:105:21::1;;;;;;;:::i;:::-;17878:39;::::0;-1:-1:-1;;;17878:39:21;;17835:40:::1;::::0;-1:-1:-1;;;;;17878:12:21::1;:25;::::0;::::1;::::0;:39:::1;::::0;17904:12;;17878:39:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17988:15:::0;;17927:77:::1;::::0;-1:-1:-1;;;17927:77:21;;17835:82;;-1:-1:-1;;;;;;17927:12:21::1;:33;::::0;::::1;::::0;:77:::1;::::0;17961:12;;17975:11;;17927:77:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;17392:1;;17406:605:::0;;:::o;2015:240:36:-;1312:12;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;-1:-1:-1;;;;;2103:22:36;::::1;2095:73;;;;-1:-1:-1::0;;;2095:73:36::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:6;::::0;;2183:38:::1;::::0;-1:-1:-1;;;;;2183:38:36;;::::1;::::0;2204:6;::::1;::::0;2183:38:::1;::::0;::::1;2231:6;:17:::0;;-1:-1:-1;;;;;;2231:17:36::1;-1:-1:-1::0;;;;;2231:17:36;;;::::1;::::0;;;::::1;::::0;;2015:240::o;3136:155:38:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:38;;;3136:155::o;2483:571:33:-;2603:13;2652:5;2660:1;2652:9;2640:1;:8;:21;;2632:60;;;;;-1:-1:-1;;;2632:60:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2787:21:33;2804:2;2787:21;2781:28;-1:-1:-1;;;;;;2936:79:33;;2483:571::o;4637:2068:21:-;4865:51;;:::i;:::-;4918:22;4994;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4983:64:21;;5052:5;4983:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5097:34;;;;4952:108;;-1:-1:-1;5078:8:21;:53;;5070:90;;;;-1:-1:-1;;;5070:90:21;;;;;;;:::i;:::-;5170:19;5192:32;5208:8;5192:15;:32::i;:::-;5301:35;;5170:54;;-1:-1:-1;5265:33:21;;;:71;5234:28;5395:8;5265:71;5395:8;5374:36;;;;;5346:64;;1330:2;5428:17;:30;;5420:67;;;;-1:-1:-1;;;5420:67:21;;;;;;;:::i;:::-;5529:33;;5506:56;;;5498:95;;;;-1:-1:-1;;;5498:95:21;;;;;;;:::i;:::-;5648:39;;;;5611:33;;:76;;5603:114;;;;-1:-1:-1;;;5603:114:21;;;;;;;:::i;:::-;5757:247;5983:20;5757:208;5953:11;5757:208;5910:20;:12;;:20;:::i;:::-;:24;;;5757:135;5851:16;:40;;;5757:76;5793:16;:39;;;5757:6;:18;;;:22;;:76;;;;:::i;:::-;:80;;:135::i;:247::-;5728:276;;6227:14;6207:16;:34;;6186:97;;;;-1:-1:-1;;;6186:97:21;;;;;;;:::i;:::-;6294:25;6322:89;6351:14;6379:22;;;;:12;:22;:::i;6322:89::-;6294:117;-1:-1:-1;6614:8:21;:42;6623:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6614:42:21;-1:-1:-1;;;;;6614:42:21;;;;;;;;;;;;;6593:17;:63;;6585:113;;;;-1:-1:-1;;;6585:113:21;;;;;;;:::i;:::-;4637:2068;;;;;;;;;;;:::o;234:1134:35:-;960:23;1157:54;1174:22;;;;:12;:22;:::i;:::-;:36;;;;;;;:::i;:::-;1157:16;:54::i;:::-;1099:43;1116:20;:12;;:20;:::i;:::-;:25;;;;;;;:::i;1099:43::-;1054:30;1071:12;;1054:16;:30::i;:::-;1012:27;1029:9;;1012:16;:27::i;:::-;986:98;:156;:225;:11;:225;;-1:-1:-1;1249:2:35;1229:22;;;1221:59;;;;-1:-1:-1;;;1221:59:35;;;;;;;:::i;:::-;1320:8;1298:37;;1290:71;;;;-1:-1:-1;;;1290:71:35;;;;;;;:::i;:::-;234:1134;;;;;;:::o;2690:175:38:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:38;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:215;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:38;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:104:43;685:10;598:104;:::o;4317:125:30:-;4385:50;4413:4;487;4385:27;:50::i;:::-;4317:125;:::o;16108:339:21:-;16199:17;16230:6;16238:3;16219:23;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16199:43;;16252:38;16285:4;16252:32;:38::i;:::-;16346:4;16340:11;16389:2;16383:4;16379:13;16422:8;16413:7;16406:25;3278:813:30;3384:21;3407:16;3425;3454:23;3481:26;3494:12;3481;:26::i;:::-;3453:54;-1:-1:-1;3517:24:30;3544:49;3560:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;3544:15;:49::i;:::-;3517:76;-1:-1:-1;3691:22:30;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3691:37:30;-1:-1:-1;;;3806:20:30;:12;;:20;:::i;:::-;3828:16;1188:18;;;;;;;;;;;;;-1:-1:-1;;;1188:18:30;;;1211:14;;;;;;;;;;;;;;;;;1096;;;;;;;;;;;;;;;;;1055:56;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1055:56:30;;;;;;;;;;1162:90;;;;1055:56;1162:90;;:::i;:::-;;;;;;;;;;;;;1384:29;;;;;;3870:10;3882:9;;3742:159;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3742:159:30;;;;;;;;;;;;;;-1:-1:-1;;;;;3742:159:30;-1:-1:-1;;;;;;3742:159:30;;;;;;;;;;3691:211;;;;3742:159;3691:211;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3665:237:30;;-1:-1:-1;3665:237:30;-1:-1:-1;3912:143:30;;;;4025:3;4014:30;;;;;;;;;;;;:::i;:::-;3993:51;;-1:-1:-1;3993:51:30;-1:-1:-1;3912:143:30;4064:20;4080:3;4064:15;:20::i;:::-;3278:813;;;;;;;;;:::o;4217:150:38:-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:38:o;1582:135:35:-;1674:2;1694;1681:15;;-1:-1:-1;;1680:29:35;1674:36;1582:135;;;;:::o;429:173:33:-;531:6;517:4;:11;:20;513:83;;;577:6;571:4;564:20;562:24;429:173;;:::o;1723:229:30:-;1839:23;1916:28;1930:13;;;;:3;:13;:::i;:::-;1916;:28::i;:::-;1892:53;;;;;;;;:::i;:::-;;;;;;;;;;;;;1879:66;;1723:229;;;:::o;4448:292::-;4552:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4552:180:30;;;;;;;;;;;4515:7;;4541:192;;4552:180;-1:-1:-1;;4662:12:30;:10;:12::i;:::-;4552:180;;;;4708:9;-1:-1:-1;;;;;4552:180:30;;;;4541:10;:192::i;5249:451::-;5328:7;1314:14;;;;;;;;;;;;;;;;;1304:25;;;;;;;;5428:12;;;5458:15;;;5491:16;;;;5525:15;;;;;;;;:::i;:::-;5558:13;;;;;;;;:::i;:::-;5589;;;;;;;;:::i;:::-;5630:17;;;;:3;:17;:::i;:::-;5620:28;;;;;;;:::i;:::-;;;;;;;;;5364:328;;;;;;;;;5666:12;;;;;5364:328;;;:::i;:::-;;;;;;;;;;;;;5354:339;;;;;;5347:346;;5249:451;;;:::o;4746:170::-;4891:9;;4871:39::o;4922:321::-;4990:7;1607:109;5109:3;:8;;;5093:26;;;;;;5153:3;:11;;;5137:29;;;;;;5184:3;:11;;;5213:3;:21;;;5026:209;;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:166:44:-;92:13;;141;;134:21;124:32;;114:2;;170:1;167;160:12;185:377;;;302:3;295:4;287:6;283:17;279:27;269:2;;327:8;317;310:26;269:2;-1:-1:-1;357:20:44;;-1:-1:-1;;;;;389:30:44;;386:2;;;439:8;429;422:26;386:2;483:4;475:6;471:17;459:29;;535:3;528:4;519:6;511;507:19;503:30;500:39;497:2;;;552:1;549;542:12;497:2;259:303;;;;;:::o;567:504::-;;675:3;668:4;660:6;656:17;652:27;642:2;;697:5;690;683:20;642:2;730:6;724:13;-1:-1:-1;;;;;752:2:44;749:26;746:2;;;778:9;746:2;813:54;855:2;836:13;;-1:-1:-1;;832:27:44;861:4;828:38;813:54;:::i;:::-;892:2;883:7;876:19;938:3;931:4;926:2;918:6;914:15;910:26;907:35;904:2;;;959:5;952;945:20;904:2;976:64;1037:2;1030:4;1021:7;1017:18;1010:4;1002:6;998:17;976:64;:::i;:::-;1058:7;632:439;-1:-1:-1;;;;632:439:44:o;1076:171::-;;1189:2;1180:6;1175:3;1171:16;1167:25;1164:2;;;1209:5;1202;1195:20;1164:2;-1:-1:-1;1235:6:44;1154:93;-1:-1:-1;1154:93:44:o;1252:259::-;;1364:2;1352:9;1343:7;1339:23;1335:32;1332:2;;;1385:6;1377;1370:22;1332:2;1429:9;1416:23;1448:33;1475:5;1448:33;:::i;1516:263::-;;1639:2;1627:9;1618:7;1614:23;1610:32;1607:2;;;1660:6;1652;1645:22;1607:2;1697:9;1691:16;1716:33;1743:5;1716:33;:::i;1784:410::-;;;1921:2;1909:9;1900:7;1896:23;1892:32;1889:2;;;1942:6;1934;1927:22;1889:2;1986:9;1973:23;2005:33;2032:5;2005:33;:::i;:::-;2057:5;-1:-1:-1;2114:2:44;2099:18;;2086:32;2127:35;2086:32;2127:35;:::i;:::-;2181:7;2171:17;;;1879:315;;;;;:::o;2199:666::-;;;2346:2;2334:9;2325:7;2321:23;2317:32;2314:2;;;2367:6;2359;2352:22;2314:2;2412:9;2399:23;-1:-1:-1;;;;;2482:2:44;2474:6;2471:14;2468:2;;;2503:6;2495;2488:22;2468:2;2546:6;2535:9;2531:22;2521:32;;2591:7;2584:4;2580:2;2576:13;2572:27;2562:2;;2618:6;2610;2603:22;2562:2;2663;2650:16;2689:2;2681:6;2678:14;2675:2;;;2710:6;2702;2695:22;2675:2;2769:7;2764:2;2758;2750:6;2746:15;2742:2;2738:24;2734:33;2731:46;2728:2;;;2795:6;2787;2780:22;2728:2;2831;2823:11;;;;;2853:6;;-1:-1:-1;2304:561:44;;-1:-1:-1;;;;2304:561:44:o;2870:214::-;;2990:2;2978:9;2969:7;2965:23;2961:32;2958:2;;;3011:6;3003;2996:22;2958:2;3039:39;3068:9;3039:39;:::i;3089:438::-;;;3235:2;3223:9;3214:7;3210:23;3206:32;3203:2;;;3256:6;3248;3241:22;3203:2;3284:39;3313:9;3284:39;:::i;:::-;3274:49;;3367:2;3356:9;3352:18;3346:25;-1:-1:-1;;;;;3386:6:44;3383:30;3380:2;;;3431:6;3423;3416:22;3380:2;3459:62;3513:7;3504:6;3493:9;3489:22;3459:62;:::i;:::-;3449:72;;;3193:334;;;;;:::o;3532:438::-;;;3678:2;3666:9;3657:7;3653:23;3649:32;3646:2;;;3699:6;3691;3684:22;3646:2;3737:9;3731:16;-1:-1:-1;;;;;3762:6:44;3759:30;3756:2;;;3807:6;3799;3792:22;3756:2;3835:62;3889:7;3880:6;3869:9;3865:22;3835:62;:::i;:::-;3825:72;;;3916:48;3960:2;3949:9;3945:18;3916:48;:::i;:::-;3906:58;;3636:334;;;;;:::o;4829:524::-;;;4998:2;4986:9;4977:7;4973:23;4969:32;4966:2;;;5019:6;5011;5004:22;4966:2;5056:9;5050:16;5095:1;5088:5;5085:12;5075:2;;5116:6;5108;5101:22;5075:2;5193;5178:18;;5172:25;5144:5;;-1:-1:-1;;;;;;5209:30:44;;5206:2;;;5257:6;5249;5242:22;5358:631;;5515:3;5503:9;5494:7;5490:23;5486:33;5483:2;;;5537:6;5529;5522:22;5483:2;5575;5569:9;5617:3;5609:6;5605:16;5687:6;5675:10;5672:22;-1:-1:-1;;;;;5639:10:44;5636:34;5633:62;5630:2;;;5698:9;5630:2;5729:10;5725:2;5718:22;;5770:9;5764:16;5756:6;5749:32;5835:2;5824:9;5820:18;5814:25;5809:2;5801:6;5797:15;5790:50;5894:2;5883:9;5879:18;5873:25;5868:2;5860:6;5856:15;5849:50;5953:2;5942:9;5938:18;5932:25;5927:2;5919:6;5915:15;5908:50;5977:6;5967:16;;;5473:516;;;;:::o;5994:863::-;;6116:3;6160:2;6148:9;6139:7;6135:23;6131:32;6128:2;;;6181:6;6173;6166:22;6128:2;6212:18;6227:2;6212:18;:::i;:::-;6199:31;;6266:9;6253:23;6246:5;6239:38;6337:2;6326:9;6322:18;6309:32;6304:2;6297:5;6293:14;6286:56;6402:2;6391:9;6387:18;6374:32;6369:2;6362:5;6358:14;6351:56;6467:2;6456:9;6452:18;6439:32;6434:2;6427:5;6423:14;6416:56;6533:3;6522:9;6518:19;6505:33;6499:3;6492:5;6488:15;6481:58;6600:3;6589:9;6585:19;6572:33;6566:3;6559:5;6555:15;6548:58;6667:3;6656:9;6652:19;6639:33;6633:3;6626:5;6622:15;6615:58;6734:3;6723:9;6719:19;6706:33;6700:3;6693:5;6689:15;6682:58;6759:3;6822:2;6811:9;6807:18;6794:32;6789:2;6782:5;6778:14;6771:56;;6846:5;6836:15;;;6096:761;;;;:::o;6862:1323::-;;;;;;;;;7156:9;7147:7;7143:23;7186:3;7182:2;7178:12;7175:2;;;7208:6;7200;7193:22;7175:2;7253:9;7240:23;-1:-1:-1;;;;;7323:2:44;7315:6;7312:14;7309:2;;;7344:6;7336;7329:22;7309:2;7372:75;7439:7;7430:6;7419:9;7415:22;7372:75;:::i;:::-;7362:85;;7500:2;7489:9;7485:18;7472:32;7456:48;;7529:2;7519:8;7516:16;7513:2;;;7550:6;7542;7535:22;7513:2;7594:62;7648:7;7637:8;7626:9;7622:24;7594:62;:::i;:::-;7675:8;;-1:-1:-1;7568:88:44;-1:-1:-1;7763:2:44;7748:18;;7735:32;;-1:-1:-1;7779:16:44;;;7776:2;;;7813:6;7805;7798:22;7776:2;;7857:62;7911:7;7900:8;7889:9;7885:24;7857:62;:::i;:::-;7938:8;;-1:-1:-1;7831:88:44;-1:-1:-1;;8007:3:44;-1:-1:-1;;7989:16:44;;7985:26;7982:2;;;8029:6;8021;8014:22;7982:2;-1:-1:-1;7123:1062:44;;;;-1:-1:-1;7123:1062:44;;;;-1:-1:-1;7123:1062:44;;8072:2;8057:18;;;-1:-1:-1;8122:3:44;8107:19;;8094:33;;8174:3;8159:19;8146:33;;-1:-1:-1;7123:1062:44:o;8190:693::-;;8340:3;8328:9;8319:7;8315:23;8311:33;8308:2;;;8362:6;8354;8347:22;8308:2;8400;8394:9;8442:3;8434:6;8430:16;8512:6;8500:10;8497:22;-1:-1:-1;;;;;8464:10:44;8461:34;8458:62;8455:2;;;8523:9;8455:2;8554:10;8550:2;8543:22;;8595:9;8589:16;8581:6;8574:32;8660:2;8649:9;8645:18;8639:25;8634:2;8626:6;8622:15;8615:50;8719:2;8708:9;8704:18;8698:25;8693:2;8685:6;8681:15;8674:50;8767:2;8756:9;8752:18;8746:25;8780:33;8807:5;8780:33;:::i;:::-;8841:2;8829:15;;8822:30;8833:6;8298:585;-1:-1:-1;;;8298:585:44:o;8888:190::-;;9000:2;8988:9;8979:7;8975:23;8971:32;8968:2;;;9021:6;9013;9006:22;8968:2;-1:-1:-1;9049:23:44;;8958:120;-1:-1:-1;8958:120:44:o;9083:194::-;;9206:2;9194:9;9185:7;9181:23;9177:32;9174:2;;;9227:6;9219;9212:22;9174:2;-1:-1:-1;9255:16:44;;9164:113;-1:-1:-1;9164:113:44:o;9282:335::-;;;9419:2;9407:9;9398:7;9394:23;9390:32;9387:2;;;9440:6;9432;9425:22;9387:2;9481:9;9468:23;9458:33;;9541:2;9530:9;9526:18;9513:32;9554:33;9581:5;9554:33;:::i;9622:487::-;;;9780:2;9768:9;9759:7;9755:23;9751:32;9748:2;;;9801:6;9793;9786:22;9748:2;9842:9;9829:23;9819:33;;9903:2;9892:9;9888:18;9875:32;-1:-1:-1;;;;;9922:6:44;9919:30;9916:2;;;9967:6;9959;9952:22;9916:2;9995:22;;10051:3;10033:16;;;10029:26;10026:2;;;10073:6;10065;10058:22;10114:1146;;;;;;;;10364:3;10352:9;10343:7;10339:23;10335:33;10332:2;;;10386:6;10378;10371:22;10332:2;10427:9;10414:23;10404:33;;10488:2;10477:9;10473:18;10460:32;-1:-1:-1;;;;;10552:2:44;10544:6;10541:14;10538:2;;;10573:6;10565;10558:22;10538:2;10601:75;10668:7;10659:6;10648:9;10644:22;10601:75;:::i;:::-;10591:85;;10729:2;10718:9;10714:18;10701:32;10685:48;;10758:2;10748:8;10745:16;10742:2;;;10779:6;10771;10764:22;10742:2;10823:62;10877:7;10866:8;10855:9;10851:24;10823:62;:::i;:::-;10904:8;;-1:-1:-1;10797:88:44;-1:-1:-1;10992:2:44;10977:18;;10964:32;;-1:-1:-1;11008:16:44;;;11005:2;;;11042:6;11034;11027:22;11005:2;;11086:62;11140:7;11129:8;11118:9;11114:24;11086:62;:::i;:::-;10322:938;;;;-1:-1:-1;10322:938:44;;;;;;11249:3;11234:19;;;11221:33;;10322:938;-1:-1:-1;;;;10322:938:44:o;11265:568::-;;;;;11431:2;11419:9;11410:7;11406:23;11402:32;11399:2;;;11452:6;11444;11437:22;11399:2;11493:9;11480:23;11470:33;;11550:2;11539:9;11535:18;11522:32;11512:42;;11605:2;11594:9;11590:18;11577:32;-1:-1:-1;;;;;11624:6:44;11621:30;11618:2;;;11669:6;11661;11654:22;11618:2;11713:60;11765:7;11756:6;11745:9;11741:22;11713:60;:::i;:::-;11389:444;;;;-1:-1:-1;11792:8:44;-1:-1:-1;;;;11389:444:44:o;11838:114::-;-1:-1:-1;;;;;11914:31:44;11902:44;;11892:60::o;11957:270::-;;12047:6;12042:3;12035:19;12099:6;12092:5;12085:4;12080:3;12076:14;12063:43;12151:3;12144:4;12135:6;12130:3;12126:16;12122:27;12115:40;12216:4;12209:2;12205:7;12200:2;12192:6;12188:15;12184:29;12179:3;12175:39;12171:50;12164:57;;12025:202;;;;;:::o;12232:259::-;;12313:5;12307:12;12340:6;12335:3;12328:19;12356:63;12412:6;12405:4;12400:3;12396:14;12389:4;12382:5;12378:16;12356:63;:::i;:::-;12473:2;12452:15;-1:-1:-1;;12448:29:44;12439:39;;;;12480:4;12435:50;;12283:208;-1:-1:-1;;12283:208:44:o;12496:140::-;12586:1;12579:5;12576:12;12566:2;;12592:9;12566:2;12612:18;;12556:80::o;12641:895::-;;12756:5;12743:19;12771:35;12798:7;12771:35;:::i;:::-;-1:-1:-1;;;;;12865:16:44;;;12853:29;;12930:4;12919:16;;12906:30;;12945:35;12906:30;12945:35;:::i;:::-;13012:16;13005:4;12996:14;;12989:40;13085:4;13074:16;;;13061:30;13045:14;;;13038:54;13148:4;13137:16;;;13124:30;13108:14;;;13101:54;13211:4;13200:16;;;13187:30;13171:14;;;13164:54;13261:57;13312:4;13301:16;;13078:5;13261:57;:::i;:::-;13350:4;13343;13338:3;13334:14;13327:28;13376:71;13441:4;13436:3;13432:14;13418:12;13404;13376:71;:::i;:::-;13364:83;;;13503:4;13496:5;13492:16;13479:30;13472:4;13467:3;13463:14;13456:54;13526:4;13519:11;;;12718:818;;;;:::o;13541:1071::-;;13633:6;13673:5;13660:19;13655:3;13648:32;13736:4;13729:5;13725:16;13712:30;13705:4;13700:3;13696:14;13689:54;13799:4;13792:5;13788:16;13775:30;13768:4;13763:3;13759:14;13752:54;13854:4;13847:5;13843:16;13830:30;13869:35;13896:7;13869:35;:::i;:::-;-1:-1:-1;;;;;13974:16:44;;;13967:4;13958:14;;13951:40;14039:4;14028:16;;14015:30;;14054:35;14015:30;14054:35;:::i;:::-;14121:16;14114:4;14105:14;;14098:40;14186:4;14175:16;;14162:30;14201:35;14162:30;14201:35;:::i;:::-;14245:53;14292:4;14287:3;14283:14;14274:7;14245:53;:::i;:::-;;14341:57;14392:4;14385:5;14381:16;14374:5;14341:57;:::i;:::-;14430:2;14423:4;14418:3;14414:14;14407:26;14454:69;14519:2;14514:3;14510:12;14496;14482;14454:69;:::i;:::-;14442:81;;;;14579:4;14572:5;14568:16;14555:30;14548:4;14543:3;14539:14;14532:54;14602:4;14595:11;;;13613:999;;;;:::o;14617:697::-;;14741:5;14728:19;14786:5;14770:14;14766:26;14847:3;14843:8;14839:2;14835:17;14815:18;14811:42;14801:2;;14869:3;14864;14857:16;14801:2;14896:4;14891:3;14884:17;14922:92;15008:4;15003:3;14999:14;14991:5;14971:18;14967:30;14922:92;:::i;:::-;14910:104;-1:-1:-1;15075:4:44;15064:16;;15051:30;-1:-1:-1;;15126:17:44;;15100:44;;15090:2;;15160:3;15155;15148:16;15090:2;15208:3;15202:4;15198:14;15191:4;15186:3;15182:14;15175:38;15229:79;15303:4;15295:5;15273:20;15269:32;15229:79;:::i;:::-;15222:86;14692:622;-1:-1:-1;;;;;;14692:622:44:o;15319:273::-;;15502:6;15494;15489:3;15476:33;15528:16;;15553:15;;;15528:16;15466:126;-1:-1:-1;15466:126:44:o;15597:274::-;;15764:6;15758:13;15780:53;15826:6;15821:3;15814:4;15806:6;15802:17;15780:53;:::i;:::-;15849:16;;;;;15734:137;-1:-1:-1;;15734:137:44:o;15876:940::-;;16343:6;16337:13;16359:53;16405:6;16400:3;16393:4;16385:6;16381:17;16359:53;:::i;:::-;-1:-1:-1;;;16434:16:44;;;16459:18;;;16502:13;;16524:65;16502:13;16576:1;16565:13;;16558:4;16546:17;;16524:65;:::i;:::-;-1:-1:-1;;;16652:1:44;16608:20;;;;16644:10;;;16637:23;16685:13;;16707:62;16685:13;16756:1;16748:10;;16741:4;16729:17;;16707:62;:::i;:::-;16789:17;16808:1;16785:25;;16313:503;-1:-1:-1;;;;;16313:503:44:o;16821:437::-;;-1:-1:-1;;;17076:3:44;17069:35;17133:6;17127:13;17149:62;17204:6;17199:2;17194:3;17190:12;17183:4;17175:6;17171:17;17149:62;:::i;:::-;17231:16;;;;17249:2;17227:25;;17059:199;-1:-1:-1;;17059:199:44:o;17263:203::-;-1:-1:-1;;;;;17427:32:44;;;;17409:51;;17397:2;17382:18;;17364:102::o;17471:282::-;-1:-1:-1;;;;;17671:32:44;;;;17653:51;;17735:2;17720:18;;17713:34;17641:2;17626:18;;17608:145::o;17758:595::-;-1:-1:-1;;;;;18061:15:44;;;18043:34;;18113:15;;18108:2;18093:18;;18086:43;-1:-1:-1;;;;;;18165:33:44;;18160:2;18145:18;;18138:61;18230:2;18215:18;;18208:34;;;18023:3;18273;18258:19;;18251:32;;;17758:595;;18300:47;;18327:19;;18319:6;18300:47;:::i;:::-;18292:55;17995:358;-1:-1:-1;;;;;;;17995:358:44:o;18358:391::-;-1:-1:-1;;;;;18632:15:44;;;18614:34;;18684:15;;;;18679:2;18664:18;;18657:43;18731:2;18716:18;;18709:34;;;;18564:2;18549:18;;18531:218::o;18754:590::-;-1:-1:-1;;;;;19085:15:44;;;19067:34;;19137:15;;19132:2;19117:18;;19110:43;-1:-1:-1;;;;;;19189:33:44;;19184:2;19169:18;;19162:61;19016:3;19001:19;;19232:62;19290:2;19275:18;;19267:6;19232:62;:::i;:::-;19331:6;19325:3;19314:9;19310:19;19303:35;18983:361;;;;;;;;:::o;19729:447::-;-1:-1:-1;;;;;20016:15:44;;;19998:34;;20068:15;;;;20063:2;20048:18;;20041:43;20115:2;20100:18;;20093:34;20158:2;20143:18;;20136:34;;;;19947:3;19932:19;;19914:262::o;20749:789::-;20977:2;20989:21;;;20962:18;;21045:22;;;20749:789;21124:6;21098:2;21083:18;;20749:789;21161:306;21175:6;21172:1;21169:13;21161:306;;;21250:6;21237:20;21270:33;21297:5;21270:33;:::i;:::-;-1:-1:-1;;;;;21328:31:44;21316:44;;21383:4;21442:15;;;;21407:12;;;;21356:1;21190:9;21161:306;;;-1:-1:-1;21518:4:44;21503:20;;;;21496:36;;;;-1:-1:-1;21484:3:44;20938:600;-1:-1:-1;;;20938:600:44:o;21543:187::-;21708:14;;21701:22;21683:41;;21671:2;21656:18;;21638:92::o;21735:300::-;;21918:6;21911:14;21904:22;21893:9;21886:41;21963:2;21958;21947:9;21943:18;21936:30;21983:46;22025:2;22014:9;22010:18;22002:6;21983:46;:::i;22040:177::-;22186:25;;;22174:2;22159:18;;22141:76::o;22222:489::-;22481:25;;;22537:2;22522:18;;22515:34;;;;22580:2;22565:18;;22558:34;;;;22623:2;22608:18;;22601:34;-1:-1:-1;;;;;22672:32:44;22666:3;22651:19;;22644:61;22468:3;22453:19;;22435:276::o;22716:816::-;23087:25;;;23143:2;23128:18;;23121:34;;;;23186:2;23171:18;;23164:34;;;;23229:2;23214:18;;23207:34;;;;-1:-1:-1;;;;;23316:15:44;;;23310:3;23295:19;;23288:44;23369:15;;23268:3;23348:19;;23341:44;23422:15;23416:3;23401:19;;23394:44;23469:3;23454:19;;23447:35;23513:3;23498:19;;23491:35;23074:3;23059:19;;23041:491::o;23537:1285::-;;23826:3;23815:9;23808:22;23853:47;23895:3;23884:9;23880:19;23872:6;23853:47;:::i;:::-;23950:6;23943:14;23936:22;23931:2;23920:9;23916:18;23909:50;23995:6;23990:2;23979:9;23975:18;23968:34;24050:9;24042:6;24038:22;24033:2;24022:9;24018:18;24011:50;24080:6;24116;24110:13;24102:6;24095:29;24175:2;24167:6;24163:15;24157:22;24152:2;24144:6;24140:15;24133:47;24231:2;24223:6;24219:15;24213:22;24208:2;24200:6;24196:15;24189:47;24314:1;24310;24305:3;24301:11;24297:19;24291:2;24283:6;24279:15;24273:22;24269:48;24264:2;24256:6;24252:15;24245:73;24365:3;24357:6;24353:16;24347:23;24379:60;24434:3;24426:6;24422:16;24408:12;24379:60;:::i;:::-;;24488:4;24480:6;24476:17;24470:24;24503:63;24560:4;24552:6;24548:17;24532:14;24503:63;:::i;:::-;;24615:4;24607:6;24603:17;24597:24;24656:2;24649:4;24641:6;24637:17;24630:29;24682:51;24729:2;24721:6;24717:15;24701:14;24682:51;:::i;:::-;24668:65;;;24786:4;24778:6;24774:17;24768:24;24761:4;24753:6;24749:17;24742:51;24810:6;24802:14;;;;23798:1024;;;;;;;:::o;24827:594::-;;25108:3;25097:9;25090:22;25135:47;25177:3;25166:9;25162:19;25154:6;25135:47;:::i;:::-;25232:6;25225:14;25218:22;25213:2;25202:9;25198:18;25191:50;25277:6;25272:2;25261:9;25257:18;25250:34;25332:9;25324:6;25320:22;25315:2;25304:9;25300:18;25293:50;25360:55;25408:6;25400;25360:55;:::i;25882:515::-;-1:-1:-1;;;;;26228:15:44;;;26210:34;;26275:2;26260:18;;26253:34;;;;26323:15;;;26318:2;26303:18;;26296:43;26375:15;;;26370:2;26355:18;;26348:43;26159:3;26144:19;;26126:271::o;26402:336::-;;26577:53;26620:9;26612:6;26577:53;:::i;:::-;26666:2;26661;26650:9;26646:18;26639:30;26686:46;26728:2;26717:9;26713:18;26705:6;26686:46;:::i;26933:221::-;;27082:2;27071:9;27064:21;27102:46;27144:2;27133:9;27129:18;27121:6;27102:46;:::i;27159:344::-;27361:2;27343:21;;;27400:2;27380:18;;;27373:30;-1:-1:-1;;;27434:2:44;27419:18;;27412:50;27494:2;27479:18;;27333:170::o;27508:338::-;27710:2;27692:21;;;27749:2;27729:18;;;27722:30;-1:-1:-1;;;27783:2:44;27768:18;;27761:44;27837:2;27822:18;;27682:164::o;27851:348::-;28053:2;28035:21;;;28092:2;28072:18;;;28065:30;28131:26;28126:2;28111:18;;28104:54;28190:2;28175:18;;28025:174::o;28204:342::-;28406:2;28388:21;;;28445:2;28425:18;;;28418:30;-1:-1:-1;;;28479:2:44;28464:18;;28457:48;28537:2;28522:18;;28378:168::o;28551:349::-;28753:2;28735:21;;;28792:2;28772:18;;;28765:30;28831:27;28826:2;28811:18;;28804:55;28891:2;28876:18;;28725:175::o;28905:349::-;29107:2;29089:21;;;29146:2;29126:18;;;29119:30;29185:27;29180:2;29165:18;;29158:55;29245:2;29230:18;;29079:175::o;29259:350::-;29461:2;29443:21;;;29500:2;29480:18;;;29473:30;29539:28;29534:2;29519:18;;29512:56;29600:2;29585:18;;29433:176::o;29614:341::-;29816:2;29798:21;;;29855:2;29835:18;;;29828:30;-1:-1:-1;;;29889:2:44;29874:18;;29867:47;29946:2;29931:18;;29788:167::o;29960:339::-;30162:2;30144:21;;;30201:2;30181:18;;;30174:30;-1:-1:-1;;;30235:2:44;30220:18;;30213:45;30290:2;30275:18;;30134:165::o;30304:348::-;30506:2;30488:21;;;30545:2;30525:18;;;30518:30;30584:26;30579:2;30564:18;;30557:54;30643:2;30628:18;;30478:174::o;30657:348::-;30859:2;30841:21;;;30898:2;30878:18;;;30871:30;30937:26;30932:2;30917:18;;30910:54;30996:2;30981:18;;30831:174::o;31010:351::-;31212:2;31194:21;;;31251:2;31231:18;;;31224:30;31290:29;31285:2;31270:18;;31263:57;31352:2;31337:18;;31184:177::o;31366:340::-;31568:2;31550:21;;;31607:2;31587:18;;;31580:30;-1:-1:-1;;;31641:2:44;31626:18;;31619:46;31697:2;31682:18;;31540:166::o;31711:347::-;31913:2;31895:21;;;31952:2;31932:18;;;31925:30;31991:25;31986:2;31971:18;;31964:53;32049:2;32034:18;;31885:173::o;32063:337::-;32265:2;32247:21;;;32304:2;32284:18;;;32277:30;-1:-1:-1;;;32338:2:44;32323:18;;32316:43;32391:2;32376:18;;32237:163::o;32405:349::-;32607:2;32589:21;;;32646:2;32626:18;;;32619:30;32685:27;32680:2;32665:18;;32658:55;32745:2;32730:18;;32579:175::o;32759:356::-;32961:2;32943:21;;;32980:18;;;32973:30;33039:34;33034:2;33019:18;;33012:62;33106:2;33091:18;;32933:182::o;33120:340::-;33322:2;33304:21;;;33361:2;33341:18;;;33334:30;-1:-1:-1;;;33395:2:44;33380:18;;33373:46;33451:2;33436:18;;33294:166::o;33465:350::-;33667:2;33649:21;;;33706:2;33686:18;;;33679:30;33745:28;33740:2;33725:18;;33718:56;33806:2;33791:18;;33639:176::o;33820:342::-;34022:2;34004:21;;;34061:2;34041:18;;;34034:30;-1:-1:-1;;;34095:2:44;34080:18;;34073:48;34153:2;34138:18;;33994:168::o;34167:344::-;34369:2;34351:21;;;34408:2;34388:18;;;34381:30;-1:-1:-1;;;34442:2:44;34427:18;;34420:50;34502:2;34487:18;;34341:170::o;34516:342::-;34718:2;34700:21;;;34757:2;34737:18;;;34730:30;-1:-1:-1;;;34791:2:44;34776:18;;34769:48;34849:2;34834:18;;34690:168::o;34863:349::-;35065:2;35047:21;;;35104:2;35084:18;;;35077:30;35143:27;35138:2;35123:18;;35116:55;35203:2;35188:18;;35037:175::o;35217:348::-;35419:2;35401:21;;;35458:2;35438:18;;;35431:30;35497:26;35492:2;35477:18;;35470:54;35556:2;35541:18;;35391:174::o;35570:344::-;35772:2;35754:21;;;35811:2;35791:18;;;35784:30;-1:-1:-1;;;35845:2:44;35830:18;;35823:50;35905:2;35890:18;;35744:170::o;35919:789::-;;36272:3;36261:9;36254:22;36299:73;36367:3;36356:9;36352:19;36344:6;36299:73;:::i;:::-;36408:6;36403:2;36392:9;36388:18;36381:34;36451:6;36446:2;36435:9;36431:18;36424:34;36506:9;36498:6;36494:22;36489:2;36478:9;36474:18;36467:50;36540:34;36567:6;36559;36540:34;:::i;:::-;36526:48;;36623:9;36615:6;36611:22;36605:3;36594:9;36590:19;36583:51;36651;36695:6;36687;36679;36651:51;:::i;:::-;36643:59;36244:464;-1:-1:-1;;;;;;;;;36244:464:44:o;36713:774::-;;36911:3;36900:9;36896:19;36888:27;;36948:6;36942:13;36931:9;36924:32;37012:4;37004:6;37000:17;36994:24;36987:4;36976:9;36972:20;36965:54;37075:4;37067:6;37063:17;37057:24;37050:4;37039:9;37035:20;37028:54;37138:4;37130:6;37126:17;37120:24;37113:4;37102:9;37098:20;37091:54;37201:4;37193:6;37189:17;37183:24;37176:4;37165:9;37161:20;37154:54;37264:4;37256:6;37252:17;37246:24;37239:4;37228:9;37224:20;37217:54;37327:4;37319:6;37315:17;37309:24;37302:4;37291:9;37287:20;37280:54;37390:4;37382:6;37378:17;37372:24;37365:4;37354:9;37350:20;37343:54;37416:6;37476:2;37468:6;37464:15;37458:22;37453:2;37442:9;37438:18;37431:50;;36878:609;;;;:::o;37492:752::-;37718:13;;37700:32;;37788:4;37776:17;;37770:24;37763:4;37748:20;;37741:54;37851:4;37839:17;;37833:24;37826:4;37811:20;;37804:54;37914:4;37902:17;;37896:24;37889:4;37874:20;;37867:54;37977:4;37965:17;;37959:24;37952:4;37937:20;;37930:54;38040:4;38028:17;;38022:24;38015:4;38000:20;;37993:54;38103:4;38091:17;;38085:24;38078:4;38063:20;;38056:54;38166:4;38154:17;;38148:24;38141:4;38126:20;;38119:54;38231:4;38219:17;;;38213:24;38204:6;38189:22;;38182:56;37687:3;37672:19;;37654:590::o;38249:1157::-;;38696:3;38726:2;38715:9;38708:21;38752:70;38818:2;38807:9;38803:18;38795:6;38752:70;:::i;:::-;38738:84;;38870:9;38862:6;38858:22;38853:2;38842:9;38838:18;38831:50;38904:51;38948:6;38940;38932;38904:51;:::i;:::-;38890:65;;39003:9;38995:6;38991:22;38986:2;38975:9;38971:18;38964:50;39031:51;39075:6;39067;39059;39031:51;:::i;:::-;39023:59;;;39124:6;39118:13;39113:2;39102:9;39098:18;39091:41;39187:2;39179:6;39175:15;39169:22;39163:3;39152:9;39148:19;39141:51;39247:2;39239:6;39235:15;39229:22;39223:3;39212:9;39208:19;39201:51;39307:2;39299:6;39295:15;39289:22;39283:3;39272:9;39268:19;39261:51;39349:6;39343:3;39332:9;39328:19;39321:35;39393:6;39387:3;39376:9;39372:19;39365:35;38676:730;;;;;;;;;;;:::o;39411:738::-;;39742:3;39731:9;39724:22;39769:71;39835:3;39824:9;39820:19;39812:6;39769:71;:::i;:::-;39888:9;39880:6;39876:22;39871:2;39860:9;39856:18;39849:50;39922:51;39966:6;39958;39950;39922:51;:::i;:::-;39908:65;;40021:9;40013:6;40009:22;40004:2;39993:9;39989:18;39982:50;40049:51;40093:6;40085;40077;40049:51;:::i;:::-;40041:59;;;40136:6;40131:2;40120:9;40116:18;40109:34;39714:435;;;;;;;;;:::o;40336:390::-;;40551:6;40540:9;40533:25;40594:6;40589:2;40578:9;40574:18;40567:34;40637:2;40632;40621:9;40617:18;40610:30;40657:63;40716:2;40705:9;40701:18;40693:6;40685;40657:63;:::i;40731:533::-;;;40874:11;40861:25;40968:2;40964:7;40953:8;40937:14;40933:29;40929:43;40909:18;40905:68;40895:2;;40990:4;40984;40977:18;40895:2;41020:33;;41072:20;;;-1:-1:-1;;;;;;41104:30:44;;41101:2;;;41150:4;41144;41137:18;41101:2;41186:4;41174:17;;-1:-1:-1;41217:14:44;41213:27;;;41203:38;;41200:2;;;41254:1;41251;41244:12;41269:338;;41427:11;41414:25;41521:3;41517:8;41506;41490:14;41486:29;41482:44;41462:18;41458:69;41448:2;;41544:4;41538;41531:18;41612:333;;41765:11;41752:25;41859:3;41855:8;41844;41828:14;41824:29;41820:44;41800:18;41796:69;41786:2;;41882:4;41876;41869:18;41950:242;42020:2;42014:9;42050:17;;;-1:-1:-1;;;;;42082:34:44;;42118:22;;;42079:62;42076:2;;;42144:9;42076:2;42171;42164:22;41994:198;;-1:-1:-1;41994:198:44:o;42197:513::-;;;42324:3;42311:17;42410:2;42406:7;42395:8;42379:14;42375:29;42371:43;42351:18;42347:68;42337:2;;42433:5;42426;42419:20;42337:2;42465:33;;42569:4;42556:18;;;-1:-1:-1;42517:21:44;;-1:-1:-1;;;;;;42586:30:44;;42583:2;;;42629:1;42626;42619:12;42583:2;42679:6;42663:14;42659:27;42649:8;42645:42;42642:2;;;42700:1;42697;42690:12;42715:258;42787:1;42797:113;42811:6;42808:1;42805:13;42797:113;;;42887:11;;;42881:18;42868:11;;;42861:39;42833:2;42826:10;42797:113;;;42928:6;42925:1;42922:13;42919:2;;;42963:1;42954:6;42949:3;42945:16;42938:27;42919:2;;42768:205;;;:::o;42978:133::-;-1:-1:-1;;;;;43055:31:44;;43045:42;;43035:2;;43101:1;43098;43091:12",
  "source": "// SPDX-License-Identifier:MIT\npragma solidity ^0.7.6;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"@opengsn/contracts/src/RelayHub.sol\";\n\nimport \"../TokenPaymaster.sol\";\n\n\n/**\n * Calculate the postRelayedCall gas usage for a TokenPaymaster.\n *\n */\ncontract TokenGasCalculator is RelayHub {\n\n    //(The Paymaster calls back calculateCharge, depositFor in the relayHub,\n    //so the calculator has to implement them just like a real RelayHub\n    // solhint-disable-next-line no-empty-blocks\n    constructor(\n        IStakeManager _stakeManager,\n        address _penalizer,\n        uint256 _maxWorkerCount,\n        uint256 _gasReserve,\n        uint256 _postOverhead,\n        uint256 _gasOverhead,\n        uint256 _maximumRecipientDeposit,\n        uint256 _minimumUnstakeDelay,\n        uint256 _minimumStake,\n        uint256 _dataGasCostPerByte,\n        uint256 _externalCallDataCostOverhead) public RelayHub(_stakeManager,\n        _penalizer,\n        _maxWorkerCount,\n        _gasReserve,\n        _postOverhead,\n        _gasOverhead,\n        _maximumRecipientDeposit,\n        _minimumUnstakeDelay,\n        _minimumStake,\n        _dataGasCostPerByte,\n        _externalCallDataCostOverhead)\n        // solhint-disable-next-line no-empty-blocks\n    {}\n\n    /**\n     * calculate actual cost of postRelayedCall.\n     * usage:\n     * - create this calculator.\n     * - create an instance of your TokenPaymaster, with your token's Uniswap instance.\n     * - move some tokens (1000 \"wei\") to the calculator (msg.sender is given approval to pull them back at the end)\n     * - set the calculator as owner of this calculator.\n     * - call this method.\n     * - use the returned values to set your real TokenPaymaster.setPostGasUsage()\n     * the above can be ran on a \"forked\" network, so that it will have the real token, uniswap instances,\n     * but still leave no side-effect on the network.\n     */\n    function calculatePostGas(TokenPaymaster paymaster) public returns (uint gasUsedByPost) {\n        address paymasterAddress = address(paymaster);\n        IERC20 token = paymaster.tokens(0);\n        IUniswap uniswap = paymaster.uniswaps(0);\n        require(token.balanceOf(address(this)) >= 1000, \"calc: must have some tokens\");\n        require(paymaster.owner() == address(this), \"calc: must be owner of paymaster\");\n        token.approve(paymasterAddress, uint(-1));\n        token.approve(msg.sender, uint(-1));\n        // emulate a \"precharge\"\n        token.transfer(paymasterAddress, 500);\n\n        paymaster.setRelayHub(IRelayHub(address(this)));\n\n        GsnTypes.RelayData memory relayData = GsnTypes.RelayData(1, 0, 0, address(0), address(0), address(0), \"\", 0);\n\n        bytes memory ctx1 = abi.encode(this, uint(500),token,uniswap);\n        //with precharge\n        uint gas0 = gasleft();\n        paymaster.postRelayedCall(ctx1, true, 100, relayData);\n        uint gas1 = gasleft();\n\n        token.transferFrom(paymasterAddress, address(this), token.balanceOf(paymasterAddress));\n        gasUsedByPost = gas0 - gas1;\n        emit GasUsed(gasUsedByPost);\n    }\n\n    event GasUsed(uint gasUsedByPost);\n}\n\n",
  "sourcePath": "/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/helpers/TokenGasCalculator.sol",
  "ast": {
    "absolutePath": "/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/helpers/TokenGasCalculator.sol",
    "exportedSymbols": {
      "BasePaymaster": [
        2575
      ],
      "Context": [
        9170
      ],
      "GsnEip712Library": [
        6706
      ],
      "GsnTypes": [
        6732
      ],
      "GsnUtils": [
        6779
      ],
      "IERC20": [
        8851
      ],
      "IForwarder": [
        5737
      ],
      "IPaymaster": [
        5807
      ],
      "IRelayHub": [
        6146
      ],
      "IRelayRecipient": [
        6175
      ],
      "IStakeManager": [
        6338
      ],
      "IUniswap": [
        2387
      ],
      "MinLibBytes": [
        6894
      ],
      "Ownable": [
        7733
      ],
      "RelayHub": [
        4527
      ],
      "RelayHubValidator": [
        7623
      ],
      "SafeMath": [
        8204
      ],
      "TokenGasCalculator": [
        2289
      ],
      "TokenPaymaster": [
        705
      ]
    },
    "id": 2290,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2061,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:15"
      },
      {
        "id": 2062,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:33:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2063,
        "nodeType": "ImportDirective",
        "scope": 2290,
        "sourceUnit": 8852,
        "src": "90:56:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@opengsn/contracts/src/RelayHub.sol",
        "file": "@opengsn/contracts/src/RelayHub.sol",
        "id": 2064,
        "nodeType": "ImportDirective",
        "scope": 2290,
        "sourceUnit": 4528,
        "src": "148:45:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/TokenPaymaster.sol",
        "file": "../TokenPaymaster.sol",
        "id": 2065,
        "nodeType": "ImportDirective",
        "scope": 2290,
        "sourceUnit": 706,
        "src": "195:31:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2067,
              "name": "RelayHub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4527,
              "src": "336:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RelayHub_$4527",
                "typeString": "contract RelayHub"
              }
            },
            "id": 2068,
            "nodeType": "InheritanceSpecifier",
            "src": "336:8:15"
          }
        ],
        "contractDependencies": [
          4527,
          6146,
          7733,
          9170
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2066,
          "nodeType": "StructuredDocumentation",
          "src": "229:75:15",
          "text": " Calculate the postRelayedCall gas usage for a TokenPaymaster."
        },
        "fullyImplemented": true,
        "id": 2289,
        "linearizedBaseContracts": [
          2289,
          4527,
          7733,
          9170,
          6146
        ],
        "name": "TokenGasCalculator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2106,
              "nodeType": "Block",
              "src": "1300:2:15",
              "statements": []
            },
            "id": 2107,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2093,
                    "name": "_stakeManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2070,
                    "src": "962:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakeManager_$6338",
                      "typeString": "contract IStakeManager"
                    }
                  },
                  {
                    "id": 2094,
                    "name": "_penalizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2072,
                    "src": "985:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2095,
                    "name": "_maxWorkerCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2074,
                    "src": "1005:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2096,
                    "name": "_gasReserve",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2076,
                    "src": "1030:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2097,
                    "name": "_postOverhead",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2078,
                    "src": "1051:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2098,
                    "name": "_gasOverhead",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2080,
                    "src": "1074:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2099,
                    "name": "_maximumRecipientDeposit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2082,
                    "src": "1096:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2100,
                    "name": "_minimumUnstakeDelay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2084,
                    "src": "1130:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2101,
                    "name": "_minimumStake",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2086,
                    "src": "1160:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2102,
                    "name": "_dataGasCostPerByte",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2088,
                    "src": "1183:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2103,
                    "name": "_externalCallDataCostOverhead",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2090,
                    "src": "1212:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2104,
                "modifierName": {
                  "id": 2092,
                  "name": "RelayHub",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4527,
                  "src": "953:8:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RelayHub_$4527_$",
                    "typeString": "type(contract RelayHub)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "953:289:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2070,
                  "mutability": "mutable",
                  "name": "_stakeManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "571:27:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStakeManager_$6338",
                    "typeString": "contract IStakeManager"
                  },
                  "typeName": {
                    "id": 2069,
                    "name": "IStakeManager",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6338,
                    "src": "571:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakeManager_$6338",
                      "typeString": "contract IStakeManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2072,
                  "mutability": "mutable",
                  "name": "_penalizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "608:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2074,
                  "mutability": "mutable",
                  "name": "_maxWorkerCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "636:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2076,
                  "mutability": "mutable",
                  "name": "_gasReserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "669:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "_postOverhead",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "698:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2080,
                  "mutability": "mutable",
                  "name": "_gasOverhead",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "729:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2082,
                  "mutability": "mutable",
                  "name": "_maximumRecipientDeposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "759:32:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "mutability": "mutable",
                  "name": "_minimumUnstakeDelay",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "801:28:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "_minimumStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "839:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "_dataGasCostPerByte",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "870:27:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2090,
                  "mutability": "mutable",
                  "name": "_externalCallDataCostOverhead",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "907:37:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:384:15"
            },
            "returnParameters": {
              "id": 2105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1300:0:15"
            },
            "scope": 2289,
            "src": "550:752:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2283,
              "nodeType": "Block",
              "src": "2041:1079:15",
              "statements": [
                {
                  "assignments": [
                    2116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2116,
                      "mutability": "mutable",
                      "name": "paymasterAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2051:24:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2115,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2051:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2121,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2119,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "2086:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      ],
                      "id": 2118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2078:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 2117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2078:7:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:18:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2051:45:15"
                },
                {
                  "assignments": [
                    2123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2123,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2106:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8851",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2122,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8851,
                        "src": "2106:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2128,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2138:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 2124,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "2121:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      },
                      "id": 2125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 250,
                      "src": "2121:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_IERC20_$8851_$",
                        "typeString": "function (uint256) view external returns (contract IERC20)"
                      }
                    },
                    "id": 2127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:19:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8851",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2106:34:15"
                },
                {
                  "assignments": [
                    2130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2130,
                      "mutability": "mutable",
                      "name": "uniswap",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2150:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswap_$2387",
                        "typeString": "contract IUniswap"
                      },
                      "typeName": {
                        "id": 2129,
                        "name": "IUniswap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2387,
                        "src": "2150:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswap_$2387",
                          "typeString": "contract IUniswap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2135,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2188:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 2131,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "2169:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      },
                      "id": 2132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "uniswaps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 247,
                      "src": "2169:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_IUniswap_$2387_$",
                        "typeString": "function (uint256) view external returns (contract IUniswap)"
                      }
                    },
                    "id": 2134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2169:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswap_$2387",
                      "typeString": "contract IUniswap"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2150:40:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2141,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2232:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                    "typeString": "contract TokenGasCalculator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                    "typeString": "contract TokenGasCalculator"
                                  }
                                ],
                                "id": 2140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2224:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2139,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2224:7:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2224:13:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2137,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2123,
                              "src": "2208:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8851",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8790,
                            "src": "2208:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2208:30:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 2144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2242:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "2208:38:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c633a206d757374206861766520736f6d6520746f6b656e73",
                        "id": 2146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2248:29:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76fe2a97e8b256eb4a9fac1f44f579dfa54fce6d8123cc8666a1419e5d4adecd",
                          "typeString": "literal_string \"calc: must have some tokens\""
                        },
                        "value": "calc: must have some tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76fe2a97e8b256eb4a9fac1f44f579dfa54fce6d8123cc8666a1419e5d4adecd",
                          "typeString": "literal_string \"calc: must have some tokens\""
                        }
                      ],
                      "id": 2136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2200:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2200:78:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2148,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:78:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2150,
                              "name": "paymaster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2110,
                              "src": "2296:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                                "typeString": "contract TokenPaymaster"
                              }
                            },
                            "id": 2151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7668,
                            "src": "2296:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2296:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2155,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2325:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                "typeString": "contract TokenGasCalculator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                "typeString": "contract TokenGasCalculator"
                              }
                            ],
                            "id": 2154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2317:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2153,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2317:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2317:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2296:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c633a206d757374206265206f776e6572206f66207061796d6173746572",
                        "id": 2158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2332:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2f08e54d224f7564a3fefd4b14475f1dca651991b1ce8682544213a5fd08d5f",
                          "typeString": "literal_string \"calc: must be owner of paymaster\""
                        },
                        "value": "calc: must be owner of paymaster"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b2f08e54d224f7564a3fefd4b14475f1dca651991b1ce8682544213a5fd08d5f",
                          "typeString": "literal_string \"calc: must be owner of paymaster\""
                        }
                      ],
                      "id": 2149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2288:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2288:79:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2160,
                  "nodeType": "ExpressionStatement",
                  "src": "2288:79:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2164,
                        "name": "paymasterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "2391:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "2414:2:15",
                            "subExpression": {
                              "hexValue": "31",
                              "id": 2167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2415:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2409:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 2165,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2409:4:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2409:8:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2161,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "2377:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8820,
                      "src": "2377:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:41:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2171,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:41:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2442:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2442:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "2459:2:15",
                            "subExpression": {
                              "hexValue": "31",
                              "id": 2179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2460:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 2178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2454:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 2177,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2454:4:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2454:8:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2172,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "2428:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8820,
                      "src": "2428:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2183,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2187,
                        "name": "paymasterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "2521:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "353030",
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2539:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        },
                        "value": "500"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        }
                      ],
                      "expression": {
                        "id": 2184,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "2506:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8800,
                      "src": "2506:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2506:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2190,
                  "nodeType": "ExpressionStatement",
                  "src": "2506:37:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2197,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2594:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                  "typeString": "contract TokenGasCalculator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                  "typeString": "contract TokenGasCalculator"
                                }
                              ],
                              "id": 2196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2586:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2195,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2586:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2586:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2194,
                          "name": "IRelayHub",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6146,
                          "src": "2576:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRelayHub_$6146_$",
                            "typeString": "type(contract IRelayHub)"
                          }
                        },
                        "id": 2199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2576:24:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRelayHub_$6146",
                          "typeString": "contract IRelayHub"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IRelayHub_$6146",
                          "typeString": "contract IRelayHub"
                        }
                      ],
                      "expression": {
                        "id": 2191,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "2554:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      },
                      "id": 2193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRelayHub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2499,
                      "src": "2554:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IRelayHub_$6146_$returns$__$",
                        "typeString": "function (contract IRelayHub) external"
                      }
                    },
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2554:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2201,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:47:15"
                },
                {
                  "assignments": [
                    2205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2205,
                      "mutability": "mutable",
                      "name": "relayData",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2612:35:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RelayData_$6726_memory_ptr",
                        "typeString": "struct GsnTypes.RelayData"
                      },
                      "typeName": {
                        "id": 2204,
                        "name": "GsnTypes.RelayData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6726,
                        "src": "2612:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayData_$6726_storage_ptr",
                          "typeString": "struct GsnTypes.RelayData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2226,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 2208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2669:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2672:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2675:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2686:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2678:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2211,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2678:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2678:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2698:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2690:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2215,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2690:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2690:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2710:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2702:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2702:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2702:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2714:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "30",
                        "id": 2224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2718:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 2206,
                        "name": "GsnTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6732,
                        "src": "2650:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GsnTypes_$6732_$",
                          "typeString": "type(contract GsnTypes)"
                        }
                      },
                      "id": 2207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "RelayData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6726,
                      "src": "2650:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_RelayData_$6726_storage_ptr_$",
                        "typeString": "type(struct GsnTypes.RelayData storage pointer)"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2650:70:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RelayData_$6726_memory_ptr",
                      "typeString": "struct GsnTypes.RelayData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2612:108:15"
                },
                {
                  "assignments": [
                    2228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2228,
                      "mutability": "mutable",
                      "name": "ctx1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2731:17:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2227,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2731:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2239,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2231,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "2762:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                          "typeString": "contract TokenGasCalculator"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "353030",
                            "id": 2234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2773:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            },
                            "value": "500"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            }
                          ],
                          "id": 2233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2768:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 2232,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2768:4:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2768:9:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2236,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "2778:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2237,
                        "name": "uniswap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2130,
                        "src": "2784:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswap_$2387",
                          "typeString": "contract IUniswap"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                          "typeString": "contract TokenGasCalculator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IUniswap_$2387",
                          "typeString": "contract IUniswap"
                        }
                      ],
                      "expression": {
                        "id": 2229,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2751:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2751:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2751:41:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2731:61:15"
                },
                {
                  "assignments": [
                    2241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2241,
                      "mutability": "mutable",
                      "name": "gas0",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2827:9:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2240,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2827:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2244,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2242,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967289,
                      "src": "2839:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2839:9:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2827:21:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2248,
                        "name": "ctx1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2228,
                        "src": "2884:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2890:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "313030",
                        "id": 2250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2896:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 2251,
                        "name": "relayData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2205,
                        "src": "2901:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayData_$6726_memory_ptr",
                          "typeString": "struct GsnTypes.RelayData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_struct$_RelayData_$6726_memory_ptr",
                          "typeString": "struct GsnTypes.RelayData memory"
                        }
                      ],
                      "expression": {
                        "id": 2245,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "2858:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      },
                      "id": 2247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "postRelayedCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 575,
                      "src": "2858:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bool_$_t_uint256_$_t_struct$_RelayData_$6726_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bool,uint256,struct GsnTypes.RelayData memory) external"
                      }
                    },
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2858:53:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2253,
                  "nodeType": "ExpressionStatement",
                  "src": "2858:53:15"
                },
                {
                  "assignments": [
                    2255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2255,
                      "mutability": "mutable",
                      "name": "gas1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2921:9:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2254,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2921:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2258,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2256,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967289,
                      "src": "2933:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2933:9:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2921:21:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2262,
                        "name": "paymasterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "2972:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2265,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2998:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                              "typeString": "contract TokenGasCalculator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                              "typeString": "contract TokenGasCalculator"
                            }
                          ],
                          "id": 2264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2990:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2990:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2990:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2269,
                            "name": "paymasterAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2116,
                            "src": "3021:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2267,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2123,
                            "src": "3005:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8851",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8790,
                          "src": "3005:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3005:33:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2259,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "2953:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8832,
                      "src": "2953:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2953:86:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2272,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:86:15"
                },
                {
                  "expression": {
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2273,
                      "name": "gasUsedByPost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2113,
                      "src": "3049:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2274,
                        "name": "gas0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "3065:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2275,
                        "name": "gas1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2255,
                        "src": "3072:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3065:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3049:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2278,
                  "nodeType": "ExpressionStatement",
                  "src": "3049:27:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2280,
                        "name": "gasUsedByPost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2113,
                        "src": "3099:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2279,
                      "name": "GasUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2288,
                      "src": "3091:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3091:22:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2282,
                  "nodeType": "EmitStatement",
                  "src": "3086:27:15"
                }
              ]
            },
            "documentation": {
              "id": 2108,
              "nodeType": "StructuredDocumentation",
              "src": "1308:640:15",
              "text": " calculate actual cost of postRelayedCall.\n usage:\n - create this calculator.\n - create an instance of your TokenPaymaster, with your token's Uniswap instance.\n - move some tokens (1000 \"wei\") to the calculator (msg.sender is given approval to pull them back at the end)\n - set the calculator as owner of this calculator.\n - call this method.\n - use the returned values to set your real TokenPaymaster.setPostGasUsage()\n the above can be ran on a \"forked\" network, so that it will have the real token, uniswap instances,\n but still leave no side-effect on the network."
            },
            "functionSelector": "796a5471",
            "id": 2284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePostGas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "paymaster",
                  "nodeType": "VariableDeclaration",
                  "scope": 2284,
                  "src": "1979:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                    "typeString": "contract TokenPaymaster"
                  },
                  "typeName": {
                    "id": 2109,
                    "name": "TokenPaymaster",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 705,
                    "src": "1979:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                      "typeString": "contract TokenPaymaster"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1978:26:15"
            },
            "returnParameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2113,
                  "mutability": "mutable",
                  "name": "gasUsedByPost",
                  "nodeType": "VariableDeclaration",
                  "scope": 2284,
                  "src": "2021:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2020:20:15"
            },
            "scope": 2289,
            "src": "1953:1167:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2288,
            "name": "GasUsed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2286,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasUsedByPost",
                  "nodeType": "VariableDeclaration",
                  "scope": 2288,
                  "src": "3140:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2285,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3140:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3139:20:15"
            },
            "src": "3126:34:15"
          }
        ],
        "scope": 2290,
        "src": "305:2857:15"
      }
    ],
    "src": "31:3133:15"
  },
  "legacyAST": {
    "absolutePath": "/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/helpers/TokenGasCalculator.sol",
    "exportedSymbols": {
      "BasePaymaster": [
        2575
      ],
      "Context": [
        9170
      ],
      "GsnEip712Library": [
        6706
      ],
      "GsnTypes": [
        6732
      ],
      "GsnUtils": [
        6779
      ],
      "IERC20": [
        8851
      ],
      "IForwarder": [
        5737
      ],
      "IPaymaster": [
        5807
      ],
      "IRelayHub": [
        6146
      ],
      "IRelayRecipient": [
        6175
      ],
      "IStakeManager": [
        6338
      ],
      "IUniswap": [
        2387
      ],
      "MinLibBytes": [
        6894
      ],
      "Ownable": [
        7733
      ],
      "RelayHub": [
        4527
      ],
      "RelayHubValidator": [
        7623
      ],
      "SafeMath": [
        8204
      ],
      "TokenGasCalculator": [
        2289
      ],
      "TokenPaymaster": [
        705
      ]
    },
    "id": 2290,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2061,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:15"
      },
      {
        "id": 2062,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:33:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2063,
        "nodeType": "ImportDirective",
        "scope": 2290,
        "sourceUnit": 8852,
        "src": "90:56:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@opengsn/contracts/src/RelayHub.sol",
        "file": "@opengsn/contracts/src/RelayHub.sol",
        "id": 2064,
        "nodeType": "ImportDirective",
        "scope": 2290,
        "sourceUnit": 4528,
        "src": "148:45:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/TokenPaymaster.sol",
        "file": "../TokenPaymaster.sol",
        "id": 2065,
        "nodeType": "ImportDirective",
        "scope": 2290,
        "sourceUnit": 706,
        "src": "195:31:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2067,
              "name": "RelayHub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4527,
              "src": "336:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RelayHub_$4527",
                "typeString": "contract RelayHub"
              }
            },
            "id": 2068,
            "nodeType": "InheritanceSpecifier",
            "src": "336:8:15"
          }
        ],
        "contractDependencies": [
          4527,
          6146,
          7733,
          9170
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2066,
          "nodeType": "StructuredDocumentation",
          "src": "229:75:15",
          "text": " Calculate the postRelayedCall gas usage for a TokenPaymaster."
        },
        "fullyImplemented": true,
        "id": 2289,
        "linearizedBaseContracts": [
          2289,
          4527,
          7733,
          9170,
          6146
        ],
        "name": "TokenGasCalculator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2106,
              "nodeType": "Block",
              "src": "1300:2:15",
              "statements": []
            },
            "id": 2107,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2093,
                    "name": "_stakeManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2070,
                    "src": "962:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakeManager_$6338",
                      "typeString": "contract IStakeManager"
                    }
                  },
                  {
                    "id": 2094,
                    "name": "_penalizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2072,
                    "src": "985:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2095,
                    "name": "_maxWorkerCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2074,
                    "src": "1005:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2096,
                    "name": "_gasReserve",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2076,
                    "src": "1030:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2097,
                    "name": "_postOverhead",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2078,
                    "src": "1051:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2098,
                    "name": "_gasOverhead",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2080,
                    "src": "1074:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2099,
                    "name": "_maximumRecipientDeposit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2082,
                    "src": "1096:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2100,
                    "name": "_minimumUnstakeDelay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2084,
                    "src": "1130:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2101,
                    "name": "_minimumStake",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2086,
                    "src": "1160:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2102,
                    "name": "_dataGasCostPerByte",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2088,
                    "src": "1183:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2103,
                    "name": "_externalCallDataCostOverhead",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2090,
                    "src": "1212:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2104,
                "modifierName": {
                  "id": 2092,
                  "name": "RelayHub",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4527,
                  "src": "953:8:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RelayHub_$4527_$",
                    "typeString": "type(contract RelayHub)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "953:289:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2070,
                  "mutability": "mutable",
                  "name": "_stakeManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "571:27:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStakeManager_$6338",
                    "typeString": "contract IStakeManager"
                  },
                  "typeName": {
                    "id": 2069,
                    "name": "IStakeManager",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6338,
                    "src": "571:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakeManager_$6338",
                      "typeString": "contract IStakeManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2072,
                  "mutability": "mutable",
                  "name": "_penalizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "608:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2074,
                  "mutability": "mutable",
                  "name": "_maxWorkerCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "636:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2076,
                  "mutability": "mutable",
                  "name": "_gasReserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "669:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "_postOverhead",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "698:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2080,
                  "mutability": "mutable",
                  "name": "_gasOverhead",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "729:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2082,
                  "mutability": "mutable",
                  "name": "_maximumRecipientDeposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "759:32:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "mutability": "mutable",
                  "name": "_minimumUnstakeDelay",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "801:28:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "_minimumStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "839:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "_dataGasCostPerByte",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "870:27:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2090,
                  "mutability": "mutable",
                  "name": "_externalCallDataCostOverhead",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "907:37:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:384:15"
            },
            "returnParameters": {
              "id": 2105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1300:0:15"
            },
            "scope": 2289,
            "src": "550:752:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2283,
              "nodeType": "Block",
              "src": "2041:1079:15",
              "statements": [
                {
                  "assignments": [
                    2116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2116,
                      "mutability": "mutable",
                      "name": "paymasterAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2051:24:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2115,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2051:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2121,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2119,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "2086:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      ],
                      "id": 2118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2078:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 2117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2078:7:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:18:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2051:45:15"
                },
                {
                  "assignments": [
                    2123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2123,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2106:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8851",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2122,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8851,
                        "src": "2106:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2128,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2138:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 2124,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "2121:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      },
                      "id": 2125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 250,
                      "src": "2121:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_IERC20_$8851_$",
                        "typeString": "function (uint256) view external returns (contract IERC20)"
                      }
                    },
                    "id": 2127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:19:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8851",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2106:34:15"
                },
                {
                  "assignments": [
                    2130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2130,
                      "mutability": "mutable",
                      "name": "uniswap",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2150:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswap_$2387",
                        "typeString": "contract IUniswap"
                      },
                      "typeName": {
                        "id": 2129,
                        "name": "IUniswap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2387,
                        "src": "2150:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswap_$2387",
                          "typeString": "contract IUniswap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2135,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2188:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 2131,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "2169:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      },
                      "id": 2132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "uniswaps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 247,
                      "src": "2169:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_IUniswap_$2387_$",
                        "typeString": "function (uint256) view external returns (contract IUniswap)"
                      }
                    },
                    "id": 2134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2169:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswap_$2387",
                      "typeString": "contract IUniswap"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2150:40:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2141,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2232:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                    "typeString": "contract TokenGasCalculator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                    "typeString": "contract TokenGasCalculator"
                                  }
                                ],
                                "id": 2140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2224:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2139,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2224:7:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2224:13:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2137,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2123,
                              "src": "2208:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8851",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8790,
                            "src": "2208:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2208:30:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 2144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2242:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "2208:38:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c633a206d757374206861766520736f6d6520746f6b656e73",
                        "id": 2146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2248:29:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76fe2a97e8b256eb4a9fac1f44f579dfa54fce6d8123cc8666a1419e5d4adecd",
                          "typeString": "literal_string \"calc: must have some tokens\""
                        },
                        "value": "calc: must have some tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76fe2a97e8b256eb4a9fac1f44f579dfa54fce6d8123cc8666a1419e5d4adecd",
                          "typeString": "literal_string \"calc: must have some tokens\""
                        }
                      ],
                      "id": 2136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2200:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2200:78:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2148,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:78:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2150,
                              "name": "paymaster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2110,
                              "src": "2296:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                                "typeString": "contract TokenPaymaster"
                              }
                            },
                            "id": 2151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7668,
                            "src": "2296:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2296:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2155,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2325:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                "typeString": "contract TokenGasCalculator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                "typeString": "contract TokenGasCalculator"
                              }
                            ],
                            "id": 2154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2317:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2153,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2317:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2317:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2296:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c633a206d757374206265206f776e6572206f66207061796d6173746572",
                        "id": 2158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2332:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2f08e54d224f7564a3fefd4b14475f1dca651991b1ce8682544213a5fd08d5f",
                          "typeString": "literal_string \"calc: must be owner of paymaster\""
                        },
                        "value": "calc: must be owner of paymaster"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b2f08e54d224f7564a3fefd4b14475f1dca651991b1ce8682544213a5fd08d5f",
                          "typeString": "literal_string \"calc: must be owner of paymaster\""
                        }
                      ],
                      "id": 2149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2288:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2288:79:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2160,
                  "nodeType": "ExpressionStatement",
                  "src": "2288:79:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2164,
                        "name": "paymasterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "2391:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "2414:2:15",
                            "subExpression": {
                              "hexValue": "31",
                              "id": 2167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2415:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2409:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 2165,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2409:4:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2409:8:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2161,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "2377:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8820,
                      "src": "2377:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:41:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2171,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:41:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2442:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2442:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "2459:2:15",
                            "subExpression": {
                              "hexValue": "31",
                              "id": 2179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2460:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 2178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2454:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 2177,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2454:4:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2454:8:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2172,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "2428:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8820,
                      "src": "2428:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2183,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2187,
                        "name": "paymasterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "2521:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "353030",
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2539:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        },
                        "value": "500"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        }
                      ],
                      "expression": {
                        "id": 2184,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "2506:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8800,
                      "src": "2506:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2506:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2190,
                  "nodeType": "ExpressionStatement",
                  "src": "2506:37:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2197,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2594:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                  "typeString": "contract TokenGasCalculator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                                  "typeString": "contract TokenGasCalculator"
                                }
                              ],
                              "id": 2196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2586:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2195,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2586:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2586:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2194,
                          "name": "IRelayHub",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6146,
                          "src": "2576:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRelayHub_$6146_$",
                            "typeString": "type(contract IRelayHub)"
                          }
                        },
                        "id": 2199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2576:24:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRelayHub_$6146",
                          "typeString": "contract IRelayHub"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IRelayHub_$6146",
                          "typeString": "contract IRelayHub"
                        }
                      ],
                      "expression": {
                        "id": 2191,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "2554:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      },
                      "id": 2193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRelayHub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2499,
                      "src": "2554:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IRelayHub_$6146_$returns$__$",
                        "typeString": "function (contract IRelayHub) external"
                      }
                    },
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2554:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2201,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:47:15"
                },
                {
                  "assignments": [
                    2205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2205,
                      "mutability": "mutable",
                      "name": "relayData",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2612:35:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RelayData_$6726_memory_ptr",
                        "typeString": "struct GsnTypes.RelayData"
                      },
                      "typeName": {
                        "id": 2204,
                        "name": "GsnTypes.RelayData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6726,
                        "src": "2612:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayData_$6726_storage_ptr",
                          "typeString": "struct GsnTypes.RelayData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2226,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 2208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2669:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2672:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2675:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2686:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2678:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2211,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2678:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2678:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2698:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2690:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2215,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2690:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2690:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2710:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2702:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2702:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2702:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2714:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "30",
                        "id": 2224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2718:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 2206,
                        "name": "GsnTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6732,
                        "src": "2650:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GsnTypes_$6732_$",
                          "typeString": "type(contract GsnTypes)"
                        }
                      },
                      "id": 2207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "RelayData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6726,
                      "src": "2650:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_RelayData_$6726_storage_ptr_$",
                        "typeString": "type(struct GsnTypes.RelayData storage pointer)"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2650:70:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RelayData_$6726_memory_ptr",
                      "typeString": "struct GsnTypes.RelayData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2612:108:15"
                },
                {
                  "assignments": [
                    2228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2228,
                      "mutability": "mutable",
                      "name": "ctx1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2731:17:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2227,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2731:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2239,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2231,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "2762:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                          "typeString": "contract TokenGasCalculator"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "353030",
                            "id": 2234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2773:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            },
                            "value": "500"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            }
                          ],
                          "id": 2233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2768:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 2232,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2768:4:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2768:9:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2236,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "2778:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2237,
                        "name": "uniswap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2130,
                        "src": "2784:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswap_$2387",
                          "typeString": "contract IUniswap"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                          "typeString": "contract TokenGasCalculator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IUniswap_$2387",
                          "typeString": "contract IUniswap"
                        }
                      ],
                      "expression": {
                        "id": 2229,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2751:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2751:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2751:41:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2731:61:15"
                },
                {
                  "assignments": [
                    2241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2241,
                      "mutability": "mutable",
                      "name": "gas0",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2827:9:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2240,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2827:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2244,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2242,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967289,
                      "src": "2839:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2839:9:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2827:21:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2248,
                        "name": "ctx1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2228,
                        "src": "2884:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2890:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "313030",
                        "id": 2250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2896:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 2251,
                        "name": "relayData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2205,
                        "src": "2901:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayData_$6726_memory_ptr",
                          "typeString": "struct GsnTypes.RelayData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_struct$_RelayData_$6726_memory_ptr",
                          "typeString": "struct GsnTypes.RelayData memory"
                        }
                      ],
                      "expression": {
                        "id": 2245,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "2858:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                          "typeString": "contract TokenPaymaster"
                        }
                      },
                      "id": 2247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "postRelayedCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 575,
                      "src": "2858:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bool_$_t_uint256_$_t_struct$_RelayData_$6726_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bool,uint256,struct GsnTypes.RelayData memory) external"
                      }
                    },
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2858:53:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2253,
                  "nodeType": "ExpressionStatement",
                  "src": "2858:53:15"
                },
                {
                  "assignments": [
                    2255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2255,
                      "mutability": "mutable",
                      "name": "gas1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "2921:9:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2254,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2921:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2258,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2256,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967289,
                      "src": "2933:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2933:9:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2921:21:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2262,
                        "name": "paymasterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "2972:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2265,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2998:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                              "typeString": "contract TokenGasCalculator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenGasCalculator_$2289",
                              "typeString": "contract TokenGasCalculator"
                            }
                          ],
                          "id": 2264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2990:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2990:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2990:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2269,
                            "name": "paymasterAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2116,
                            "src": "3021:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2267,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2123,
                            "src": "3005:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8851",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8790,
                          "src": "3005:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3005:33:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2259,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "2953:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8851",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8832,
                      "src": "2953:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2953:86:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2272,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:86:15"
                },
                {
                  "expression": {
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2273,
                      "name": "gasUsedByPost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2113,
                      "src": "3049:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2274,
                        "name": "gas0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "3065:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2275,
                        "name": "gas1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2255,
                        "src": "3072:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3065:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3049:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2278,
                  "nodeType": "ExpressionStatement",
                  "src": "3049:27:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2280,
                        "name": "gasUsedByPost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2113,
                        "src": "3099:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2279,
                      "name": "GasUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2288,
                      "src": "3091:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3091:22:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2282,
                  "nodeType": "EmitStatement",
                  "src": "3086:27:15"
                }
              ]
            },
            "documentation": {
              "id": 2108,
              "nodeType": "StructuredDocumentation",
              "src": "1308:640:15",
              "text": " calculate actual cost of postRelayedCall.\n usage:\n - create this calculator.\n - create an instance of your TokenPaymaster, with your token's Uniswap instance.\n - move some tokens (1000 \"wei\") to the calculator (msg.sender is given approval to pull them back at the end)\n - set the calculator as owner of this calculator.\n - call this method.\n - use the returned values to set your real TokenPaymaster.setPostGasUsage()\n the above can be ran on a \"forked\" network, so that it will have the real token, uniswap instances,\n but still leave no side-effect on the network."
            },
            "functionSelector": "796a5471",
            "id": 2284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePostGas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "paymaster",
                  "nodeType": "VariableDeclaration",
                  "scope": 2284,
                  "src": "1979:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                    "typeString": "contract TokenPaymaster"
                  },
                  "typeName": {
                    "id": 2109,
                    "name": "TokenPaymaster",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 705,
                    "src": "1979:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenPaymaster_$705",
                      "typeString": "contract TokenPaymaster"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1978:26:15"
            },
            "returnParameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2113,
                  "mutability": "mutable",
                  "name": "gasUsedByPost",
                  "nodeType": "VariableDeclaration",
                  "scope": 2284,
                  "src": "2021:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2020:20:15"
            },
            "scope": 2289,
            "src": "1953:1167:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2288,
            "name": "GasUsed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2286,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasUsedByPost",
                  "nodeType": "VariableDeclaration",
                  "scope": 2288,
                  "src": "3140:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2285,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3140:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3139:20:15"
            },
            "src": "3126:34:15"
          }
        ],
        "scope": 2290,
        "src": "305:2857:15"
      }
    ],
    "src": "31:3133:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-06-09T09:33:44.115Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "isRelayManagerStaked(address)": {
        "returns": {
          "_0": "true if stake size and delay satisfy all requirements"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "relayCall(uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
        "params": {
          "approvalData": ": dapp-specific data forwarded to preRelayedCall.        This value is *not* verified by the Hub. For example, it can be used to pass a signature to the Paymaster",
          "externalGasLimit": "- the value passed as gasLimit to the transaction. Emits a TransactionRelayed event.",
          "maxAcceptanceBudget": "- max valid value for paymaster.getGasLimits().acceptanceBudget",
          "relayRequest": "- all details of the requested relayed call",
          "signature": "- client's EIP-712 signature over the relayRequest struct"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Deposited(address,address,uint256)": {
        "notice": "Emitted when depositFor is called, including the amount and account that was funded."
      },
      "RelayServerRegistered(address,uint256,uint256,string)": {
        "notice": "Emitted when a relay server registers or updates its details Looking at these events lets a client discover relay servers"
      },
      "RelayWorkersAdded(address,address[],uint256)": {
        "notice": "Emitted when relays are added by a relayManager"
      },
      "TransactionRejectedByPaymaster(address,address,address,address,address,bytes4,uint256,bytes)": {
        "notice": "Emitted when an attempt to relay a call fails and Paymaster does not accept the transaction. The actual relayed call was not executed, and the recipient not charged."
      },
      "TransactionRelayed(address,address,address,address,address,bytes4,uint8,uint256)": {
        "notice": "Emitted when a transaction is relayed. Note that the actual encoded function might be reverted: this will be indicated in the status field. Useful when monitoring a relay's operation and relayed calls to a contract. Charge is the ether value deducted from the recipient's balance, paid to the relay's manager."
      },
      "Withdrawn(address,address,uint256)": {
        "notice": "Emitted when an account withdraws funds from RelayHub."
      }
    },
    "kind": "user",
    "methods": {
      "addRelayWorkers(address[])": {
        "notice": "Add new worker addresses controlled by sender who must be a staked Relay Manager address. Emits a RelayWorkersAdded event. This function can be called multiple times, emitting new events"
      },
      "balanceOf(address)": {
        "notice": "Returns an account's deposits. It can be either a deposit of a paymaster, or a revenue of a relay manager."
      },
      "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
        "notice": "The fee is expressed as a base fee in wei plus percentage on actual charge. E.g. a value of 40 stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount."
      },
      "calculatePostGas(address)": {
        "notice": "calculate actual cost of postRelayedCall. usage: - create this calculator. - create an instance of your TokenPaymaster, with your token's Uniswap instance. - move some tokens (1000 \"wei\") to the calculator (msg.sender is given approval to pull them back at the end) - set the calculator as owner of this calculator. - call this method. - use the returned values to set your real TokenPaymaster.setPostGasUsage() the above can be ran on a \"forked\" network, so that it will have the real token, uniswap instances, but still leave no side-effect on the network."
      },
      "depositFor(address)": {
        "notice": "Deposits ether for a contract, so that it can receive (and pay for) relayed transactions. Unused balance can only be withdrawn by the contract itself, by calling withdraw. Emits a Deposited event."
      },
      "getConfiguration()": {
        "notice": "Returns the whole hub configuration"
      },
      "isRelayManagerStaked(address)": {
        "notice": "Uses StakeManager info to decide if the Relay Manager can be considered staked"
      },
      "relayCall(uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
        "notice": "Relays a transaction. For this to succeed, multiple conditions must be met:  - Paymaster's \"preRelayCall\" method must succeed and not revert  - the sender must be a registered Relay Worker that the user signed  - the transaction's gas price must be equal or larger than the one that was signed by the sender  - the transaction must have enough gas to run all internal transactions if they use all gas available to them  - the Paymaster must have enough balance to pay the Relay Worker for the scenario when all gas is spent If all conditions are met, the call will be relayed and the recipient charged. Arguments:"
      },
      "withdraw(uint256,address)": {
        "notice": "Withdraws from an account's balance, sending it back to it. Relay managers call this to retrieve their revenue, and contracts can also use it to reduce their funding. Emits a Withdrawn event."
      }
    },
    "notice": "Calculate the postRelayedCall gas usage for a TokenPaymaster.",
    "version": 1
  }
}