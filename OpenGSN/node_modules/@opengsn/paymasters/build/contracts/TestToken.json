{
  "contractName": "TestToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/helpers/TestToken.sol\":\"TestToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/helpers/TestToken.sol\":{\"keccak256\":\"0xa7abcbb8499ecc21c7a11bc04d3f73977c2eb23db29e2f6f555d1e42bb06b92b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f0efd3f4fc9cd0912dbb746554444a400a8db9b7571448d22de889a2b9c86cf\",\"dweb:/ipfs/QmfWB1pQm4xCfLzhhPZJ2g4yD8Lewq8EHPAAFrPHcPDZfT\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040518060400160405280600a8152602001692a32b9ba102a37b5b2b760b11b81525060405180604001604052806003815260200162544f4b60e81b8152508160039080519060200190610066929190610082565b50805161007a906004906020840190610082565b505050610156565b82805461008e9061011b565b90600052602060002090601f0160209004810192826100b057600085556100f6565b82601f106100c957805160ff19168380011785556100f6565b828001600101855582156100f6579182015b828111156100f65782518255916020019190600101906100db565b50610102929150610106565b5090565b5b808211156101025760008155600101610107565b600181811c9082168061012f57607f821691505b6020821081141561015057634e487b7160e01b600052602260045260246000fd5b50919050565b6109e9806101656000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b411461016a578063a0712d6814610172578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e6565b6040516100ce91906108fd565b60405180910390f35b6100ea6100e53660046108ba565b610278565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a36600461087e565b61028e565b604051601281526020016100ce565b6100ea61013c3660046108ba565b61033d565b6100fe61014f366004610829565b6001600160a01b031660009081526020819052604090205490565b6100c1610379565b6101856101803660046108e4565b610388565b005b6100ea6101953660046108ba565b610395565b6100ea6101a83660046108ba565b61042e565b6100fe6101bb36600461084b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f590610978565b80601f016020809104026020016040519081016040528092919081815260200182805461022190610978565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b600061028533848461043b565b50600192915050565b600061029b84848461055f565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103255760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610332853385840361043b565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610285918590610374908690610952565b61043b565b6060600480546101f590610978565b610392338261072e565b50565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104175760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161031c565b610424338585840361043b565b5060019392505050565b600061028533848461055f565b6001600160a01b03831661049d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161031c565b6001600160a01b0382166104fe5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161031c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105c35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161031c565b6001600160a01b0382166106255760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161031c565b6001600160a01b0383166000908152602081905260409020548181101561069d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161031c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106d4908490610952565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072091815260200190565b60405180910390a350505050565b6001600160a01b0382166107845760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161031c565b80600260008282546107969190610952565b90915550506001600160a01b038216600090815260208190526040812080548392906107c3908490610952565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b038116811461082457600080fd5b919050565b60006020828403121561083b57600080fd5b6108448261080d565b9392505050565b6000806040838503121561085e57600080fd5b6108678361080d565b91506108756020840161080d565b90509250929050565b60008060006060848603121561089357600080fd5b61089c8461080d565b92506108aa6020850161080d565b9150604084013590509250925092565b600080604083850312156108cd57600080fd5b6108d68361080d565b946020939093013593505050565b6000602082840312156108f657600080fd5b5035919050565b600060208083528351808285015260005b8181101561092a5785810183015185820160400152820161090e565b8181111561093c576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561097357634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061098c57607f821691505b602082108114156109ad57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220e938ca24aea38df02924166a265279cc410ac264bc8958e21616f2d26d84775c64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b411461016a578063a0712d6814610172578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e6565b6040516100ce91906108fd565b60405180910390f35b6100ea6100e53660046108ba565b610278565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a36600461087e565b61028e565b604051601281526020016100ce565b6100ea61013c3660046108ba565b61033d565b6100fe61014f366004610829565b6001600160a01b031660009081526020819052604090205490565b6100c1610379565b6101856101803660046108e4565b610388565b005b6100ea6101953660046108ba565b610395565b6100ea6101a83660046108ba565b61042e565b6100fe6101bb36600461084b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f590610978565b80601f016020809104026020016040519081016040528092919081815260200182805461022190610978565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b600061028533848461043b565b50600192915050565b600061029b84848461055f565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103255760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610332853385840361043b565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610285918590610374908690610952565b61043b565b6060600480546101f590610978565b610392338261072e565b50565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104175760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161031c565b610424338585840361043b565b5060019392505050565b600061028533848461055f565b6001600160a01b03831661049d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161031c565b6001600160a01b0382166104fe5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161031c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105c35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161031c565b6001600160a01b0382166106255760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161031c565b6001600160a01b0383166000908152602081905260409020548181101561069d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161031c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106d4908490610952565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072091815260200190565b60405180910390a350505050565b6001600160a01b0382166107845760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161031c565b80600260008282546107969190610952565b90915550506001600160a01b038216600090815260208190526040812080548392906107c3908490610952565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b038116811461082457600080fd5b919050565b60006020828403121561083b57600080fd5b6108448261080d565b9392505050565b6000806040838503121561085e57600080fd5b6108678361080d565b91506108756020840161080d565b90509250929050565b60008060006060848603121561089357600080fd5b61089c8461080d565b92506108aa6020850161080d565b9150604084013590509250925092565b600080604083850312156108cd57600080fd5b6108d68361080d565b946020939093013593505050565b6000602082840312156108f657600080fd5b5035919050565b600060208083528351808285015260005b8181101561092a5785810183015185820160400152820161090e565b8181111561093c576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561097357634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061098c57607f821691505b602082108114156109ad57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220e938ca24aea38df02924166a265279cc410ac264bc8958e21616f2d26d84775c64736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "113:134:19:-:0;;;;;;;;;;;;-1:-1:-1;1896:113:47;;;;;;;;;;;-1:-1:-1;;;1896:113:47;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:47;;;;;;;1962:13;;1896:113;;;1962:13;;1896:113;1962:13;:::i;:::-;-1:-1:-1;1985:17:47;;;;:7;;:17;;;;;:::i;:::-;;1896:113;;113:134:19;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;113:134:19;;;-1:-1:-1;113:134:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:58;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;113:134:19;;;;;;",
  "deployedSourceMap": "113:134:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;1590:14:58;;1583:22;1565:41;;1553:2;1538:18;4171:166:47;1425:187:58;3162:106:47;3249:12;;3162:106;;;5565:25:58;;;5553:2;5538:18;3162:106:47;5419:177:58;4804:478:47;;;;;;:::i;:::-;;:::i;3011:91::-;;;3093:2;5743:36:58;;5731:2;5716:18;3011:91:47;5601:184:58;5677:212:47;;;;;;:::i;:::-;;:::i;3326:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3426:18:47;3400:7;3426:18;;;;;;;;;;;;3326:125;2285:102;;;:::i;169:76:19:-;;;;;;:::i;:::-;;:::i;:::-;;6376:405:47;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;3884:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:47;;;3973:7;3999:18;;;-1:-1:-1;3999:18:47;;;;;;;;:27;;;;;;;;;;;;;3884:149;2074:98;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;665:10:51;4293:7:47;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:47;4171:166;;;;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:47;;5003:24;5030:19;;;-1:-1:-1;5030:19:47;;;;;;;;665:10:51;5030:33:47;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:47;;3635:2:58;5073:79:47;;;3617:21:58;3674:2;3654:18;;;3647:30;3713:34;3693:18;;;3686:62;-1:-1:-1;;;3764:18:58;;;3757:38;3812:19;;5073:79:47;;;;;;;;;5186:57;5195:6;665:10:51;5236:6:47;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:47;;4804:478;-1:-1:-1;;;;4804:478:47:o;5677:212::-;665:10:51;5765:4:47;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:47;;;;;;;;;;5765:4;;5781:80;;5813:34;;:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;169:76:19:-;213:25;219:10;231:6;213:5;:25::i;:::-;169:76;:::o;6376:405:47:-;665:10:51;6469:4:47;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:47;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:47;;4855:2:58;6556:85:47;;;4837:21:58;4894:2;4874:18;;;4867:30;4933:34;4913:18;;;4906:62;-1:-1:-1;;;4984:18:58;;;4977:35;5029:19;;6556:85:47;4653:401:58;6556:85:47;6675:67;665:10:51;6698:7:47;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:47;;6376:405;-1:-1:-1;;;6376:405:47:o;3654:172::-;3740:4;3756:42;665:10:51;3780:9:47;3791:6;3756:9;:42::i;9952:370::-;-1:-1:-1;;;;;10083:19:47;;10075:68;;;;-1:-1:-1;;;10075:68:47;;4450:2:58;10075:68:47;;;4432:21:58;4489:2;4469:18;;;4462:30;4528:34;4508:18;;;4501:62;-1:-1:-1;;;4579:18:58;;;4572:34;4623:19;;10075:68:47;4248:400:58;10075:68:47;-1:-1:-1;;;;;10161:21:47;;10153:68;;;;-1:-1:-1;;;10153:68:47;;2825:2:58;10153:68:47;;;2807:21:58;2864:2;2844:18;;;2837:30;2903:34;2883:18;;;2876:62;-1:-1:-1;;;2954:18:58;;;2947:32;2996:19;;10153:68:47;2623:398:58;10153:68:47;-1:-1:-1;;;;;10232:18:47;;;;;;;-1:-1:-1;10232:18:47;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;5565:25:58;;;10283:32:47;;;;;;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:47;;7382:70;;;;-1:-1:-1;;;7382:70:47;;4044:2:58;7382:70:47;;;4026:21:58;4083:2;4063:18;;;4056:30;4122:34;4102:18;;;4095:62;-1:-1:-1;;;4173:18:58;;;4166:35;4218:19;;7382:70:47;3842:401:58;7382:70:47;-1:-1:-1;;;;;7470:23:47;;7462:71;;;;-1:-1:-1;;;7462:71:47;;2421:2:58;7462:71:47;;;2403:21:58;2460:2;2440:18;;;2433:30;2499:34;2479:18;;;2472:62;-1:-1:-1;;;2550:18:58;;;2543:33;2593:19;;7462:71:47;2219:399:58;7462:71:47;-1:-1:-1;;;;;7626:17:47;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:47;;3228:2:58;7653:74:47;;;3210:21:58;3267:2;3247:18;;;3240:30;3306:34;3286:18;;;3279:62;-1:-1:-1;;;3357:18:58;;;3350:36;3403:19;;7653:74:47;3026:402:58;7653:74:47;-1:-1:-1;;;;;7761:17:47;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7781:22;;7761:9;7823:30;;7781:22;;7823:30;:::i;:::-;;;;-1:-1:-1;;7869:35:47;;5565:25:58;;;-1:-1:-1;;;;;7869:35:47;;;;;;;;;;5553:2:58;5538:18;7869:35:47;;;;;;;7372:596;7255:713;;;:::o;8244:389::-;-1:-1:-1;;;;;8327:21:47;;8319:65;;;;-1:-1:-1;;;8319:65:47;;5261:2:58;8319:65:47;;;5243:21:58;5300:2;5280:18;;;5273:30;5339:33;5319:18;;;5312:61;5390:18;;8319:65:47;5059:355:58;8319:65:47;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:47;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:47;;;5565:25:58;;;8530:37:47;;-1:-1:-1;;;;;8530:37:47;;;8547:1;;8530:37;;;;;5553:2:58;8530:37:47;;;8244:389;;:::o;14:173:58:-;82:20;;-1:-1:-1;;;;;131:31:58;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:58:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:58:o;1240:180::-;1299:6;1352:2;1340:9;1331:7;1327:23;1323:32;1320:52;;;1368:1;1365;1358:12;1320:52;-1:-1:-1;1391:23:58;;1240:180;-1:-1:-1;1240:180:58:o;1617:597::-;1729:4;1758:2;1787;1776:9;1769:21;1819:6;1813:13;1862:6;1857:2;1846:9;1842:18;1835:34;1887:1;1897:140;1911:6;1908:1;1905:13;1897:140;;;2006:14;;;2002:23;;1996:30;1972:17;;;1991:2;1968:26;1961:66;1926:10;;1897:140;;;2055:6;2052:1;2049:13;2046:91;;;2125:1;2120:2;2111:6;2100:9;2096:22;2092:31;2085:42;2046:91;-1:-1:-1;2198:2:58;2177:15;-1:-1:-1;;2173:29:58;2158:45;;;;2205:2;2154:54;;1617:597;-1:-1:-1;;;1617:597:58:o;5790:225::-;5830:3;5861:1;5857:6;5854:1;5851:13;5848:136;;;5906:10;5901:3;5897:20;5894:1;5887:31;5941:4;5938:1;5931:15;5969:4;5966:1;5959:15;5848:136;-1:-1:-1;6000:9:58;;5790:225::o;6020:380::-;6099:1;6095:12;;;;6142;;;6163:61;;6217:4;6209:6;6205:17;6195:27;;6163:61;6270:2;6262:6;6259:14;6239:18;6236:38;6233:161;;;6316:10;6311:3;6307:20;6304:1;6297:31;6351:4;6348:1;6341:15;6379:4;6376:1;6369:15;6233:161;;6020:380;;;:::o",
  "source": "// SPDX-License-Identifier:MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract TestToken is ERC20(\"Test Token\", \"TOK\") {\n\n    function mint(uint amount) public {\n        _mint(msg.sender, amount);\n    }\n}\n",
  "sourcePath": "/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/helpers/TestToken.sol",
  "ast": {
    "absolutePath": "/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/helpers/TestToken.sol",
    "exportedSymbols": {
      "Context": [
        9928
      ],
      "ERC20": [
        9508
      ],
      "IERC20": [
        9586
      ],
      "IERC20Metadata": [
        9611
      ],
      "TestToken": [
        2769
      ]
    },
    "id": 2770,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2751,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:19"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2752,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2770,
        "sourceUnit": 9509,
        "src": "56:55:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "5465737420546f6b656e",
                "id": 2754,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "141:12:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_81e8ad438398ab0d4a2a7ecb159490c091bb27c67ace5181f70084e30fadaea2",
                  "typeString": "literal_string \"Test Token\""
                },
                "value": "Test Token"
              },
              {
                "hexValue": "544f4b",
                "id": 2755,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "155:5:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_92ec8c068e88c9c67ad1e93c5fb28a0afc1877fa1cdd216a8e4e432482417ddd",
                  "typeString": "literal_string \"TOK\""
                },
                "value": "TOK"
              }
            ],
            "baseName": {
              "id": 2753,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9508,
              "src": "135:5:19"
            },
            "id": 2756,
            "nodeType": "InheritanceSpecifier",
            "src": "135:26:19"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2769,
        "linearizedBaseContracts": [
          2769,
          9508,
          9611,
          9586,
          9928
        ],
        "name": "TestToken",
        "nameLocation": "122:9:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2767,
              "nodeType": "Block",
              "src": "203:42:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2762,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "219:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "219:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2764,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2758,
                        "src": "231:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2761,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9368,
                      "src": "213:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "213:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2766,
                  "nodeType": "ExpressionStatement",
                  "src": "213:25:19"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 2768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "178:4:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2758,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "188:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "183:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2757,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "182:13:19"
            },
            "returnParameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:0:19"
            },
            "scope": 2769,
            "src": "169:76:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2770,
        "src": "113:134:19",
        "usedErrors": []
      }
    ],
    "src": "31:217:19"
  },
  "legacyAST": {
    "absolutePath": "/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/helpers/TestToken.sol",
    "exportedSymbols": {
      "Context": [
        9928
      ],
      "ERC20": [
        9508
      ],
      "IERC20": [
        9586
      ],
      "IERC20Metadata": [
        9611
      ],
      "TestToken": [
        2769
      ]
    },
    "id": 2770,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2751,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:19"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2752,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2770,
        "sourceUnit": 9509,
        "src": "56:55:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "5465737420546f6b656e",
                "id": 2754,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "141:12:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_81e8ad438398ab0d4a2a7ecb159490c091bb27c67ace5181f70084e30fadaea2",
                  "typeString": "literal_string \"Test Token\""
                },
                "value": "Test Token"
              },
              {
                "hexValue": "544f4b",
                "id": 2755,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "155:5:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_92ec8c068e88c9c67ad1e93c5fb28a0afc1877fa1cdd216a8e4e432482417ddd",
                  "typeString": "literal_string \"TOK\""
                },
                "value": "TOK"
              }
            ],
            "baseName": {
              "id": 2753,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9508,
              "src": "135:5:19"
            },
            "id": 2756,
            "nodeType": "InheritanceSpecifier",
            "src": "135:26:19"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2769,
        "linearizedBaseContracts": [
          2769,
          9508,
          9611,
          9586,
          9928
        ],
        "name": "TestToken",
        "nameLocation": "122:9:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2767,
              "nodeType": "Block",
              "src": "203:42:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2762,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "219:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "219:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2764,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2758,
                        "src": "231:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2761,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9368,
                      "src": "213:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "213:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2766,
                  "nodeType": "ExpressionStatement",
                  "src": "213:25:19"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 2768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "178:4:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2758,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "188:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "183:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2757,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "182:13:19"
            },
            "returnParameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:0:19"
            },
            "scope": 2769,
            "src": "169:76:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2770,
        "src": "113:134:19",
        "usedErrors": []
      }
    ],
    "src": "31:217:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-10-19T22:54:44.159Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}