{
  "contractName": "HashcashPaymaster",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_difficulty",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CALLDATA_SIZE_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FORWARDER_HUB_OVERHEAD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAYMASTER_ACCEPTANCE_BUDGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POST_RELAYED_CALL_GAS_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRE_RELAYED_CALL_GAS_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "validUntil",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IForwarder.ForwardRequest",
              "name": "request",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "gasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pctRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "clientId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GsnTypes.RelayData",
              "name": "relayData",
              "type": "tuple"
            }
          ],
          "internalType": "struct GsnTypes.RelayRequest",
          "name": "relayRequest",
          "type": "tuple"
        }
      ],
      "name": "_verifyForwarder",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "difficulty",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGasAndDataLimits",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "acceptanceBudget",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preRelayedCallGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postRelayedCallGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "calldataSizeLimit",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPaymaster.GasAndDataLimits",
          "name": "limits",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHubAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRelayHubDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "gasUseWithoutPost",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pctRelayFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseRelayFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "relayWorker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "paymaster",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "paymasterData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "clientId",
              "type": "uint256"
            }
          ],
          "internalType": "struct GsnTypes.RelayData",
          "name": "relayData",
          "type": "tuple"
        }
      ],
      "name": "postRelayedCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRelayHub",
          "name": "hub",
          "type": "address"
        }
      ],
      "name": "setRelayHub",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "withdrawRelayHubDepositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "versionPaymaster",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "validUntil",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IForwarder.ForwardRequest",
              "name": "request",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "gasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pctRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "clientId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GsnTypes.RelayData",
              "name": "relayData",
              "type": "tuple"
            }
          ],
          "internalType": "struct GsnTypes.RelayRequest",
          "name": "relayRequest",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "approvalData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxPossibleGas",
          "type": "uint256"
        }
      ],
      "name": "preRelayedCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "revertOnRecipientRevert",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_difficulty\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLDATA_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORWARDER_HUB_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_ACCEPTANCE_BUDGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POST_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRE_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"}],\"name\":\"_verifyForwarder\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"difficulty\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasAndDataLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHubDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"revertOnRecipientRevert\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRelayHub\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setRelayHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawRelayHubDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"context\":\"- the call context, as returned by the preRelayedCall\",\"gasUseWithoutPost\":\"- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.\",\"relayData\":\"- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.\",\"success\":\"- true if the relayed call succeeded, false if it reverted\"}},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"params\":{\"approvalData\":\"- extra dapp-specific data (e.g. signature from trusted party)\",\"maxPossibleGas\":\"- based on values returned from {@link getGasAndDataLimits},         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.         In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"  return:      a context to be passed to postRelayedCall      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).\",\"relayRequest\":\"- the full relay request structure\",\"signature\":\"- user's EIP712-compatible signature of the {@link relayRequest}.              Note that in most cases the paymaster shouldn't try use it at all. It is always checked              by the forwarder immediately after preRelayedCall returns.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGasAndDataLimits()\":{\"notice\":\"Return the Gas Limits and msg.data max size constants used by the Paymaster.\"},\"getHubAddr()\":{\"notice\":\"return the relayHub of this contract.\"},\"getRelayHubDeposit()\":{\"notice\":\"check current deposit on relay hub.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state.\"},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call. MUST be protected with relayHubOnly() in case it modifies state. The Paymaster rejects by the following \\\"revert\\\" operations  - preRelayedCall() method reverts  - the forwarder reverts because of nonce or signature error  - the paymaster returned \\\"rejectOnRecipientRevert\\\", and the recipient contract reverted. In any of the above cases, all paymaster calls (and recipient call) are reverted. In any other case, the paymaster agrees to pay for the gas cost of the transaction (note  that this includes also postRelayedCall revert) The rejectOnRecipientRevert flag means the Paymaster \\\"delegate\\\" the rejection to the recipient  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,  otherwise the TX is paid by the Paymaster.\"},\"withdrawRelayHubDepositTo(uint256,address)\":{\"notice\":\"withdraw deposit from relayHub\"}},\"notice\":\"A paymaster that requires some calculation from the client before accepting a request. This comes to prevent attack by anonymous clients. Usage: - Create an instance of the HashcashPaymaster, and give it a proper difficulty level. - When creating a RelayProvider, make sure to use the createHashcashAsyncApproval() with   the same difficulty level. The \\\"difficulty\\\" level is the number of zero bits at the generated hash. a value of 15 requires roughly 32000 iterations and take ~0.5 second on a normal PC\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/HashcashPaymaster.sol\":\"HashcashPaymaster\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/AcceptEverythingPaymaster.sol\":{\"keccak256\":\"0x8bba6bff1c25e5dc1cc7ae77ef1845682454cf4520d0b62d4db36dd4f377ecd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8888bb62506059b196f64088f1ff3d58dd3835f2ab014649c6c73389cb0ca76e\",\"dweb:/ipfs/QmZGWiusQYYf8LUpP5zEr7UkcvwsZFkeYtFtJpEig2QZn9\"]},\"/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/HashcashPaymaster.sol\":{\"keccak256\":\"0x5dba93208341ece33f64f18118bb013ef5cd76b5a4da06799fa19ae2c67c9b32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bdab9bebe90077dc986ecfcdc77d0de20bbce84939f25c420573ea487e60463\",\"dweb:/ipfs/Qmf656vKbVHSijWu2pgdWiXcPkCZQWqaxcARX4jdRe4WS6\"]},\"@opengsn/contracts/src/BasePaymaster.sol\":{\"keccak256\":\"0x037963afa348ba25ed25d26f07a1b3545534e5447262eac8218f92246797569e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://482ab51f9c7a4fc86d3d1540a2465b1f5bf0a7244cc61de186233321dddbcdee\",\"dweb:/ipfs/QmY4geP56GPzkHADJ5xdks1ztrtFeVHqMu2SabHn8E3uuB\"]},\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e42577c586894c9fc9e11a3281c0e2d4183121714fd1101380b6b2b66c144ba3\",\"dweb:/ipfs/QmPQphvUxhvnYGXtNRbU7WcmbEP2N7mMDgC5R8R9AqC9xG\"]},\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x9c717edb87debd2e6d3a7291ae1b2ec3248776617f20dbc2cbba66c7f1bf749c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ef2ce174df7e8dd8ac15c112768028bd89a517e21c354d5d35aa071f923e721d\",\"dweb:/ipfs/QmYHFK3FzfiiDRWhM8Q6KdT6YKmaA5JfDNKj6am7EymJU3\"]},\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":{\"keccak256\":\"0x3497133a7147174c498d2feeb2569b973396a8c2c220b5876fd9eb3b59841c85\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://32bb285a0f675310ee87647d00717e2dee9dbc7179e5455a3e1d7a2e121b6bf7\",\"dweb:/ipfs/QmZABWeS7pi5KfhoDUKyZHEvwqiAL4sYvjr3UcWZ7SvqCX\"]},\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x199e82e0a2833a97213b5c16ac9b4e2b1814f2e90a4c4916855cbc21e710ad5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92112fc87990f2d55c538946266c48f43e6ca442186ef3b8172eb4632deb0db3\",\"dweb:/ipfs/QmU6pqFXYT8fYfyhw7viRA775eBH4W7PAd589DVFGtSgxo\"]},\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x834859879435b9032dc629a03baaa0d7ce645c184997985a7b8da944086753bb\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://08ac05ead3b791dc42287fdfb3ac1a3734876ed19971ddfedc904910dc88ee72\",\"dweb:/ipfs/QmSPBuZtdr8QtLWQSzX7eQo754bxzR2wnxoeWJxGWzK8Qb\"]},\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":{\"keccak256\":\"0x329a0634ba63c397bde0cf2b003b577cacf1bfbab9616bbf415781de243730d3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a6e52a2b8598d3478272f8791be1493645a14d850fac70c8a7180d72f00a45d2\",\"dweb:/ipfs/QmQmbSNNBU1LEgxEmhpVqhbts3RjEn9Zavwv5PmQJEdfoZ\"]},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"keccak256\":\"0x632b33731c279b0a14b00ceeaaed067e0570881bf31ef383b6970cb595566269\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c4ef0205cbfd132c978dac437b361749caecd2e69ae339b5826cb65a086bdbc1\",\"dweb:/ipfs/Qme5emF1fkmqfTWydJ4S97CbTidEx72VYvKLzTbapH3nGB\"]},\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"keccak256\":\"0x93465757df9b5721f0dde979be1675f82296b8f3cd196c6eee29d828698cb0de\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b9a5628093b0cffc70f851a64aef968e4a379b98d60a7855fa9afce102dad052\",\"dweb:/ipfs/QmaQZXC9vxMrhwXXsr8C6fNpYPQx1PfiAbfmweL3aHZCy5\"]},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"keccak256\":\"0x8063af8e0f134be3d794ad39bdc0041f33a16c91a4ee7abb968d4c15c8d10c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c56adf5ddc717546e922b5f0cdb1d2bf084b070d2256b684a746d535cefdfa23\",\"dweb:/ipfs/QmbGgdbkpg4fz79c8tgKFJB4afXHRYgL3iMRf9KBQSVkWu\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101225760003560e01c80638da5cb5b116100a0578063bbdaa3c911610064578063bbdaa3c914610414578063da7422281461042b578063df463a661461044b578063f2fde38b14610460578063f9c002f71461048057600080fd5b80638da5cb5b14610356578063921276ea14610374578063a5dcd07b14610396578063b039a88f146103b6578063b90b41cf146103fe57600080fd5b8063715018a6116100e7578063715018a6146102af57806374e861d6146102c457806376fa01c3146102f65780637bb05264146103185780637da0a8771461033857600080fd5b8062be5dd4146101ea57806319cae462146102215780632afe31c1146102545780632d14c4b7146102775780635c5e3db11461029957600080fd5b366101e5576001546001600160a01b03166101845760405162461bcd60e51b815260206004820152601960248201527f72656c6179206875622061646472657373206e6f74207365740000000000000060448201526064015b60405180910390fd5b60015460405163aa67c91960e01b81523060048201526001600160a01b039091169063aa67c9199034906024016000604051808303818588803b1580156101ca57600080fd5b505af11580156101de573d6000803e3d6000fd5b5050505050005b600080fd5b3480156101f657600080fd5b5061020a610205366004610e7b565b610497565b604051610218929190610fa9565b60405180910390f35b34801561022d57600080fd5b5060025461024290600160a01b900460ff1681565b60405160ff9091168152602001610218565b34801561026057600080fd5b5061026961071a565b604051908152602001610218565b34801561028357600080fd5b50610297610292366004610f31565b61079b565b005b3480156102a557600080fd5b5061026961290481565b3480156102bb57600080fd5b5061029761082d565b3480156102d057600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610218565b34801561030257600080fd5b50610297610311366004610dae565b5050505050565b34801561032457600080fd5b50610297610333366004610d4b565b610863565b34801561034457600080fd5b506002546001600160a01b03166102de565b34801561036257600080fd5b506000546001600160a01b03166102de565b34801561038057600080fd5b506103896108af565b6040516102189190610fcd565b3480156103a257600080fd5b506102976103b1366004610e3e565b6108cf565b3480156103c257600080fd5b506103cb610956565b60405161021891908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b34801561040a57600080fd5b5061026961c35081565b34801561042057600080fd5b506102696201adb081565b34801561043757600080fd5b50610297610446366004610d4b565b6109bf565b34801561045757600080fd5b50610269610a0b565b34801561046c57600080fd5b5061029761047b366004610d4b565b610a1d565b34801561048c57600080fd5b50610269620186a081565b606060006104ad6001546001600160a01b031690565b6001600160a01b0316336001600160a01b03161461050d5760405162461bcd60e51b815260206004820152601e60248201527f63616e206f6e6c792062652063616c6c65642062792052656c61794875620000604482015260640161017b565b604084146105755760405162461bcd60e51b815260206004820152602f60248201527f617070726f76616c446174613a20696e76616c6964206c656e67746820666f7260448201526e206861736820616e64206e6f6e636560881b606482015260840161017b565b6105826020890189611072565b6105909060c0810190611015565b1590506105df5760405162461bcd60e51b815260206004820152601d60248201527f7061796d6173746572446174613a20696e76616c6964206c656e677468000000604482015260640161017b565b6000806105ee86880188610d8c565b909250905060006105ff8b8061105c565b61060d906020810190610d4b565b6106178c8061105c565b604080516001600160a01b0390931660208401526080918201359083015260608201849052016040516020818303038152906040528051906020012090508083146106915760405162461bcd60e51b815260206004820152600a6024820152690eee4dedcce40d0c2e6d60b31b604482015260640161017b565b6002546106aa90600160a01b900460ff166101006110a0565b61ffff166001901b8360001c106106f85760405162461bcd60e51b8152602060048201526012602482015271191a59999a58dd5b1d1e481b9bdd081b595d60721b604482015260640161017b565b505060408051602081019091526000808252909a909950975050505050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561075e57600080fd5b505afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107969190610f18565b905090565b6000546001600160a01b031633146107c55760405162461bcd60e51b815260040161017b90610fe0565b600154604051627b8a6760e11b8152600481018490526001600160a01b0383811660248301529091169062f714ce90604401600060405180830381600087803b15801561081157600080fd5b505af1158015610825573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146108575760405162461bcd60e51b815260040161017b90610fe0565b6108616000610ab1565b565b6000546001600160a01b0316331461088d5760405162461bcd60e51b815260040161017b90610fe0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b606060405180606001604052806021815260200161112d60219139905090565b6108dc6020820182611072565b6108ed9060c081019060a001610d4b565b6002546001600160a01b0390811691161461094a5760405162461bcd60e51b815260206004820152601860248201527f466f72776172646572206973206e6f7420747275737465640000000000000000604482015260640161017b565b61095381610b01565b50565b6109816040518060800160405280600081526020016000815260200160008152602001600081525090565b604051806080016040528061c350620186a061099d9190611088565b8152602001620186a081526020016201adb08152602001612904815250905090565b6000546001600160a01b031633146109e95760405162461bcd60e51b815260040161017b90610fe0565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b610a1a61c350620186a0611088565b81565b6000546001600160a01b03163314610a475760405162461bcd60e51b815260040161017b90610fe0565b6001600160a01b038116610aac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161017b565b610953815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080610b0e838061105c565b610b1f906040810190602001610d4b565b6001600160a01b031663572b6c0560e01b610b3d6020860186611072565b610b4e9060c081019060a001610d4b565b6040516001600160a01b03909116602482015260440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610ba29190610f8d565b600060405180830381855afa9150503d8060008114610bdd576040519150601f19603f3d011682016040523d82523d6000602084013e610be2565b606091505b509150915081610c345760405162461bcd60e51b815260206004820152601c60248201527f697354727573746564466f727761726465723a20726576657274656400000000604482015260640161017b565b8051602014610c855760405162461bcd60e51b815260206004820181905260248201527f697354727573746564466f727761726465723a2062616420726573706f6e7365604482015260640161017b565b80806020019051810190610c999190610d6f565b610ce55760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420666f7277617264657220666f7220726563697069656e7400604482015260640161017b565b505050565b60008083601f840112610cfc57600080fd5b50813567ffffffffffffffff811115610d1457600080fd5b602083019150836020828501011115610d2c57600080fd5b9250929050565b600060408284031215610d4557600080fd5b50919050565b600060208284031215610d5d57600080fd5b8135610d6881611109565b9392505050565b600060208284031215610d8157600080fd5b8151610d688161111e565b60008060408385031215610d9f57600080fd5b50508035926020909101359150565b600080600080600060808688031215610dc657600080fd5b853567ffffffffffffffff80821115610dde57600080fd5b610dea89838a01610cea565b909750955060208801359150610dff8261111e565b9093506040870135925060608701359080821115610e1c57600080fd5b5086016101008189031215610e3057600080fd5b809150509295509295909350565b600060208284031215610e5057600080fd5b813567ffffffffffffffff811115610e6757600080fd5b610e7384828501610d33565b949350505050565b60008060008060008060808789031215610e9457600080fd5b863567ffffffffffffffff80821115610eac57600080fd5b610eb88a838b01610d33565b97506020890135915080821115610ece57600080fd5b610eda8a838b01610cea565b90975095506040890135915080821115610ef357600080fd5b50610f0089828a01610cea565b979a9699509497949695606090950135949350505050565b600060208284031215610f2a57600080fd5b5051919050565b60008060408385031215610f4457600080fd5b823591506020830135610f5681611109565b809150509250929050565b60008151808452610f798160208601602086016110c3565b601f01601f19169290920160200192915050565b60008251610f9f8184602087016110c3565b9190910192915050565b604081526000610fbc6040830185610f61565b905082151560208301529392505050565b602081526000610d686020830184610f61565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000808335601e1984360301811261102c57600080fd5b83018035915067ffffffffffffffff82111561104757600080fd5b602001915036819003821315610d2c57600080fd5b6000823560de19833603018112610f9f57600080fd5b6000823560fe19833603018112610f9f57600080fd5b6000821982111561109b5761109b6110f3565b500190565b600061ffff838116908316818110156110bb576110bb6110f3565b039392505050565b60005b838110156110de5781810151838201526020016110c6565b838111156110ed576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461095357600080fd5b801515811461095357600080fdfe322e322e332b6f70656e67736e2e68617368636173682e697061796d6173746572a264697066735822122038ccb6c8226ce7e6b47a43205ce4b211e20b6e052682835e8e9a4a0c4764bcb864736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "673:1333:1:-:0;;;913:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:45;665:10:51;867:9:45;:23::i;:::-;954:10:1;:24;;;;;;-1:-1:-1;;;954:24:1;-1:-1:-1;;;;954:24:1;;;;;;;;;673:1333;;2041:169:45;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:45;;;-1:-1:-1;;;;;;2131:17:45;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:273:58:-;82:6;135:2;123:9;114:7;110:23;106:32;103:52;;;151:1;148;141:12;103:52;183:9;177:16;233:4;226:5;222:16;215:5;212:27;202:55;;253:1;250;243:12;202:55;276:5;14:273;-1:-1:-1;;;14:273:58:o;:::-;673:1333:1;;;;;;",
  "deployedSourceMap": "673:1333:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3026:8:27;;-1:-1:-1;;;;;3026:8:27;3010:69;;;;-1:-1:-1;;;3010:69:27;;7670:2:58;3010:69:27;;;7652:21:58;7709:2;7689:18;;;7682:30;7748:27;7728:18;;;7721:55;7793:18;;3010:69:27;;;;;;;;;3089:8;;:51;;-1:-1:-1;;;3089:51:27;;3134:4;3089:51;;;5066::58;-1:-1:-1;;;;;3089:8:27;;;;:19;;3115:9;;5039:18:58;;3089:51:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:1333:1;;;;;991:1013;;;;;;;;;;-1:-1:-1;991:1013:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;883:23;;;;;;;;;;-1:-1:-1;883:23:1;;;;-1:-1:-1;;;883:23:1;;;;;;;;;11473:4:58;11461:17;;;11443:36;;11431:2;11416:18;883:23:1;11301:184:58;2643:139:27;;;;;;;;;;;;;:::i;:::-;;;10970:25:58;;;10958:2;10943:18;2643:139:27;10824:177:58;3192:139:27;;;;;;;;;;-1:-1:-1;3192:139:27;;;;;:::i;:::-;;:::i;:::-;;1148:51;;;;;;;;;;;;1194:5;1148:51;;1605:92:45;;;;;;;;;;;;;:::i;603:102:27:-;;;;;;;;;;-1:-1:-1;689:8:27;;-1:-1:-1;;;;;689:8:27;603:102;;;-1:-1:-1;;;;;5084:32:58;;;5066:51;;5054:2;5039:18;603:102:27;4920:203:58;932:258:0;;;;;;;;;;-1:-1:-1;932:258:0;;;;;:::i;:::-;;;;;;;2262:84:27;;;;;;;;;;-1:-1:-1;2262:84:27;;;;;:::i;:::-;;:::i;2477:115::-;;;;;;;;;;-1:-1:-1;2568:17:27;;-1:-1:-1;;;;;2568:17:27;2477:115;;973:85:45;;;;;;;;;;-1:-1:-1;1019:7:45;1045:6;-1:-1:-1;;;;;1045:6:45;973:85;;736:141:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1733:274:27:-;;;;;;;;;;-1:-1:-1;1733:274:27;;;;;:::i;:::-;;:::i;1206:362::-;;;;;;;;;;;;;:::i;:::-;;;;;;10610:13:58;;10592:32;;10680:4;10668:17;;;10662:24;10640:20;;;10633:54;10743:4;10731:17;;;10725:24;10703:20;;;10696:54;10806:4;10794:17;;;10788:24;10766:20;;;10759:54;;;;10579:3;10564:19;;10377:442;776:54:27;;;;;;;;;;;;825:5;776:54;;971:60;;;;;;;;;;;;1025:6;971:60;;2352:119;;;;;;;;;;-1:-1:-1;2352:119:27;;;;;:::i;:::-;;:::i;1037:105::-;;;;;;;;;;;;;:::i;1846:189:45:-;;;;;;;;;;-1:-1:-1;1846:189:45;;;;;:::i;:::-;;:::i;906:59:27:-;;;;;;;;;;;;959:6;906:59;;991:1013:1;1245:12;1259:28;2191:12:27;689:8;;-1:-1:-1;;;;;689:8:27;;603:102;2191:12;-1:-1:-1;;;;;2177:26:27;:10;-1:-1:-1;;;;;2177:26:27;;2169:69;;;;-1:-1:-1;;;2169:69:27;;9515:2:58;2169:69:27;;;9497:21:58;9554:2;9534:18;;;9527:30;9593:32;9573:18;;;9566:60;9643:18;;2169:69:27;9313:354:58;2169:69:27;1419:2:1::1;1396:25:::0;::::1;1388:85;;;::::0;-1:-1:-1;;;1388:85:1;;9099:2:58;1388:85:1::1;::::0;::::1;9081:21:58::0;9138:2;9118:18;;;9111:30;9177:34;9157:18;;;9150:62;-1:-1:-1;;;9228:18:58;;;9221:45;9283:19;;1388:85:1::1;8897:411:58::0;1388:85:1::1;1491:22;;::::0;::::1;:12:::0;:22:::1;:::i;:::-;:36;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;:48:::0;;-1:-1:-1;1483:90:1::1;;;::::0;-1:-1:-1;;;1483:90:1;;10221:2:58;1483:90:1::1;::::0;::::1;10203:21:58::0;10260:2;10240:18;;;10233:30;10299:31;10279:18;;;10272:59;10348:18;;1483:90:1::1;10019:353:58::0;1483:90:1::1;1585:12;::::0;1620:44:::1;::::0;;::::1;1631:12:::0;1620:44:::1;:::i;:::-;1584:80:::0;;-1:-1:-1;1584:80:1;-1:-1:-1;1674:16:1::1;1731:20;:12:::0;;:20:::1;:::i;:::-;:25;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;1774:20;:12:::0;;:20:::1;:::i;:::-;1703:125;::::0;;-1:-1:-1;;;;;5348:32:58;;;1703:125:1::1;::::0;::::1;5330:51:58::0;1774:26:1::1;::::0;;::::1;;5397:18:58::0;;;5390:34;5440:18;;;5433:34;;;5303:18;1703:125:1::1;;;;;;;;;;;;1693:136;;;;;;1674:155;;1855:8;1847:4;:16;1839:39;;;::::0;-1:-1:-1;;;1839:39:1;;7331:2:58;1839:39:1::1;::::0;::::1;7313:21:58::0;7370:2;7350:18;;;7343:30;-1:-1:-1;;;7389:18:58;;;7382:40;7439:18;;1839:39:1::1;7129:334:58::0;1839:39:1::1;1934:10;::::0;1928:16:::1;::::0;-1:-1:-1;;;1934:10:1;::::1;;;;1928:16;:::i;:::-;1913:32;;1921:1;1913:32;;1904:4;1896:13;;:50;1888:81;;;::::0;-1:-1:-1;;;1888:81:1;;9874:2:58;1888:81:1::1;::::0;::::1;9856:21:58::0;9913:2;9893:18;;;9886:30;-1:-1:-1;;;9932:18:58;;;9925:48;9990:18;;1888:81:1::1;9672:342:58::0;1888:81:1::1;-1:-1:-1::0;;1979:18:1::1;::::0;;::::1;::::0;::::1;::::0;;;1991:5:::1;1979:18:::0;;;;;1991:5;;-1:-1:-1;991:1013:1;-1:-1:-1;;;;;;;;991:1013:1:o;2643:139:27:-;2742:8;;:33;;-1:-1:-1;;;2742:33:27;;2769:4;2742:33;;;5066:51:58;2719:4:27;;-1:-1:-1;;;;;2742:8:27;;:18;;5039::58;;2742:33:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2735:40;;2643:139;:::o;3192:::-;1019:7:45;1045:6;-1:-1:-1;;;;;1045:6:45;665:10:51;1185:23:45;1177:68;;;;-1:-1:-1;;;1177:68:45;;;;;;;:::i;:::-;3291:8:27::1;::::0;:33:::1;::::0;-1:-1:-1;;;3291:33:27;;::::1;::::0;::::1;11196:25:58::0;;;-1:-1:-1;;;;;11257:32:58;;;11237:18;;;11230:60;3291:8:27;;::::1;::::0;:17:::1;::::0;11169:18:58;;3291:33:27::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3192:139:::0;;:::o;1605:92:45:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:45;665:10:51;1185:23:45;1177:68;;;;-1:-1:-1;;;1177:68:45;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;2262:84:27:-;1019:7:45;1045:6;-1:-1:-1;;;;;1045:6:45;665:10:51;1185:23:45;1177:68;;;;-1:-1:-1;;;1177:68:45;;;;;;;:::i;:::-;2325:8:27::1;:14:::0;;-1:-1:-1;;;;;;2325:14:27::1;-1:-1:-1::0;;;;;2325:14:27;;;::::1;::::0;;;::::1;::::0;;2262:84::o;736:141:1:-;804:13;828:42;;;;;;;;;;;;;;;;;;;736:141;:::o;1733:274:27:-;1876:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;1854:17;;-1:-1:-1;;;;;1854:17:27;;;1846:62;;;1838:99;;;;-1:-1:-1;;;1838:99:27;;8024:2:58;1838:99:27;;;8006:21:58;8063:2;8043:18;;;8036:30;8102:26;8082:18;;;8075:54;8146:18;;1838:99:27;7822:348:58;1838:99:27;1947:53;1987:12;1947:39;:53::i;:::-;1733:274;:::o;1206:362::-;1304:41;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:41:27;1369:192;;;;;;;;825:5;959:6;1091:51;;;;:::i;:::-;1369:192;;;;959:6;1369:192;;;;1025:6;1369:192;;;;1194:5;1369:192;;;1362:199;;1206:362;:::o;2352:119::-;1019:7:45;1045:6;-1:-1:-1;;;;;1045:6:45;665:10:51;1185:23:45;1177:68;;;;-1:-1:-1;;;1177:68:45;;;;;;;:::i;:::-;2435:17:27::1;:29:::0;;-1:-1:-1;;;;;;2435:29:27::1;-1:-1:-1::0;;;;;2435:29:27;;;::::1;::::0;;;::::1;::::0;;2352:119::o;1037:105::-;1091:51;825:5;959:6;1091:51;:::i;:::-;1037:105;:::o;1846:189:45:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:45;665:10:51;1185:23:45;1177:68;;;;-1:-1:-1;;;1177:68:45;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:45;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:45;;6567:2:58;1926:73:45::1;::::0;::::1;6549:21:58::0;6606:2;6586:18;;;6579:30;6645:34;6625:18;;;6618:62;-1:-1:-1;;;6696:18:58;;;6689:36;6742:19;;1926:73:45::1;6365:402:58::0;1926:73:45::1;2009:19;2019:8;2041:169:::0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:45;;;-1:-1:-1;;;;;;2131:17:45;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;2051:538:39:-;2153:12;;2187:20;:12;;:20;:::i;:::-;:23;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2187:34:39;-1:-1:-1;;;2320:22:39;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;2235:131;;-1:-1:-1;;;;;5084:32:58;;;2235:131:39;;;5066:51:58;5039:18;;2235:131:39;;;-1:-1:-1;;2235:131:39;;;;;;;;;;;;;;-1:-1:-1;;;;;2235:131:39;-1:-1:-1;;;;;;2235:131:39;;;;;;;;;;2187:189;;;;2235:131;2187:189;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2152:224;;;;2394:7;2386:48;;;;-1:-1:-1;;;2386:48:39;;6974:2:58;2386:48:39;;;6956:21:58;7013:2;6993:18;;;6986:30;7052;7032:18;;;7025:58;7100:18;;2386:48:39;6772:352:58;2386:48:39;2452:3;:10;2466:2;2452:16;2444:61;;;;-1:-1:-1;;;2444:61:39;;8377:2:58;2444:61:39;;;8359:21:58;;;8396:18;;;8389:30;8455:34;8435:18;;;8428:62;8507:18;;2444:61:39;8175:356:58;2444:61:39;2534:3;2523:23;;;;;;;;;;;;:::i;:::-;2515:67;;;;-1:-1:-1;;;2515:67:39;;6207:2:58;2515:67:39;;;6189:21:58;6246:2;6226:18;;;6219:30;6285:33;6265:18;;;6258:61;6336:18;;2515:67:39;6005:355:58;2515:67:39;2142:447;;2051:538;:::o;14:347:58:-;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:55;;147:1;144;137:12;96:55;-1:-1:-1;170:20:58;;213:18;202:30;;199:50;;;245:1;242;235:12;199:50;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:59;;;351:1;348;341:12;296:59;14:347;;;;;:::o;366:160::-;431:5;476:2;467:6;462:3;458:16;454:25;451:45;;;492:1;489;482:12;451:45;-1:-1:-1;514:6:58;366:160;-1:-1:-1;366:160:58:o;531:247::-;590:6;643:2;631:9;622:7;618:23;614:32;611:52;;;659:1;656;649:12;611:52;698:9;685:23;717:31;742:5;717:31;:::i;:::-;767:5;531:247;-1:-1:-1;;;531:247:58:o;783:245::-;850:6;903:2;891:9;882:7;878:23;874:32;871:52;;;919:1;916;909:12;871:52;951:9;945:16;970:28;992:5;970:28;:::i;1033:248::-;1101:6;1109;1162:2;1150:9;1141:7;1137:23;1133:32;1130:52;;;1178:1;1175;1168:12;1130:52;-1:-1:-1;;1201:23:58;;;1271:2;1256:18;;;1243:32;;-1:-1:-1;1033:248:58:o;1286:895::-;1409:6;1417;1425;1433;1441;1494:3;1482:9;1473:7;1469:23;1465:33;1462:53;;;1511:1;1508;1501:12;1462:53;1551:9;1538:23;1580:18;1621:2;1613:6;1610:14;1607:34;;;1637:1;1634;1627:12;1607:34;1676:58;1726:7;1717:6;1706:9;1702:22;1676:58;:::i;:::-;1753:8;;-1:-1:-1;1650:84:58;-1:-1:-1;1838:2:58;1823:18;;1810:32;;-1:-1:-1;1851:28:58;1810:32;1851:28;:::i;:::-;1898:5;;-1:-1:-1;1950:2:58;1935:18;;1922:32;;-1:-1:-1;2007:2:58;1992:18;;1979:32;;2023:16;;;2020:36;;;2052:1;2049;2042:12;2020:36;-1:-1:-1;2075:24:58;;2133:3;2115:16;;;2111:26;2108:46;;;2150:1;2147;2140:12;2108:46;2173:2;2163:12;;;1286:895;;;;;;;;:::o;2456:366::-;2547:6;2600:2;2588:9;2579:7;2575:23;2571:32;2568:52;;;2616:1;2613;2606:12;2568:52;2656:9;2643:23;2689:18;2681:6;2678:30;2675:50;;;2721:1;2718;2711:12;2675:50;2744:72;2808:7;2799:6;2788:9;2784:22;2744:72;:::i;:::-;2734:82;2456:366;-1:-1:-1;;;;2456:366:58:o;2827:1030::-;2967:6;2975;2983;2991;2999;3007;3060:3;3048:9;3039:7;3035:23;3031:33;3028:53;;;3077:1;3074;3067:12;3028:53;3117:9;3104:23;3146:18;3187:2;3179:6;3176:14;3173:34;;;3203:1;3200;3193:12;3173:34;3226:72;3290:7;3281:6;3270:9;3266:22;3226:72;:::i;:::-;3216:82;;3351:2;3340:9;3336:18;3323:32;3307:48;;3380:2;3370:8;3367:16;3364:36;;;3396:1;3393;3386:12;3364:36;3435:60;3487:7;3476:8;3465:9;3461:24;3435:60;:::i;:::-;3514:8;;-1:-1:-1;3409:86:58;-1:-1:-1;3602:2:58;3587:18;;3574:32;;-1:-1:-1;3618:16:58;;;3615:36;;;3647:1;3644;3637:12;3615:36;;3686:60;3738:7;3727:8;3716:9;3712:24;3686:60;:::i;:::-;2827:1030;;;;-1:-1:-1;2827:1030:58;;;;;3847:2;3832:18;;;3819:32;;2827:1030;-1:-1:-1;;;;2827:1030:58:o;3862:184::-;3932:6;3985:2;3973:9;3964:7;3960:23;3956:32;3953:52;;;4001:1;3998;3991:12;3953:52;-1:-1:-1;4024:16:58;;3862:184;-1:-1:-1;3862:184:58:o;4051:323::-;4127:6;4135;4188:2;4176:9;4167:7;4163:23;4159:32;4156:52;;;4204:1;4201;4194:12;4156:52;4240:9;4227:23;4217:33;;4300:2;4289:9;4285:18;4272:32;4313:31;4338:5;4313:31;:::i;:::-;4363:5;4353:15;;;4051:323;;;;;:::o;4379:257::-;4420:3;4458:5;4452:12;4485:6;4480:3;4473:19;4501:63;4557:6;4550:4;4545:3;4541:14;4534:4;4527:5;4523:16;4501:63;:::i;:::-;4618:2;4597:15;-1:-1:-1;;4593:29:58;4584:39;;;;4625:4;4580:50;;4379:257;-1:-1:-1;;4379:257:58:o;4641:274::-;4770:3;4808:6;4802:13;4824:53;4870:6;4865:3;4858:4;4850:6;4846:17;4824:53;:::i;:::-;4893:16;;;;;4641:274;-1:-1:-1;;4641:274:58:o;5478:298::-;5647:2;5636:9;5629:21;5610:4;5667:44;5707:2;5696:9;5692:18;5684:6;5667:44;:::i;:::-;5659:52;;5761:6;5754:14;5747:22;5742:2;5731:9;5727:18;5720:50;5478:298;;;;;:::o;5781:219::-;5930:2;5919:9;5912:21;5893:4;5950:44;5990:2;5979:9;5975:18;5967:6;5950:44;:::i;8536:356::-;8738:2;8720:21;;;8757:18;;;8750:30;8816:34;8811:2;8796:18;;8789:62;8883:2;8868:18;;8536:356::o;11490:521::-;11567:4;11573:6;11633:11;11620:25;11727:2;11723:7;11712:8;11696:14;11692:29;11688:43;11668:18;11664:68;11654:96;;11746:1;11743;11736:12;11654:96;11773:33;;11825:20;;;-1:-1:-1;11868:18:58;11857:30;;11854:50;;;11900:1;11897;11890:12;11854:50;11933:4;11921:17;;-1:-1:-1;11964:14:58;11960:27;;;11950:38;;11947:58;;;12001:1;11998;11991:12;12016:332;12116:4;12174:11;12161:25;12268:3;12264:8;12253;12237:14;12233:29;12229:44;12209:18;12205:69;12195:97;;12288:1;12285;12278:12;12353:327;12448:4;12506:11;12493:25;12600:3;12596:8;12585;12569:14;12565:29;12561:44;12541:18;12537:69;12527:97;;12620:1;12617;12610:12;12685:128;12725:3;12756:1;12752:6;12749:1;12746:13;12743:39;;;12762:18;;:::i;:::-;-1:-1:-1;12798:9:58;;12685:128::o;12818:217::-;12857:4;12886:6;12942:10;;;;12912;;12964:12;;;12961:38;;;12979:18;;:::i;:::-;13016:13;;12818:217;-1:-1:-1;;;12818:217:58:o;13040:258::-;13112:1;13122:113;13136:6;13133:1;13130:13;13122:113;;;13212:11;;;13206:18;13193:11;;;13186:39;13158:2;13151:10;13122:113;;;13253:6;13250:1;13247:13;13244:48;;;13288:1;13279:6;13274:3;13270:16;13263:27;13244:48;;13040:258;;;:::o;13303:127::-;13364:10;13359:3;13355:20;13352:1;13345:31;13395:4;13392:1;13385:15;13419:4;13416:1;13409:15;13435:131;-1:-1:-1;;;;;13510:31:58;;13500:42;;13490:70;;13556:1;13553;13546:12;13571:118;13657:5;13650:13;13643:21;13636:5;13633:32;13623:60;;13679:1;13676;13669:12",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"./AcceptEverythingPaymaster.sol\";\n\n///A paymaster that requires some calculation from the client before accepting a request.\n///This comes to prevent attack by anonymous clients.\n/// Usage:\n/// - Create an instance of the HashcashPaymaster, and give it a proper difficulty level.\n/// - When creating a RelayProvider, make sure to use the createHashcashAsyncApproval() with\n///   the same difficulty level.\n///\n/// The \"difficulty\" level is the number of zero bits at the generated hash.\n/// a value of 15 requires roughly 32000 iterations and take ~0.5 second on a normal PC\ncontract HashcashPaymaster is AcceptEverythingPaymaster {\n\n    function versionPaymaster() external view override virtual returns (string memory){\n        return \"2.2.3+opengsn.hashcash.ipaymaster\";\n    }\n\n    uint8 public difficulty;\n\n    constructor(uint8 _difficulty) {\n        difficulty = _difficulty;\n    }\n\n    function preRelayedCall(\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData,\n        uint256 maxPossibleGas\n    )\n    external\n    override\n    virtual\n    relayHubOnly\n    returns (bytes memory, bool revertOnRecipientRevert) {\n        (maxPossibleGas, signature);\n\n        // solhint-disable-next-line reason-string\n        require(approvalData.length == 64, \"approvalData: invalid length for hash and nonce\");\n        require(relayRequest.relayData.paymasterData.length == 0, \"paymasterData: invalid length\");\n\n        (bytes32 hash, uint256 hashNonce) = abi.decode(approvalData, (bytes32, uint256));\n        bytes32 calcHash = keccak256(abi.encode(\n                relayRequest.request.from,\n                relayRequest.request.nonce,\n                hashNonce));\n        require(hash == calcHash, \"wrong hash\");\n        require(uint256(hash) < (uint256(1) << (256 - difficulty)), \"difficulty not met\");\n        return (\"\", false);\n    }\n}\n",
  "sourcePath": "/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/HashcashPaymaster.sol",
  "ast": {
    "absolutePath": "/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/HashcashPaymaster.sol",
    "exportedSymbols": {
      "AcceptEverythingPaymaster": [
        63
      ],
      "BasePaymaster": [
        3530
      ],
      "Context": [
        9928
      ],
      "GsnEip712Library": [
        7813
      ],
      "GsnTypes": [
        7841
      ],
      "GsnUtils": [
        7888
      ],
      "HashcashPaymaster": [
        193
      ],
      "IForwarder": [
        6824
      ],
      "IPaymaster": [
        6897
      ],
      "IRelayHub": [
        7244
      ],
      "IRelayRecipient": [
        7273
      ],
      "IStakeManager": [
        7437
      ],
      "MinLibBytes": [
        8003
      ],
      "Ownable": [
        8916
      ],
      "SafeMath": [
        10423
      ]
    },
    "id": 194,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 65,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:1"
      },
      {
        "id": 66,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:33:1"
      },
      {
        "absolutePath": "/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/AcceptEverythingPaymaster.sol",
        "file": "./AcceptEverythingPaymaster.sol",
        "id": 67,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 194,
        "sourceUnit": 64,
        "src": "90:41:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 69,
              "name": "AcceptEverythingPaymaster",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63,
              "src": "703:25:1"
            },
            "id": 70,
            "nodeType": "InheritanceSpecifier",
            "src": "703:25:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 68,
          "nodeType": "StructuredDocumentation",
          "src": "133:540:1",
          "text": "A paymaster that requires some calculation from the client before accepting a request.\nThis comes to prevent attack by anonymous clients.\n Usage:\n - Create an instance of the HashcashPaymaster, and give it a proper difficulty level.\n - When creating a RelayProvider, make sure to use the createHashcashAsyncApproval() with\n   the same difficulty level.\n The \"difficulty\" level is the number of zero bits at the generated hash.\n a value of 15 requires roughly 32000 iterations and take ~0.5 second on a normal PC"
        },
        "fullyImplemented": true,
        "id": 193,
        "linearizedBaseContracts": [
          193,
          63,
          3530,
          8916,
          9928,
          6897
        ],
        "name": "HashcashPaymaster",
        "nameLocation": "682:17:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              14
            ],
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "818:59:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "322e322e332b6f70656e67736e2e68617368636173682e697061796d6173746572",
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "835:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_21557447c5ba34ed6fff47333b5a6c1cfff5a30d7b2128444dfa2d35ecbb8cf1",
                      "typeString": "literal_string \"2.2.3+opengsn.hashcash.ipaymaster\""
                    },
                    "value": "2.2.3+opengsn.hashcash.ipaymaster"
                  },
                  "functionReturnParameters": 75,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "828:42:1"
                }
              ]
            },
            "functionSelector": "921276ea",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "versionPaymaster",
            "nameLocation": "745:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 72,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "778:8:1"
            },
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:2:1"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "804:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "803:15:1"
            },
            "scope": 193,
            "src": "736:141:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "constant": false,
            "functionSelector": "19cae462",
            "id": 81,
            "mutability": "mutable",
            "name": "difficulty",
            "nameLocation": "896:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 193,
            "src": "883:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 80,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "883:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "944:41:1",
              "statements": [
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "difficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "954:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87,
                      "name": "_difficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "967:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "954:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "954:24:1"
                }
              ]
            },
            "id": 91,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_difficulty",
                  "nameLocation": "931:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "925:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:19:1"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:1"
            },
            "scope": 193,
            "src": "913:72:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              42
            ],
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "1289:715:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 110,
                        "name": "maxPossibleGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1300:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 111,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1316:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "id": 112,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1299:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_calldata_ptr_$",
                      "typeString": "tuple(uint256,bytes calldata)"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 115,
                            "name": "approvalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1396:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1396:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3634",
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1419:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          },
                          "value": "64"
                        },
                        "src": "1396:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "617070726f76616c446174613a20696e76616c6964206c656e67746820666f72206861736820616e64206e6f6e6365",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1423:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccece43ba7d906e175069d5366e36ce83917d08b6ca542e5fc440d6872db4833",
                          "typeString": "literal_string \"approvalData: invalid length for hash and nonce\""
                        },
                        "value": "approvalData: invalid length for hash and nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccece43ba7d906e175069d5366e36ce83917d08b6ca542e5fc440d6872db4833",
                          "typeString": "literal_string \"approvalData: invalid length for hash and nonce\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1388:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "expression": {
                                "id": 123,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1491:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$7840_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "relayData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7839,
                              "src": "1491:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayData_$7833_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayData calldata"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "paymasterData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7830,
                            "src": "1491:36:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1491:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1538:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1491:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d6173746572446174613a20696e76616c6964206c656e677468",
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1541:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0e0f7202abe3d2a01449ea8ef8fc9c6d541b7841e2ddaf2496bb00930e3bc54",
                          "typeString": "literal_string \"paymasterData: invalid length\""
                        },
                        "value": "paymasterData: invalid length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0e0f7202abe3d2a01449ea8ef8fc9c6d541b7841e2ddaf2496bb00930e3bc54",
                          "typeString": "literal_string \"paymasterData: invalid length\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1483:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:90:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:90:1"
                },
                {
                  "assignments": [
                    133,
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "1593:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "1585:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1585:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "hashNonce",
                      "nameLocation": "1607:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "1599:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1599:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 138,
                        "name": "approvalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1631:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1646:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 139,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1646:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1655:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 141,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1655:7:1",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 143,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1645:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(bytes32),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(bytes32),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 136,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "1620:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1620:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
                      "typeString": "tuple(bytes32,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1584:80:1"
                },
                {
                  "assignments": [
                    147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 147,
                      "mutability": "mutable",
                      "name": "calcHash",
                      "nameLocation": "1682:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "1674:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 146,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1674:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 160,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 151,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1731:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$7840_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7836,
                              "src": "1731:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$6754_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "from",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6741,
                            "src": "1731:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "expression": {
                                "id": 154,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1774:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$7840_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7836,
                              "src": "1774:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$6754_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6749,
                            "src": "1774:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 157,
                            "name": "hashNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "1818:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 149,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1703:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1703:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1703:125:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 148,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1693:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:136:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1674:155:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 162,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1847:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 163,
                          "name": "calcHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "1855:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1847:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672068617368",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1865:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0733240d1791a0864b3745b3d17d8130bd78433e802917a21c74061ae3f246",
                          "typeString": "literal_string \"wrong hash\""
                        },
                        "value": "wrong hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0733240d1791a0864b3745b3d17d8130bd78433e802917a21c74061ae3f246",
                          "typeString": "literal_string \"wrong hash\""
                        }
                      ],
                      "id": 161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1839:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1839:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1839:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 171,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "1904:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1896:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 169,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1896:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1896:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1921:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 174,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1913:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 173,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1913:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1913:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    "id": 179,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "323536",
                                      "id": 177,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1928:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_256_by_1",
                                        "typeString": "int_const 256"
                                      },
                                      "value": "256"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 178,
                                      "name": "difficulty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81,
                                      "src": "1934:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "1928:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  }
                                ],
                                "id": 180,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1927:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "1913:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 182,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1912:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1896:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "646966666963756c7479206e6f74206d6574",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1948:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d98ee7cae0fc7637ca75437a5cb8736734d5ac009a5e2d0d911224ad99bcfbed",
                          "typeString": "literal_string \"difficulty not met\""
                        },
                        "value": "difficulty not met"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d98ee7cae0fc7637ca75437a5cb8736734d5ac009a5e2d0d911224ad99bcfbed",
                          "typeString": "literal_string \"difficulty not met\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1888:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1888:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1888:81:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1987:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1991:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 189,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1986:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_bool_$",
                      "typeString": "tuple(literal_string \"\",bool)"
                    }
                  },
                  "functionReturnParameters": 109,
                  "id": 190,
                  "nodeType": "Return",
                  "src": "1979:18:1"
                }
              ]
            },
            "functionSelector": "00be5dd4",
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 104,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 103,
                  "name": "relayHubOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3432,
                  "src": "1219:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1219:12:1"
              }
            ],
            "name": "preRelayedCall",
            "nameLocation": "1000:14:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1194:8:1"
            },
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "relayRequest",
                  "nameLocation": "1055:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1024:43:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RelayRequest_$7840_calldata_ptr",
                    "typeString": "struct GsnTypes.RelayRequest"
                  },
                  "typeName": {
                    "id": 93,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92,
                      "name": "GsnTypes.RelayRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7840,
                      "src": "1024:21:1"
                    },
                    "referencedDeclaration": 7840,
                    "src": "1024:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RelayRequest_$7840_storage_ptr",
                      "typeString": "struct GsnTypes.RelayRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1092:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1077:24:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "approvalData",
                  "nameLocation": "1126:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1111:27:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "maxPossibleGas",
                  "nameLocation": "1156:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1148:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1014:162:1"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1245:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "revertOnRecipientRevert",
                  "nameLocation": "1264:23:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1259:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:44:1"
            },
            "scope": 193,
            "src": "991:1013:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 194,
        "src": "673:1333:1",
        "usedErrors": []
      }
    ],
    "src": "31:1976:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/HashcashPaymaster.sol",
    "exportedSymbols": {
      "AcceptEverythingPaymaster": [
        63
      ],
      "BasePaymaster": [
        3530
      ],
      "Context": [
        9928
      ],
      "GsnEip712Library": [
        7813
      ],
      "GsnTypes": [
        7841
      ],
      "GsnUtils": [
        7888
      ],
      "HashcashPaymaster": [
        193
      ],
      "IForwarder": [
        6824
      ],
      "IPaymaster": [
        6897
      ],
      "IRelayHub": [
        7244
      ],
      "IRelayRecipient": [
        7273
      ],
      "IStakeManager": [
        7437
      ],
      "MinLibBytes": [
        8003
      ],
      "Ownable": [
        8916
      ],
      "SafeMath": [
        10423
      ]
    },
    "id": 194,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 65,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:1"
      },
      {
        "id": 66,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:33:1"
      },
      {
        "absolutePath": "/Users/dror/IdeaProjects/gsn223/packages/paymasters/contracts/AcceptEverythingPaymaster.sol",
        "file": "./AcceptEverythingPaymaster.sol",
        "id": 67,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 194,
        "sourceUnit": 64,
        "src": "90:41:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 69,
              "name": "AcceptEverythingPaymaster",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63,
              "src": "703:25:1"
            },
            "id": 70,
            "nodeType": "InheritanceSpecifier",
            "src": "703:25:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 68,
          "nodeType": "StructuredDocumentation",
          "src": "133:540:1",
          "text": "A paymaster that requires some calculation from the client before accepting a request.\nThis comes to prevent attack by anonymous clients.\n Usage:\n - Create an instance of the HashcashPaymaster, and give it a proper difficulty level.\n - When creating a RelayProvider, make sure to use the createHashcashAsyncApproval() with\n   the same difficulty level.\n The \"difficulty\" level is the number of zero bits at the generated hash.\n a value of 15 requires roughly 32000 iterations and take ~0.5 second on a normal PC"
        },
        "fullyImplemented": true,
        "id": 193,
        "linearizedBaseContracts": [
          193,
          63,
          3530,
          8916,
          9928,
          6897
        ],
        "name": "HashcashPaymaster",
        "nameLocation": "682:17:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              14
            ],
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "818:59:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "322e322e332b6f70656e67736e2e68617368636173682e697061796d6173746572",
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "835:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_21557447c5ba34ed6fff47333b5a6c1cfff5a30d7b2128444dfa2d35ecbb8cf1",
                      "typeString": "literal_string \"2.2.3+opengsn.hashcash.ipaymaster\""
                    },
                    "value": "2.2.3+opengsn.hashcash.ipaymaster"
                  },
                  "functionReturnParameters": 75,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "828:42:1"
                }
              ]
            },
            "functionSelector": "921276ea",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "versionPaymaster",
            "nameLocation": "745:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 72,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "778:8:1"
            },
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:2:1"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "804:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "803:15:1"
            },
            "scope": 193,
            "src": "736:141:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "constant": false,
            "functionSelector": "19cae462",
            "id": 81,
            "mutability": "mutable",
            "name": "difficulty",
            "nameLocation": "896:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 193,
            "src": "883:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 80,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "883:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "944:41:1",
              "statements": [
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "difficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "954:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87,
                      "name": "_difficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "967:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "954:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "954:24:1"
                }
              ]
            },
            "id": 91,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_difficulty",
                  "nameLocation": "931:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "925:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:19:1"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:1"
            },
            "scope": 193,
            "src": "913:72:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              42
            ],
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "1289:715:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 110,
                        "name": "maxPossibleGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1300:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 111,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1316:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "id": 112,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1299:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_calldata_ptr_$",
                      "typeString": "tuple(uint256,bytes calldata)"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 115,
                            "name": "approvalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1396:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1396:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3634",
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1419:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          },
                          "value": "64"
                        },
                        "src": "1396:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "617070726f76616c446174613a20696e76616c6964206c656e67746820666f72206861736820616e64206e6f6e6365",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1423:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccece43ba7d906e175069d5366e36ce83917d08b6ca542e5fc440d6872db4833",
                          "typeString": "literal_string \"approvalData: invalid length for hash and nonce\""
                        },
                        "value": "approvalData: invalid length for hash and nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccece43ba7d906e175069d5366e36ce83917d08b6ca542e5fc440d6872db4833",
                          "typeString": "literal_string \"approvalData: invalid length for hash and nonce\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1388:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "expression": {
                                "id": 123,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1491:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$7840_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "relayData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7839,
                              "src": "1491:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayData_$7833_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayData calldata"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "paymasterData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7830,
                            "src": "1491:36:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1491:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1538:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1491:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d6173746572446174613a20696e76616c6964206c656e677468",
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1541:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0e0f7202abe3d2a01449ea8ef8fc9c6d541b7841e2ddaf2496bb00930e3bc54",
                          "typeString": "literal_string \"paymasterData: invalid length\""
                        },
                        "value": "paymasterData: invalid length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0e0f7202abe3d2a01449ea8ef8fc9c6d541b7841e2ddaf2496bb00930e3bc54",
                          "typeString": "literal_string \"paymasterData: invalid length\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1483:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:90:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:90:1"
                },
                {
                  "assignments": [
                    133,
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "1593:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "1585:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1585:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "hashNonce",
                      "nameLocation": "1607:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "1599:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1599:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 138,
                        "name": "approvalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1631:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1646:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 139,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1646:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1655:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 141,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1655:7:1",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 143,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1645:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(bytes32),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(bytes32),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 136,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "1620:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1620:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
                      "typeString": "tuple(bytes32,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1584:80:1"
                },
                {
                  "assignments": [
                    147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 147,
                      "mutability": "mutable",
                      "name": "calcHash",
                      "nameLocation": "1682:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "1674:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 146,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1674:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 160,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 151,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1731:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$7840_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7836,
                              "src": "1731:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$6754_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "from",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6741,
                            "src": "1731:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "expression": {
                                "id": 154,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1774:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$7840_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7836,
                              "src": "1774:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$6754_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6749,
                            "src": "1774:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 157,
                            "name": "hashNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "1818:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 149,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1703:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1703:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1703:125:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 148,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1693:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:136:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1674:155:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 162,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1847:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 163,
                          "name": "calcHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "1855:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1847:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672068617368",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1865:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0733240d1791a0864b3745b3d17d8130bd78433e802917a21c74061ae3f246",
                          "typeString": "literal_string \"wrong hash\""
                        },
                        "value": "wrong hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0733240d1791a0864b3745b3d17d8130bd78433e802917a21c74061ae3f246",
                          "typeString": "literal_string \"wrong hash\""
                        }
                      ],
                      "id": 161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1839:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1839:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1839:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 171,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "1904:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1896:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 169,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1896:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1896:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1921:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 174,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1913:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 173,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1913:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1913:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    "id": 179,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "323536",
                                      "id": 177,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1928:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_256_by_1",
                                        "typeString": "int_const 256"
                                      },
                                      "value": "256"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 178,
                                      "name": "difficulty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81,
                                      "src": "1934:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "1928:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  }
                                ],
                                "id": 180,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1927:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "1913:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 182,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1912:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1896:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "646966666963756c7479206e6f74206d6574",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1948:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d98ee7cae0fc7637ca75437a5cb8736734d5ac009a5e2d0d911224ad99bcfbed",
                          "typeString": "literal_string \"difficulty not met\""
                        },
                        "value": "difficulty not met"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d98ee7cae0fc7637ca75437a5cb8736734d5ac009a5e2d0d911224ad99bcfbed",
                          "typeString": "literal_string \"difficulty not met\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1888:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1888:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1888:81:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1987:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1991:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 189,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1986:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_bool_$",
                      "typeString": "tuple(literal_string \"\",bool)"
                    }
                  },
                  "functionReturnParameters": 109,
                  "id": 190,
                  "nodeType": "Return",
                  "src": "1979:18:1"
                }
              ]
            },
            "functionSelector": "00be5dd4",
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 104,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 103,
                  "name": "relayHubOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3432,
                  "src": "1219:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1219:12:1"
              }
            ],
            "name": "preRelayedCall",
            "nameLocation": "1000:14:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1194:8:1"
            },
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "relayRequest",
                  "nameLocation": "1055:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1024:43:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RelayRequest_$7840_calldata_ptr",
                    "typeString": "struct GsnTypes.RelayRequest"
                  },
                  "typeName": {
                    "id": 93,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92,
                      "name": "GsnTypes.RelayRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7840,
                      "src": "1024:21:1"
                    },
                    "referencedDeclaration": 7840,
                    "src": "1024:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RelayRequest_$7840_storage_ptr",
                      "typeString": "struct GsnTypes.RelayRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1092:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1077:24:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "approvalData",
                  "nameLocation": "1126:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1111:27:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "maxPossibleGas",
                  "nameLocation": "1156:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1148:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1014:162:1"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1245:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "revertOnRecipientRevert",
                  "nameLocation": "1264:23:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1259:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:44:1"
            },
            "scope": 193,
            "src": "991:1013:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 194,
        "src": "673:1333:1",
        "usedErrors": []
      }
    ],
    "src": "31:1976:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-10-19T22:54:44.133Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
        "params": {
          "context": "- the call context, as returned by the preRelayedCall",
          "gasUseWithoutPost": "- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.",
          "relayData": "- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.",
          "success": "- true if the relayed call succeeded, false if it reverted"
        }
      },
      "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
        "params": {
          "approvalData": "- extra dapp-specific data (e.g. signature from trusted party)",
          "maxPossibleGas": "- based on values returned from {@link getGasAndDataLimits},         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.         In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"  return:      a context to be passed to postRelayedCall      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).",
          "relayRequest": "- the full relay request structure",
          "signature": "- user's EIP712-compatible signature of the {@link relayRequest}.              Note that in most cases the paymaster shouldn't try use it at all. It is always checked              by the forwarder immediately after preRelayedCall returns."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getGasAndDataLimits()": {
        "notice": "Return the Gas Limits and msg.data max size constants used by the Paymaster."
      },
      "getHubAddr()": {
        "notice": "return the relayHub of this contract."
      },
      "getRelayHubDeposit()": {
        "notice": "check current deposit on relay hub."
      },
      "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
        "notice": "This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state."
      },
      "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
        "notice": "Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call. MUST be protected with relayHubOnly() in case it modifies state. The Paymaster rejects by the following \"revert\" operations  - preRelayedCall() method reverts  - the forwarder reverts because of nonce or signature error  - the paymaster returned \"rejectOnRecipientRevert\", and the recipient contract reverted. In any of the above cases, all paymaster calls (and recipient call) are reverted. In any other case, the paymaster agrees to pay for the gas cost of the transaction (note  that this includes also postRelayedCall revert) The rejectOnRecipientRevert flag means the Paymaster \"delegate\" the rejection to the recipient  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,  otherwise the TX is paid by the Paymaster."
      },
      "withdrawRelayHubDepositTo(uint256,address)": {
        "notice": "withdraw deposit from relayHub"
      }
    },
    "notice": "A paymaster that requires some calculation from the client before accepting a request. This comes to prevent attack by anonymous clients. Usage: - Create an instance of the HashcashPaymaster, and give it a proper difficulty level. - When creating a RelayProvider, make sure to use the createHashcashAsyncApproval() with   the same difficulty level. The \"difficulty\" level is the number of zero bits at the generated hash. a value of 15 requires roughly 32000 iterations and take ~0.5 second on a normal PC",
    "version": 1
  }
}