{
  "contractName": "HashcashPaymaster",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_difficulty",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CALLDATA_SIZE_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FORWARDER_HUB_OVERHEAD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAYMASTER_ACCEPTANCE_BUDGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POST_RELAYED_CALL_GAS_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRE_RELAYED_CALL_GAS_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "validUntil",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IForwarder.ForwardRequest",
              "name": "request",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "gasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pctRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "clientId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GsnTypes.RelayData",
              "name": "relayData",
              "type": "tuple"
            }
          ],
          "internalType": "struct GsnTypes.RelayRequest",
          "name": "relayRequest",
          "type": "tuple"
        }
      ],
      "name": "_verifyForwarder",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "difficulty",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGasAndDataLimits",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "acceptanceBudget",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preRelayedCallGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postRelayedCallGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "calldataSizeLimit",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPaymaster.GasAndDataLimits",
          "name": "limits",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHubAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRelayHubDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "gasUseWithoutPost",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pctRelayFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseRelayFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "relayWorker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "paymaster",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "paymasterData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "clientId",
              "type": "uint256"
            }
          ],
          "internalType": "struct GsnTypes.RelayData",
          "name": "relayData",
          "type": "tuple"
        }
      ],
      "name": "postRelayedCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRelayHub",
          "name": "hub",
          "type": "address"
        }
      ],
      "name": "setRelayHub",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IForwarder",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "contract IForwarder",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "withdrawRelayHubDepositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "versionPaymaster",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "validUntil",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IForwarder.ForwardRequest",
              "name": "request",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "gasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pctRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "clientId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GsnTypes.RelayData",
              "name": "relayData",
              "type": "tuple"
            }
          ],
          "internalType": "struct GsnTypes.RelayRequest",
          "name": "relayRequest",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "approvalData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxPossibleGas",
          "type": "uint256"
        }
      ],
      "name": "preRelayedCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "revertOnRecipientRevert",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_difficulty\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLDATA_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORWARDER_HUB_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_ACCEPTANCE_BUDGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POST_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRE_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"}],\"name\":\"_verifyForwarder\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"difficulty\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasAndDataLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHubDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"revertOnRecipientRevert\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRelayHub\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setRelayHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawRelayHubDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"context\":\"- the call context, as returned by the preRelayedCall\",\"gasUseWithoutPost\":\"- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.\",\"relayData\":\"- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.\",\"success\":\"- true if the relayed call succeeded, false if it reverted\"}},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"params\":{\"approvalData\":\"- extra dapp-specific data (e.g. signature from trusted party)\",\"maxPossibleGas\":\"- based on values returned from {@link getGasAndDataLimits},         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.         In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"  return:      a context to be passed to postRelayedCall      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).\",\"relayRequest\":\"- the full relay request structure\",\"signature\":\"- user's EIP712-compatible signature of the {@link relayRequest}.              Note that in most cases the paymaster shouldn't try use it at all. It is always checked              by the forwarder immediately after preRelayedCall returns.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGasAndDataLimits()\":{\"notice\":\"Return the Gas Limits and msg.data max size constants used by the Paymaster.\"},\"getHubAddr()\":{\"notice\":\"return the relayHub of this contract.\"},\"getRelayHubDeposit()\":{\"notice\":\"check current deposit on relay hub.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state.\"},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call. MUST be protected with relayHubOnly() in case it modifies state. The Paymaster rejects by the following \\\"revert\\\" operations  - preRelayedCall() method reverts  - the forwarder reverts because of nonce or signature error  - the paymaster returned \\\"rejectOnRecipientRevert\\\", and the recipient contract reverted. In any of the above cases, all paymaster calls (and recipient call) are reverted. In any other case, the paymaster agrees to pay for the gas cost of the transaction (note  that this includes also postRelayedCall revert) The rejectOnRecipientRevert flag means the Paymaster \\\"delegate\\\" the rejection to the recipient  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,  otherwise the TX is paid by the Paymaster.\"},\"withdrawRelayHubDepositTo(uint256,address)\":{\"notice\":\"withdraw deposit from relayHub\"}},\"notice\":\"A paymaster that requires some calculation from the client before accepting a request. This comes to prevent attack by anonymous clients. Usage: - Create an instance of the HashcashPaymaster, and give it a proper difficulty level. - When creating a RelayProvider, make sure to use the createHashcashAsyncApproval() with   the same difficulty level. The \\\"difficulty\\\" level is the number of zero bits at the generated hash. a value of 15 requires roughly 32000 iterations and take ~0.5 second on a normal PC\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/HashcashPaymaster.sol\":\"HashcashPaymaster\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/AcceptEverythingPaymaster.sol\":{\"keccak256\":\"0x4652f951248160bb6e5dc87311422202a683f984e6ac6fcbaaa718d458efe492\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a95bab423ce7a71c212a5abafa0eefe962ae630828f7b8768df7014e21da41a\",\"dweb:/ipfs/Qmf4giJXUbz1Z5GeLFbPEtBGM9FPuyNztTS4Nq3VBDpvAx\"]},\"/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/HashcashPaymaster.sol\":{\"keccak256\":\"0xa1146c919fbed8567d97c106a8327cfa28413ba7908ad087a4386183a36fdd82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18a5632d65576581226d2d5c8afb41289896aa4047cd89b0ef96cba8f7cb8978\",\"dweb:/ipfs/QmcKSpaztSb94hGGqEaPkLUKXiK52YoZKouGZzvADgwcot\"]},\"@opengsn/contracts/src/BasePaymaster.sol\":{\"keccak256\":\"0xd914685ceab88a06d4a1c94d7dd11167bec794106b4c25554bce6491d0df6ec8\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7a4881660c732e5f08254d3cc8c76480e5a878c15cb28dc96e8132aaa0a01b3a\",\"dweb:/ipfs/QmXeRywWUcKxpu1y465Vf5LxXdk8F1VNveCjdSFN4CsgFv\"]},\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e42577c586894c9fc9e11a3281c0e2d4183121714fd1101380b6b2b66c144ba3\",\"dweb:/ipfs/QmPQphvUxhvnYGXtNRbU7WcmbEP2N7mMDgC5R8R9AqC9xG\"]},\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x4cf49c343b72cd8dac257e8b49009347dc2465d5d191c6d1f9455e74f331f5d9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9d851b3712a9931da139d1bab1f02fccafc313bcc754f2d88831699edf9bea20\",\"dweb:/ipfs/QmPxqoiiLiwFTVw6JZLet2Q5BtL2wDcbtF1UhZ6J7oryhT\"]},\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":{\"keccak256\":\"0x3497133a7147174c498d2feeb2569b973396a8c2c220b5876fd9eb3b59841c85\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://32bb285a0f675310ee87647d00717e2dee9dbc7179e5455a3e1d7a2e121b6bf7\",\"dweb:/ipfs/QmZABWeS7pi5KfhoDUKyZHEvwqiAL4sYvjr3UcWZ7SvqCX\"]},\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x6243d3a925653ed0bde57e9fae7fb87f12c58a2376b27ae23b53502322532e00\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://928801ac8ceac377f326cd48de8e0056db9a7f8767b60efee5dfca035f326702\",\"dweb:/ipfs/QmYFkKXZcSVmmLNpDF1hvsLwAnhjmVSZuvEueaJgp1aVSg\"]},\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x86fcc2f265ba3c2f987fe47823121b4df3ddc86b834d89a67aca585d0721747f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://3712113b0f9d49cc3e9ef7096de90aabc719c1d40bb2796930e1f891325fcc3c\",\"dweb:/ipfs/QmZPbxY2idt9DuXHXGxK3GFf1bXHj1CDB1WBAhtenStrjj\"]},\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":{\"keccak256\":\"0xeabda17c0116022fba48a5be922c093fd721fc21e400a8158a2d2c9ae1c0ac4f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d2632a6bfa1675269a04a28a26a3bde247f537ecc7a671fd6b1bb0f34a11ec4d\",\"dweb:/ipfs/QmaqwWq3RtvHFC55DmpwWsxwibKCroG6PvMrrsag8skMyY\"]},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"keccak256\":\"0x813b12755ca7e69d3f269b5ab801d36d208274c26ea2764a416c3033e61bc130\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f3b0de24eae014d96adac3946984f3f3b769b3d74c3b46ccdb6b93d516b6916d\",\"dweb:/ipfs/QmRVmrAzeYGve3sQ2qksDknA5MVmmJpgZiRZ7VWCQCehNz\"]},\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"keccak256\":\"0xeb0c5992c7c2648e414a14605a72e773e09c554036e9c9cd9aca34e292b195d7\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://5d35afd557b1b9a02ad97bfcb5ff06b7cebde782d10c63258fd724413fee0419\",\"dweb:/ipfs/QmcDVREDjsxkeaDif7nM9ammFfGcgEQR684jEsayk2Gkm1\"]},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"keccak256\":\"0x73c837126ff5369c63b7a71828b6d5c9e5bc8a6477f8d4fc97f8e28142380cd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4a7846ef4c46fcd3fcc36dc4d49f70470391da1da83102eb48ea6428fd5cdee\",\"dweb:/ipfs/QmdvZvjhTAYAzKzjeNrWM9sToiPuo6XaQs7AeKUG9aKrRy\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xc005d5d0c00724c37876c56a59ccde49fc681edce11e67a8a7ff53a36a042f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc2cd1d2877d2711b9f4c0375324e1528cb0127820837a163b14760b3a1b3bb\",\"dweb:/ipfs/QmNde8JwkcNsxhjR43iNrou6wMvJknN1CeXjB4cDsKHzHV\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161131c38038061131c83398101604081905261002f916100aa565b60006100396100a6565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506002805460ff909216600160a01b0260ff60a01b199092169190911790556100d2565b3390565b6000602082840312156100bb578081fd5b815160ff811681146100cb578182fd5b9392505050565b61123b806100e16000396000f3fe6080604052600436106101225760003560e01c80638da5cb5b116100a0578063bbdaa3c911610064578063bbdaa3c91461038f578063da742228146103a4578063df463a66146103c4578063f2fde38b146103d9578063f9c002f7146103f9576101be565b80638da5cb5b14610301578063921276ea14610316578063a5dcd07b14610338578063b039a88f14610358578063b90b41cf1461037a576101be565b8063715018a6116100e7578063715018a61461027557806374e861d61461028a57806376fa01c3146102ac5780637bb05264146102cc5780637da0a877146102ec576101be565b8062be5dd4146101c357806319cae462146101fa5780632afe31c11461021c5780632d14c4b71461023e5780635c5e3db114610260576101be565b366101be576001546001600160a01b03166101585760405162461bcd60e51b815260040161014f90610f8b565b60405180910390fd5b60015460405163aa67c91960e01b81526001600160a01b039091169063aa67c91990349061018a903090600401610e8d565b6000604051808303818588803b1580156101a357600080fd5b505af11580156101b7573d6000803e3d6000fd5b5050505050005b600080fd5b3480156101cf57600080fd5b506101e36101de366004610d65565b61040e565b6040516101f1929190610ec2565b60405180910390f35b34801561020657600080fd5b5061020f610549565b6040516101f19190611113565b34801561022857600080fd5b50610231610559565b6040516101f191906110f3565b34801561024a57600080fd5b5061025e610259366004610e16565b6105df565b005b34801561026c57600080fd5b506102316106a7565b34801561028157600080fd5b5061025e6106ad565b34801561029657600080fd5b5061029f610759565b6040516101f19190610e8d565b3480156102b857600080fd5b5061025e6102c7366004610c9e565b610768565b3480156102d857600080fd5b5061025e6102e7366004610c3e565b61076f565b3480156102f857600080fd5b5061029f6107f3565b34801561030d57600080fd5b5061029f610802565b34801561032257600080fd5b5061032b610811565b6040516101f19190610ee6565b34801561034457600080fd5b5061025e610353366004610d2a565b610831565b34801561036457600080fd5b5061036d610888565b6040516101f191906110c8565b34801561038657600080fd5b506102316108c0565b34801561039b57600080fd5b506102316108c6565b3480156103b057600080fd5b5061025e6103bf366004610c3e565b6108cd565b3480156103d057600080fd5b50610231610951565b3480156103e557600080fd5b5061025e6103f4366004610c3e565b610958565b34801561040557600080fd5b50610231610a5a565b6060600061041a610759565b6001600160a01b0316336001600160a01b03161461044a5760405162461bcd60e51b815260040161014f90611065565b6040841461046a5760405162461bcd60e51b815260040161014f90610ff9565b60008061047986880188610c7d565b9092509050600061048a8b80611121565b610498906020810190610c3e565b6104a28c80611121565b60800135836040516020016104b993929190610ea1565b6040516020818303038152906040528051906020012090508083146104f05760405162461bcd60e51b815260040161014f90610f67565b6002546001600160a01b90910460ff166101000361ffff161b83106105275760405162461bcd60e51b815260040161014f9061109c565b505060408051602081019091526000808252909a909950975050505050505050565b600254600160a01b900460ff1681565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a082319061058a903090600401610e8d565b60206040518083038186803b1580156105a257600080fd5b505afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da9190610dfe565b905090565b6105e7610a61565b6001600160a01b03166105f8610802565b6001600160a01b031614610641576040805162461bcd60e51b815260206004820181905260248201526000805160206111e6833981519152604482015290519081900360640190fd5b600154604051627b8a6760e11b81526001600160a01b039091169062f714ce9061067190859085906004016110fc565b600060405180830381600087803b15801561068b57600080fd5b505af115801561069f573d6000803e3d6000fd5b505050505050565b61290481565b6106b5610a61565b6001600160a01b03166106c6610802565b6001600160a01b03161461070f576040805162461bcd60e51b815260206004820181905260248201526000805160206111e6833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031690565b5050505050565b610777610a61565b6001600160a01b0316610788610802565b6001600160a01b0316146107d1576040805162461bcd60e51b815260206004820181905260248201526000805160206111e6833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6000546001600160a01b031690565b60606040518060600160405280602181526020016111c560219139905090565b61083e6020820182611136565b61084f9060c081019060a001610c3e565b6002546001600160a01b0390811691161461087c5760405162461bcd60e51b815260040161014f90610fc2565b61088581610a65565b50565b610890610bb8565b5060408051608081018252620249f08152620186a060208201526201adb091810191909152612904606082015290565b61c35081565b6201adb081565b6108d5610a61565b6001600160a01b03166108e6610802565b6001600160a01b03161461092f576040805162461bcd60e51b815260206004820181905260248201526000805160206111e6833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b620249f081565b610960610a61565b6001600160a01b0316610971610802565b6001600160a01b0316146109ba576040805162461bcd60e51b815260206004820181905260248201526000805160206111e6833981519152604482015290519081900360640190fd5b6001600160a01b0381166109ff5760405162461bcd60e51b815260040180806020018281038252602681526020018061119f6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b620186a081565b3390565b600080610a728380611121565b610a83906040810190602001610c3e565b6001600160a01b031663572b6c0560e01b610aa16020860186611136565b610ab29060c081019060a001610c3e565b604051602401610ac29190610e8d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610b009190610e71565b600060405180830381855afa9150503d8060008114610b3b576040519150601f19603f3d011682016040523d82523d6000602084013e610b40565b606091505b509150915081610b625760405162461bcd60e51b815260040161014f90610f30565b8051602014610b835760405162461bcd60e51b815260040161014f90611030565b80806020019051810190610b979190610c61565b610bb35760405162461bcd60e51b815260040161014f90610ef9565b505050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60008083601f840112610bf1578182fd5b50813567ffffffffffffffff811115610c08578182fd5b602083019150836020828501011115610c2057600080fd5b9250929050565b600060408284031215610c38578081fd5b50919050565b600060208284031215610c4f578081fd5b8135610c5a8161117b565b9392505050565b600060208284031215610c72578081fd5b8151610c5a81611190565b60008060408385031215610c8f578081fd5b50508035926020909101359150565b600080600080600060808688031215610cb5578081fd5b853567ffffffffffffffff80821115610ccc578283fd5b610cd889838a01610be0565b909750955060208801359150610ced82611190565b9093506040870135925060608701359080821115610d09578283fd5b5086016101008189031215610d1c578182fd5b809150509295509295909350565b600060208284031215610d3b578081fd5b813567ffffffffffffffff811115610d51578182fd5b610d5d84828501610c27565b949350505050565b60008060008060008060808789031215610d7d578081fd5b863567ffffffffffffffff80821115610d94578283fd5b610da08a838b01610c27565b97506020890135915080821115610db5578283fd5b610dc18a838b01610be0565b90975095506040890135915080821115610dd9578283fd5b50610de689828a01610be0565b979a9699509497949695606090950135949350505050565b600060208284031215610e0f578081fd5b5051919050565b60008060408385031215610e28578182fd5b823591506020830135610e3a8161117b565b809150509250929050565b60008151808452610e5d81602086016020860161114b565b601f01601f19169290920160200192915050565b60008251610e8381846020870161114b565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039390931683526020830191909152604082015260600190565b600060408252610ed56040830185610e45565b905082151560208301529392505050565b600060208252610c5a6020830184610e45565b6020808252601f908201527f696e76616c696420666f7277617264657220666f7220726563697069656e7400604082015260600190565b6020808252601c908201527f697354727573746564466f727761726465723a20726576657274656400000000604082015260600190565b6020808252600a90820152690eee4dedcce40d0c2e6d60b31b604082015260600190565b60208082526019908201527f72656c6179206875622061646472657373206e6f742073657400000000000000604082015260600190565b60208082526018908201527f466f72776172646572206973206e6f7420747275737465640000000000000000604082015260600190565b60208082526017908201527f6e6f206861736820696e20617070726f76616c44617461000000000000000000604082015260600190565b6020808252818101527f697354727573746564466f727761726465723a2062616420726573706f6e7365604082015260600190565b6020808252601e908201527f63616e206f6e6c792062652063616c6c65642062792052656c61794875620000604082015260600190565b602080825260129082015271191a59999a58dd5b1d1e481b9bdd081b595d60721b604082015260600190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60ff91909116815260200190565b6000823560de19833603018112610e83578182fd5b6000823560fe19833603018112610e83578182fd5b60005b8381101561116657818101518382015260200161114e565b83811115611175576000848401525b50505050565b6001600160a01b038116811461088557600080fd5b801515811461088557600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373322e322e302b6f70656e67736e2e68617368636173682e697061796d61737465724f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220ebd88727aae4ee544962b3c365f598dfda8a6bb92746a6dce3fe5daece10c90164736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106101225760003560e01c80638da5cb5b116100a0578063bbdaa3c911610064578063bbdaa3c91461038f578063da742228146103a4578063df463a66146103c4578063f2fde38b146103d9578063f9c002f7146103f9576101be565b80638da5cb5b14610301578063921276ea14610316578063a5dcd07b14610338578063b039a88f14610358578063b90b41cf1461037a576101be565b8063715018a6116100e7578063715018a61461027557806374e861d61461028a57806376fa01c3146102ac5780637bb05264146102cc5780637da0a877146102ec576101be565b8062be5dd4146101c357806319cae462146101fa5780632afe31c11461021c5780632d14c4b71461023e5780635c5e3db114610260576101be565b366101be576001546001600160a01b03166101585760405162461bcd60e51b815260040161014f90610f8b565b60405180910390fd5b60015460405163aa67c91960e01b81526001600160a01b039091169063aa67c91990349061018a903090600401610e8d565b6000604051808303818588803b1580156101a357600080fd5b505af11580156101b7573d6000803e3d6000fd5b5050505050005b600080fd5b3480156101cf57600080fd5b506101e36101de366004610d65565b61040e565b6040516101f1929190610ec2565b60405180910390f35b34801561020657600080fd5b5061020f610549565b6040516101f19190611113565b34801561022857600080fd5b50610231610559565b6040516101f191906110f3565b34801561024a57600080fd5b5061025e610259366004610e16565b6105df565b005b34801561026c57600080fd5b506102316106a7565b34801561028157600080fd5b5061025e6106ad565b34801561029657600080fd5b5061029f610759565b6040516101f19190610e8d565b3480156102b857600080fd5b5061025e6102c7366004610c9e565b610768565b3480156102d857600080fd5b5061025e6102e7366004610c3e565b61076f565b3480156102f857600080fd5b5061029f6107f3565b34801561030d57600080fd5b5061029f610802565b34801561032257600080fd5b5061032b610811565b6040516101f19190610ee6565b34801561034457600080fd5b5061025e610353366004610d2a565b610831565b34801561036457600080fd5b5061036d610888565b6040516101f191906110c8565b34801561038657600080fd5b506102316108c0565b34801561039b57600080fd5b506102316108c6565b3480156103b057600080fd5b5061025e6103bf366004610c3e565b6108cd565b3480156103d057600080fd5b50610231610951565b3480156103e557600080fd5b5061025e6103f4366004610c3e565b610958565b34801561040557600080fd5b50610231610a5a565b6060600061041a610759565b6001600160a01b0316336001600160a01b03161461044a5760405162461bcd60e51b815260040161014f90611065565b6040841461046a5760405162461bcd60e51b815260040161014f90610ff9565b60008061047986880188610c7d565b9092509050600061048a8b80611121565b610498906020810190610c3e565b6104a28c80611121565b60800135836040516020016104b993929190610ea1565b6040516020818303038152906040528051906020012090508083146104f05760405162461bcd60e51b815260040161014f90610f67565b6002546001600160a01b90910460ff166101000361ffff161b83106105275760405162461bcd60e51b815260040161014f9061109c565b505060408051602081019091526000808252909a909950975050505050505050565b600254600160a01b900460ff1681565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a082319061058a903090600401610e8d565b60206040518083038186803b1580156105a257600080fd5b505afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da9190610dfe565b905090565b6105e7610a61565b6001600160a01b03166105f8610802565b6001600160a01b031614610641576040805162461bcd60e51b815260206004820181905260248201526000805160206111e6833981519152604482015290519081900360640190fd5b600154604051627b8a6760e11b81526001600160a01b039091169062f714ce9061067190859085906004016110fc565b600060405180830381600087803b15801561068b57600080fd5b505af115801561069f573d6000803e3d6000fd5b505050505050565b61290481565b6106b5610a61565b6001600160a01b03166106c6610802565b6001600160a01b03161461070f576040805162461bcd60e51b815260206004820181905260248201526000805160206111e6833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031690565b5050505050565b610777610a61565b6001600160a01b0316610788610802565b6001600160a01b0316146107d1576040805162461bcd60e51b815260206004820181905260248201526000805160206111e6833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6000546001600160a01b031690565b60606040518060600160405280602181526020016111c560219139905090565b61083e6020820182611136565b61084f9060c081019060a001610c3e565b6002546001600160a01b0390811691161461087c5760405162461bcd60e51b815260040161014f90610fc2565b61088581610a65565b50565b610890610bb8565b5060408051608081018252620249f08152620186a060208201526201adb091810191909152612904606082015290565b61c35081565b6201adb081565b6108d5610a61565b6001600160a01b03166108e6610802565b6001600160a01b03161461092f576040805162461bcd60e51b815260206004820181905260248201526000805160206111e6833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b620249f081565b610960610a61565b6001600160a01b0316610971610802565b6001600160a01b0316146109ba576040805162461bcd60e51b815260206004820181905260248201526000805160206111e6833981519152604482015290519081900360640190fd5b6001600160a01b0381166109ff5760405162461bcd60e51b815260040180806020018281038252602681526020018061119f6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b620186a081565b3390565b600080610a728380611121565b610a83906040810190602001610c3e565b6001600160a01b031663572b6c0560e01b610aa16020860186611136565b610ab29060c081019060a001610c3e565b604051602401610ac29190610e8d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610b009190610e71565b600060405180830381855afa9150503d8060008114610b3b576040519150601f19603f3d011682016040523d82523d6000602084013e610b40565b606091505b509150915081610b625760405162461bcd60e51b815260040161014f90610f30565b8051602014610b835760405162461bcd60e51b815260040161014f90611030565b80806020019051810190610b979190610c61565b610bb35760405162461bcd60e51b815260040161014f90610ef9565b505050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60008083601f840112610bf1578182fd5b50813567ffffffffffffffff811115610c08578182fd5b602083019150836020828501011115610c2057600080fd5b9250929050565b600060408284031215610c38578081fd5b50919050565b600060208284031215610c4f578081fd5b8135610c5a8161117b565b9392505050565b600060208284031215610c72578081fd5b8151610c5a81611190565b60008060408385031215610c8f578081fd5b50508035926020909101359150565b600080600080600060808688031215610cb5578081fd5b853567ffffffffffffffff80821115610ccc578283fd5b610cd889838a01610be0565b909750955060208801359150610ced82611190565b9093506040870135925060608701359080821115610d09578283fd5b5086016101008189031215610d1c578182fd5b809150509295509295909350565b600060208284031215610d3b578081fd5b813567ffffffffffffffff811115610d51578182fd5b610d5d84828501610c27565b949350505050565b60008060008060008060808789031215610d7d578081fd5b863567ffffffffffffffff80821115610d94578283fd5b610da08a838b01610c27565b97506020890135915080821115610db5578283fd5b610dc18a838b01610be0565b90975095506040890135915080821115610dd9578283fd5b50610de689828a01610be0565b979a9699509497949695606090950135949350505050565b600060208284031215610e0f578081fd5b5051919050565b60008060408385031215610e28578182fd5b823591506020830135610e3a8161117b565b809150509250929050565b60008151808452610e5d81602086016020860161114b565b601f01601f19169290920160200192915050565b60008251610e8381846020870161114b565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039390931683526020830191909152604082015260600190565b600060408252610ed56040830185610e45565b905082151560208301529392505050565b600060208252610c5a6020830184610e45565b6020808252601f908201527f696e76616c696420666f7277617264657220666f7220726563697069656e7400604082015260600190565b6020808252601c908201527f697354727573746564466f727761726465723a20726576657274656400000000604082015260600190565b6020808252600a90820152690eee4dedcce40d0c2e6d60b31b604082015260600190565b60208082526019908201527f72656c6179206875622061646472657373206e6f742073657400000000000000604082015260600190565b60208082526018908201527f466f72776172646572206973206e6f7420747275737465640000000000000000604082015260600190565b60208082526017908201527f6e6f206861736820696e20617070726f76616c44617461000000000000000000604082015260600190565b6020808252818101527f697354727573746564466f727761726465723a2062616420726573706f6e7365604082015260600190565b6020808252601e908201527f63616e206f6e6c792062652063616c6c65642062792052656c61794875620000604082015260600190565b602080825260129082015271191a59999a58dd5b1d1e481b9bdd081b595d60721b604082015260600190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60ff91909116815260200190565b6000823560de19833603018112610e83578182fd5b6000823560fe19833603018112610e83578182fd5b60005b8381101561116657818101518382015260200161114e565b83811115611175576000848401525b50505050565b6001600160a01b038116811461088557600080fd5b801515811461088557600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373322e322e302b6f70656e67736e2e68617368636173682e697061796d61737465724f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220ebd88727aae4ee544962b3c365f598dfda8a6bb92746a6dce3fe5daece10c90164736f6c63430007060033",
  "immutableReferences": {},
  "sourceMap": "673:1186:1:-:0;;;913:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;888:17:36;908:12;:10;:12::i;:::-;930:6;:18;;-1:-1:-1;;;;;;930:18:36;-1:-1:-1;;;;;930:18:36;;;;;;;963:43;;930:18;;-1:-1:-1;930:18:36;963:43;;930:6;;963:43;-1:-1:-1;954:10:1;:24;;;;;;-1:-1:-1;;;954:24:1;-1:-1:-1;;;;954:24:1;;;;;;;;;673:1186;;598:104:43;685:10;598:104;:::o;14:293:44:-;;135:2;123:9;114:7;110:23;106:32;103:2;;;156:6;148;141:22;103:2;193:9;187:16;243:4;236:5;232:16;225:5;222:27;212:2;;268:6;260;253:22;212:2;296:5;93:214;-1:-1:-1;;;93:214:44:o;:::-;673:1186:1;;;;;;",
  "deployedSourceMap": "673:1186:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2907:8:18;;-1:-1:-1;;;;;2907:8:18;2891:69;;;;-1:-1:-1;;;2891:69:18;;;;;;;:::i;:::-;;;;;;;;;2970:8;;:51;;-1:-1:-1;;;2970:51:18;;-1:-1:-1;;;;;2970:8:18;;;;:19;;2996:9;;2970:51;;3015:4;;2970:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:1186:1;;;;;991:866;;;;;;;;;;-1:-1:-1;991:866:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;883:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2524:139:18:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3073:::-;;;;;;;;;;-1:-1:-1;3073:139:18;;;;;:::i;:::-;;:::i;:::-;;1158:51;;;;;;;;;;;;;:::i;1721:145:36:-;;;;;;;;;;;;;:::i;613:102:18:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;932:258:0:-;;;;;;;;;;-1:-1:-1;932:258:0;;;;;:::i;:::-;;:::i;2271:84:18:-;;;;;;;;;;-1:-1:-1;2271:84:18;;;;;:::i;:::-;;:::i;563:43::-;;;;;;;;;;;;;:::i;1089:85:36:-;;;;;;;;;;;;;:::i;736:141:1:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1743:273:18:-;;;;;;;;;;-1:-1:-1;1743:273:18;;;;;:::i;:::-;;:::i;1216:362::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;786:54::-;;;;;;;;;;;;;:::i;981:60::-;;;;;;;;;;;;;:::i;2361:113::-;;;;;;;;;;-1:-1:-1;2361:113:18;;;;;:::i;:::-;;:::i;1047:105::-;;;;;;;;;;;;;:::i;2015:240:36:-;;;;;;;;;;-1:-1:-1;2015:240:36;;;;;:::i;:::-;;:::i;916:59:18:-;;;;;;;;;;;;;:::i;991:866:1:-;1245:12;1259:28;2200:12:18;:10;:12::i;:::-;-1:-1:-1;;;;;2186:26:18;:10;-1:-1:-1;;;;;2186:26:18;;2178:69;;;;-1:-1:-1;;;2178:69:18;;;;;;;:::i;:::-;1397:2:1::1;1374:25:::0;::::1;1366:61;;;;-1:-1:-1::0;;;1366:61:1::1;;;;;;;:::i;:::-;1438:12;::::0;1473:44:::1;::::0;;::::1;1484:12:::0;1473:44:::1;:::i;:::-;1437:80:::0;;-1:-1:-1;1437:80:1;-1:-1:-1;1527:16:1::1;1584:20;:12:::0;;:20:::1;:::i;:::-;:25;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;1627:20;:12:::0;;:20:::1;:::i;:::-;:26;;;1671:9;1556:125;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1546:136;;;;;;1527:155;;1708:8;1700:4;:16;1692:39;;;;-1:-1:-1::0;;;1692:39:1::1;;;;;;;:::i;:::-;1787:10;::::0;1774:1:::1;-1:-1:-1::0;;;1787:10:1;;::::1;;;;1781:16;1766:32;;;1749:50:::0;::::1;1741:81;;;;-1:-1:-1::0;;;1741:81:1::1;;;;;;;:::i;:::-;-1:-1:-1::0;;1832:18:1::1;::::0;;::::1;::::0;::::1;::::0;;;1844:5:::1;1832:18:::0;;;;;1844:5;;-1:-1:-1;991:866:1;-1:-1:-1;;;;;;;;991:866:1:o;883:23::-;;;-1:-1:-1;;;883:23:1;;;;;:::o;2524:139:18:-;2623:8;;:33;;-1:-1:-1;;;2623:33:18;;2600:4;;-1:-1:-1;;;;;2623:8:18;;:18;;:33;;2650:4;;2623:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2616:40;;2524:139;:::o;3073:::-;1312:12:36;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;3172:8:18::1;::::0;:33:::1;::::0;-1:-1:-1;;;3172:33:18;;-1:-1:-1;;;;;3172:8:18;;::::1;::::0;:17:::1;::::0;:33:::1;::::0;3190:6;;3198;;3172:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3073:139:::0;;:::o;1158:51::-;1204:5;1158:51;:::o;1721:145:36:-;1312:12;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;1827:1:::1;1811:6:::0;;1790:40:::1;::::0;-1:-1:-1;;;;;1811:6:36;;::::1;::::0;1790:40:::1;::::0;1827:1;;1790:40:::1;1857:1;1840:19:::0;;-1:-1:-1;;;;;;1840:19:36::1;::::0;;1721:145::o;613:102:18:-;699:8;;-1:-1:-1;;;;;699:8:18;613:102;:::o;932:258:0:-;;;;;;:::o;2271:84:18:-;1312:12:36;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;2334:8:18::1;:14:::0;;-1:-1:-1;;;;;;2334:14:18::1;-1:-1:-1::0;;;;;2334:14:18;;;::::1;::::0;;;::::1;::::0;;2271:84::o;563:43::-;;;-1:-1:-1;;;;;563:43:18;;:::o;1089:85:36:-;1135:7;1161:6;-1:-1:-1;;;;;1161:6:36;1089:85;:::o;736:141:1:-;804:13;828:42;;;;;;;;;;;;;;;;;;;736:141;:::o;1743:273:18:-;1885:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;1864:16;;-1:-1:-1;;;;;1864:16:18;;;1856:61;;;1848:98;;;;-1:-1:-1;;;1848:98:18;;;;;;;:::i;:::-;1956:53;1996:12;1956:39;:53::i;:::-;1743:273;:::o;1216:362::-;1314:41;;:::i;:::-;-1:-1:-1;1379:192:18;;;;;;;;1101:51;1379:192;;969:6;1379:192;;;;1035:6;1379:192;;;;;;;1204:5;1379:192;;;;1216:362;:::o;786:54::-;835:5;786:54;:::o;981:60::-;1035:6;981:60;:::o;2361:113::-;1312:12:36;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;2439:16:18::1;:28:::0;;-1:-1:-1;;;;;;2439:28:18::1;-1:-1:-1::0;;;;;2439:28:18;;;::::1;::::0;;;::::1;::::0;;2361:113::o;1047:105::-;1101:51;1047:105;:::o;2015:240:36:-;1312:12;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;-1:-1:-1;;;;;2103:22:36;::::1;2095:73;;;;-1:-1:-1::0;;;2095:73:36::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:6;::::0;;2183:38:::1;::::0;-1:-1:-1;;;;;2183:38:36;;::::1;::::0;2204:6;::::1;::::0;2183:38:::1;::::0;::::1;2231:6;:17:::0;;-1:-1:-1;;;;;;2231:17:36::1;-1:-1:-1::0;;;;;2231:17:36;;;::::1;::::0;;;::::1;::::0;;2015:240::o;916:59:18:-;969:6;916:59;:::o;598:104:43:-;685:10;598:104;:::o;2052:538:30:-;2154:12;;2188:20;:12;;:20;:::i;:::-;:23;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2188:34:30;-1:-1:-1;;;2321:22:30;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;2236:131;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2236:131:30;;;;;;;;;;;;;;-1:-1:-1;;;;;2236:131:30;-1:-1:-1;;;;;;2236:131:30;;;;;;;;;;2188:189;;;;2236:131;2188:189;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:224;;;;2395:7;2387:48;;;;-1:-1:-1;;;2387:48:30;;;;;;;:::i;:::-;2453:3;:10;2467:2;2453:16;2445:61;;;;-1:-1:-1;;;2445:61:30;;;;;;;:::i;:::-;2535:3;2524:23;;;;;;;;;;;;:::i;:::-;2516:67;;;;-1:-1:-1;;;2516:67:30;;;;;;;:::i;:::-;2052:538;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:377:44:-;;;131:3;124:4;116:6;112:17;108:27;98:2;;156:8;146;139:26;98:2;-1:-1:-1;186:20:44;;229:18;218:30;;215:2;;;268:8;258;251:26;215:2;312:4;304:6;300:17;288:29;;364:3;357:4;348:6;340;336:19;332:30;329:39;326:2;;;381:1;378;371:12;326:2;88:303;;;;;:::o;396:171::-;;509:2;500:6;495:3;491:16;487:25;484:2;;;529:5;522;515:20;484:2;-1:-1:-1;555:6:44;474:93;-1:-1:-1;474:93:44:o;572:259::-;;684:2;672:9;663:7;659:23;655:32;652:2;;;705:6;697;690:22;652:2;749:9;736:23;768:33;795:5;768:33;:::i;:::-;820:5;642:189;-1:-1:-1;;;642:189:44:o;836:257::-;;956:2;944:9;935:7;931:23;927:32;924:2;;;977:6;969;962:22;924:2;1014:9;1008:16;1033:30;1057:5;1033:30;:::i;1098:258::-;;;1227:2;1215:9;1206:7;1202:23;1198:32;1195:2;;;1248:6;1240;1233:22;1195:2;-1:-1:-1;;1276:23:44;;;1346:2;1331:18;;;1318:32;;-1:-1:-1;1185:171:44:o;1361:939::-;;;;;;1569:3;1557:9;1548:7;1544:23;1540:33;1537:2;;;1591:6;1583;1576:22;1537:2;1636:9;1623:23;1665:18;1706:2;1698:6;1695:14;1692:2;;;1727:6;1719;1712:22;1692:2;1771:60;1823:7;1814:6;1803:9;1799:22;1771:60;:::i;:::-;1850:8;;-1:-1:-1;1745:86:44;-1:-1:-1;1935:2:44;1920:18;;1907:32;;-1:-1:-1;1948:30:44;1907:32;1948:30;:::i;:::-;1997:5;;-1:-1:-1;2049:2:44;2034:18;;2021:32;;-1:-1:-1;2106:2:44;2091:18;;2078:32;;2122:16;;;2119:2;;;2156:6;2148;2141:22;2119:2;-1:-1:-1;2184:24:44;;2242:3;2224:16;;;2220:26;2217:2;;;2264:6;2256;2249:22;2217:2;2292;2282:12;;;1527:773;;;;;;;;:::o;2870:389::-;;3014:2;3002:9;2993:7;2989:23;2985:32;2982:2;;;3035:6;3027;3020:22;2982:2;3080:9;3067:23;3113:18;3105:6;3102:30;3099:2;;;3150:6;3142;3135:22;3099:2;3178:75;3245:7;3236:6;3225:9;3221:22;3178:75;:::i;:::-;3168:85;2972:287;-1:-1:-1;;;;2972:287:44:o;3264:1077::-;;;;;;;3497:3;3485:9;3476:7;3472:23;3468:33;3465:2;;;3519:6;3511;3504:22;3465:2;3564:9;3551:23;3593:18;3634:2;3626:6;3623:14;3620:2;;;3655:6;3647;3640:22;3620:2;3683:75;3750:7;3741:6;3730:9;3726:22;3683:75;:::i;:::-;3673:85;;3811:2;3800:9;3796:18;3783:32;3767:48;;3840:2;3830:8;3827:16;3824:2;;;3861:6;3853;3846:22;3824:2;3905:62;3959:7;3948:8;3937:9;3933:24;3905:62;:::i;:::-;3986:8;;-1:-1:-1;3879:88:44;-1:-1:-1;4074:2:44;4059:18;;4046:32;;-1:-1:-1;4090:16:44;;;4087:2;;;4124:6;4116;4109:22;4087:2;;4168:62;4222:7;4211:8;4200:9;4196:24;4168:62;:::i;:::-;3455:886;;;;-1:-1:-1;3455:886:44;;;;;4331:2;4316:18;;;4303:32;;3455:886;-1:-1:-1;;;;3455:886:44:o;4346:194::-;;4469:2;4457:9;4448:7;4444:23;4440:32;4437:2;;;4490:6;4482;4475:22;4437:2;-1:-1:-1;4518:16:44;;4427:113;-1:-1:-1;4427:113:44:o;4545:335::-;;;4682:2;4670:9;4661:7;4657:23;4653:32;4650:2;;;4703:6;4695;4688:22;4650:2;4744:9;4731:23;4721:33;;4804:2;4793:9;4789:18;4776:32;4817:33;4844:5;4817:33;:::i;:::-;4869:5;4859:15;;;4640:240;;;;;:::o;4885:259::-;;4966:5;4960:12;4993:6;4988:3;4981:19;5009:63;5065:6;5058:4;5053:3;5049:14;5042:4;5035:5;5031:16;5009:63;:::i;:::-;5126:2;5105:15;-1:-1:-1;;5101:29:44;5092:39;;;;5133:4;5088:50;;4936:208;-1:-1:-1;;4936:208:44:o;5149:274::-;;5316:6;5310:13;5332:53;5378:6;5373:3;5366:4;5358:6;5354:17;5332:53;:::i;:::-;5401:16;;;;;5286:137;-1:-1:-1;;5286:137:44:o;5428:203::-;-1:-1:-1;;;;;5592:32:44;;;;5574:51;;5562:2;5547:18;;5529:102::o;5852:345::-;-1:-1:-1;;;;;6072:32:44;;;;6054:51;;6136:2;6121:18;;6114:34;;;;6179:2;6164:18;;6157:34;6042:2;6027:18;;6009:188::o;6202:300::-;;6371:2;6360:9;6353:21;6391:46;6433:2;6422:9;6418:18;6410:6;6391:46;:::i;:::-;6383:54;;6487:6;6480:14;6473:22;6468:2;6457:9;6453:18;6446:50;6343:159;;;;;:::o;6734:221::-;;6883:2;6872:9;6865:21;6903:46;6945:2;6934:9;6930:18;6922:6;6903:46;:::i;6960:355::-;7162:2;7144:21;;;7201:2;7181:18;;;7174:30;7240:33;7235:2;7220:18;;7213:61;7306:2;7291:18;;7134:181::o;7320:352::-;7522:2;7504:21;;;7561:2;7541:18;;;7534:30;7600;7595:2;7580:18;;7573:58;7663:2;7648:18;;7494:178::o;7677:334::-;7879:2;7861:21;;;7918:2;7898:18;;;7891:30;-1:-1:-1;;;7952:2:44;7937:18;;7930:40;8002:2;7987:18;;7851:160::o;8016:349::-;8218:2;8200:21;;;8257:2;8237:18;;;8230:30;8296:27;8291:2;8276:18;;8269:55;8356:2;8341:18;;8190:175::o;8370:348::-;8572:2;8554:21;;;8611:2;8591:18;;;8584:30;8650:26;8645:2;8630:18;;8623:54;8709:2;8694:18;;8544:174::o;8723:347::-;8925:2;8907:21;;;8964:2;8944:18;;;8937:30;9003:25;8998:2;8983:18;;8976:53;9061:2;9046:18;;8897:173::o;9075:356::-;9277:2;9259:21;;;9296:18;;;9289:30;9355:34;9350:2;9335:18;;9328:62;9422:2;9407:18;;9249:182::o;9436:354::-;9638:2;9620:21;;;9677:2;9657:18;;;9650:30;9716:32;9711:2;9696:18;;9689:60;9781:2;9766:18;;9610:180::o;9795:342::-;9997:2;9979:21;;;10036:2;10016:18;;;10009:30;-1:-1:-1;;;10070:2:44;10055:18;;10048:48;10128:2;10113:18;;9969:168::o;10142:442::-;10375:13;;10357:32;;10445:4;10433:17;;;10427:24;10405:20;;;10398:54;10508:4;10496:17;;;10490:24;10468:20;;;10461:54;10571:4;10559:17;;;10553:24;10531:20;;;10524:54;;;;10344:3;10329:19;;10311:273::o;10589:177::-;10735:25;;;10723:2;10708:18;;10690:76::o;10771:290::-;10961:25;;;-1:-1:-1;;;;;11022:32:44;11017:2;11002:18;;10995:60;10949:2;10934:18;;10916:145::o;11066:184::-;11238:4;11226:17;;;;11208:36;;11196:2;11181:18;;11163:87::o;11255:338::-;;11413:11;11400:25;11507:3;11503:8;11492;11476:14;11472:29;11468:44;11448:18;11444:69;11434:2;;11530:4;11524;11517:18;11598:333;;11751:11;11738:25;11845:3;11841:8;11830;11814:14;11810:29;11806:44;11786:18;11782:69;11772:2;;11868:4;11862;11855:18;11936:258;12008:1;12018:113;12032:6;12029:1;12026:13;12018:113;;;12108:11;;;12102:18;12089:11;;;12082:39;12054:2;12047:10;12018:113;;;12149:6;12146:1;12143:13;12140:2;;;12184:1;12175:6;12170:3;12166:16;12159:27;12140:2;;11989:205;;;:::o;12199:133::-;-1:-1:-1;;;;;12276:31:44;;12266:42;;12256:2;;12322:1;12319;12312:12;12337:120;12425:5;12418:13;12411:21;12404:5;12401:32;12391:2;;12447:1;12444;12437:12",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.7.6;\npragma experimental ABIEncoderV2;\n\nimport \"./AcceptEverythingPaymaster.sol\";\n\n///A paymaster that requires some calculation from the client before accepting a request.\n///This comes to prevent attack by anonymous clients.\n/// Usage:\n/// - Create an instance of the HashcashPaymaster, and give it a proper difficulty level.\n/// - When creating a RelayProvider, make sure to use the createHashcashAsyncApproval() with\n///   the same difficulty level.\n///\n/// The \"difficulty\" level is the number of zero bits at the generated hash.\n/// a value of 15 requires roughly 32000 iterations and take ~0.5 second on a normal PC\ncontract HashcashPaymaster is AcceptEverythingPaymaster {\n\n    function versionPaymaster() external view override virtual returns (string memory){\n        return \"2.2.0+opengsn.hashcash.ipaymaster\";\n    }\n\n    uint8 public difficulty;\n\n    constructor(uint8 _difficulty) {\n        difficulty = _difficulty;\n    }\n\n    function preRelayedCall(\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData,\n        uint256 maxPossibleGas\n    )\n    external\n    override\n    virtual\n    relayHubOnly\n    returns (bytes memory, bool revertOnRecipientRevert) {\n\n        (relayRequest, approvalData, maxPossibleGas, signature);\n\n        require(approvalData.length == 64, \"no hash in approvalData\");\n        (bytes32 hash, uint256 hashNonce) = abi.decode(approvalData, (bytes32, uint256));\n        bytes32 calcHash = keccak256(abi.encode(\n                relayRequest.request.from,\n                relayRequest.request.nonce,\n                hashNonce));\n        require(hash == calcHash, \"wrong hash\");\n        require(uint256(hash) < (uint256(1) << (256 - difficulty)), \"difficulty not met\");\n        return (\"\", false);\n    }\n}\n",
  "sourcePath": "/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/HashcashPaymaster.sol",
  "ast": {
    "absolutePath": "/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/HashcashPaymaster.sol",
    "exportedSymbols": {
      "AcceptEverythingPaymaster": [
        61
      ],
      "BasePaymaster": [
        2575
      ],
      "Context": [
        9170
      ],
      "GsnEip712Library": [
        6706
      ],
      "GsnTypes": [
        6732
      ],
      "GsnUtils": [
        6779
      ],
      "HashcashPaymaster": [
        182
      ],
      "IForwarder": [
        5737
      ],
      "IPaymaster": [
        5807
      ],
      "IRelayHub": [
        6146
      ],
      "IRelayRecipient": [
        6175
      ],
      "IStakeManager": [
        6338
      ],
      "MinLibBytes": [
        6894
      ],
      "Ownable": [
        7733
      ],
      "SafeMath": [
        8204
      ]
    },
    "id": 183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 63,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:1"
      },
      {
        "id": 64,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:33:1"
      },
      {
        "absolutePath": "/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/AcceptEverythingPaymaster.sol",
        "file": "./AcceptEverythingPaymaster.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 62,
        "src": "90:41:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 67,
              "name": "AcceptEverythingPaymaster",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 61,
              "src": "703:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AcceptEverythingPaymaster_$61",
                "typeString": "contract AcceptEverythingPaymaster"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "703:25:1"
          }
        ],
        "contractDependencies": [
          61,
          2575,
          5807,
          7733,
          9170
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 66,
          "nodeType": "StructuredDocumentation",
          "src": "133:540:1",
          "text": "A paymaster that requires some calculation from the client before accepting a request.\nThis comes to prevent attack by anonymous clients.\n Usage:\n - Create an instance of the HashcashPaymaster, and give it a proper difficulty level.\n - When creating a RelayProvider, make sure to use the createHashcashAsyncApproval() with\n   the same difficulty level.\n The \"difficulty\" level is the number of zero bits at the generated hash.\n a value of 15 requires roughly 32000 iterations and take ~0.5 second on a normal PC"
        },
        "fullyImplemented": true,
        "id": 182,
        "linearizedBaseContracts": [
          182,
          61,
          2575,
          7733,
          9170,
          5807
        ],
        "name": "HashcashPaymaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              14
            ],
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "818:59:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "322e322e302b6f70656e67736e2e68617368636173682e697061796d6173746572",
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "835:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_45e44a4a7a1f817e7efbc6de8430e726498e9cab7dc744f38b58f1e7291ce03c",
                      "typeString": "literal_string \"2.2.0+opengsn.hashcash.ipaymaster\""
                    },
                    "value": "2.2.0+opengsn.hashcash.ipaymaster"
                  },
                  "functionReturnParameters": 73,
                  "id": 75,
                  "nodeType": "Return",
                  "src": "828:42:1"
                }
              ]
            },
            "functionSelector": "921276ea",
            "id": 77,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "versionPaymaster",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 70,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "778:8:1"
            },
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:2:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "804:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "803:15:1"
            },
            "scope": 182,
            "src": "736:141:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "constant": false,
            "functionSelector": "19cae462",
            "id": 79,
            "mutability": "mutable",
            "name": "difficulty",
            "nodeType": "VariableDeclaration",
            "scope": 182,
            "src": "883:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 78,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "883:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "944:41:1",
              "statements": [
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "difficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "954:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85,
                      "name": "_difficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "967:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "954:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "954:24:1"
                }
              ]
            },
            "id": 89,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_difficulty",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "925:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:19:1"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:1"
            },
            "scope": 182,
            "src": "913:72:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              41
            ],
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1289:568:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 107,
                        "name": "relayRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1301:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$6731_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest calldata"
                        }
                      },
                      {
                        "id": 108,
                        "name": "approvalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1315:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 109,
                        "name": "maxPossibleGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1329:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 110,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "1345:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "id": 111,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1300:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_RelayRequest_$6731_calldata_ptr_$_t_bytes_calldata_ptr_$_t_uint256_$_t_bytes_calldata_ptr_$",
                      "typeString": "tuple(struct GsnTypes.RelayRequest calldata,bytes calldata,uint256,bytes calldata)"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1300:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 114,
                            "name": "approvalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "1374:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1374:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3634",
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1397:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          },
                          "value": "64"
                        },
                        "src": "1374:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f206861736820696e20617070726f76616c44617461",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1401:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40d0c6a9117d3297d0b0e1a9c92585a6446d93f0bbfcc33b1ce43a9afe653a36",
                          "typeString": "literal_string \"no hash in approvalData\""
                        },
                        "value": "no hash in approvalData"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40d0c6a9117d3297d0b0e1a9c92585a6446d93f0bbfcc33b1ce43a9afe653a36",
                          "typeString": "literal_string \"no hash in approvalData\""
                        }
                      ],
                      "id": 113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1366:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:61:1"
                },
                {
                  "assignments": [
                    122,
                    124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "1438:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1438:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 124,
                      "mutability": "mutable",
                      "name": "hashNonce",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "1452:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 123,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1452:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 134,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 127,
                        "name": "approvalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1484:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1499:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 128,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1499:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1508:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 130,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1508:7:1",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 132,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1498:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(bytes32),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(bytes32),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 125,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "1473:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1473:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
                      "typeString": "tuple(bytes32,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1437:80:1"
                },
                {
                  "assignments": [
                    136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 136,
                      "mutability": "mutable",
                      "name": "calcHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "1527:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 135,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1527:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 149,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 140,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "1584:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$6731_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6728,
                              "src": "1584:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$5669_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "from",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5656,
                            "src": "1584:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "expression": {
                                "id": 143,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "1627:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$6731_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6728,
                              "src": "1627:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$5669_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5664,
                            "src": "1627:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 146,
                            "name": "hashNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1671:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 138,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1556:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1556:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1556:125:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 137,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1546:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:136:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1527:155:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 151,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "1700:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 152,
                          "name": "calcHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "1708:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1700:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672068617368",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1718:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0733240d1791a0864b3745b3d17d8130bd78433e802917a21c74061ae3f246",
                          "typeString": "literal_string \"wrong hash\""
                        },
                        "value": "wrong hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0733240d1791a0864b3745b3d17d8130bd78433e802917a21c74061ae3f246",
                          "typeString": "literal_string \"wrong hash\""
                        }
                      ],
                      "id": 150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1692:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1692:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 160,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122,
                              "src": "1757:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1749:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 158,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1749:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1749:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1774:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1766:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 162,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1766:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1766:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    "id": 168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "323536",
                                      "id": 166,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1781:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_256_by_1",
                                        "typeString": "int_const 256"
                                      },
                                      "value": "256"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 167,
                                      "name": "difficulty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79,
                                      "src": "1787:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "1781:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  }
                                ],
                                "id": 169,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1780:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "1766:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 171,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1765:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1749:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "646966666963756c7479206e6f74206d6574",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1801:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d98ee7cae0fc7637ca75437a5cb8736734d5ac009a5e2d0d911224ad99bcfbed",
                          "typeString": "literal_string \"difficulty not met\""
                        },
                        "value": "difficulty not met"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d98ee7cae0fc7637ca75437a5cb8736734d5ac009a5e2d0d911224ad99bcfbed",
                          "typeString": "literal_string \"difficulty not met\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1741:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1741:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1741:81:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1840:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 178,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1839:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_bool_$",
                      "typeString": "tuple(literal_string \"\",bool)"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "1832:18:1"
                }
              ]
            },
            "functionSelector": "00be5dd4",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 101,
                "modifierName": {
                  "id": 100,
                  "name": "relayHubOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2487,
                  "src": "1219:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1219:12:1"
              }
            ],
            "name": "preRelayedCall",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 99,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1194:8:1"
            },
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "relayRequest",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1024:43:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RelayRequest_$6731_calldata_ptr",
                    "typeString": "struct GsnTypes.RelayRequest"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "GsnTypes.RelayRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6731,
                    "src": "1024:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RelayRequest_$6731_storage_ptr",
                      "typeString": "struct GsnTypes.RelayRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1077:24:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "approvalData",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1111:27:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "maxPossibleGas",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1148:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1014:162:1"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1245:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "revertOnRecipientRevert",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1259:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:44:1"
            },
            "scope": 182,
            "src": "991:866:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 183,
        "src": "673:1186:1"
      }
    ],
    "src": "31:1829:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/HashcashPaymaster.sol",
    "exportedSymbols": {
      "AcceptEverythingPaymaster": [
        61
      ],
      "BasePaymaster": [
        2575
      ],
      "Context": [
        9170
      ],
      "GsnEip712Library": [
        6706
      ],
      "GsnTypes": [
        6732
      ],
      "GsnUtils": [
        6779
      ],
      "HashcashPaymaster": [
        182
      ],
      "IForwarder": [
        5737
      ],
      "IPaymaster": [
        5807
      ],
      "IRelayHub": [
        6146
      ],
      "IRelayRecipient": [
        6175
      ],
      "IStakeManager": [
        6338
      ],
      "MinLibBytes": [
        6894
      ],
      "Ownable": [
        7733
      ],
      "SafeMath": [
        8204
      ]
    },
    "id": 183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 63,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:1"
      },
      {
        "id": 64,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:33:1"
      },
      {
        "absolutePath": "/Users/dror/IdeaProjects/depl/gsn/packages/paymasters/contracts/AcceptEverythingPaymaster.sol",
        "file": "./AcceptEverythingPaymaster.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 62,
        "src": "90:41:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 67,
              "name": "AcceptEverythingPaymaster",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 61,
              "src": "703:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AcceptEverythingPaymaster_$61",
                "typeString": "contract AcceptEverythingPaymaster"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "703:25:1"
          }
        ],
        "contractDependencies": [
          61,
          2575,
          5807,
          7733,
          9170
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 66,
          "nodeType": "StructuredDocumentation",
          "src": "133:540:1",
          "text": "A paymaster that requires some calculation from the client before accepting a request.\nThis comes to prevent attack by anonymous clients.\n Usage:\n - Create an instance of the HashcashPaymaster, and give it a proper difficulty level.\n - When creating a RelayProvider, make sure to use the createHashcashAsyncApproval() with\n   the same difficulty level.\n The \"difficulty\" level is the number of zero bits at the generated hash.\n a value of 15 requires roughly 32000 iterations and take ~0.5 second on a normal PC"
        },
        "fullyImplemented": true,
        "id": 182,
        "linearizedBaseContracts": [
          182,
          61,
          2575,
          7733,
          9170,
          5807
        ],
        "name": "HashcashPaymaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              14
            ],
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "818:59:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "322e322e302b6f70656e67736e2e68617368636173682e697061796d6173746572",
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "835:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_45e44a4a7a1f817e7efbc6de8430e726498e9cab7dc744f38b58f1e7291ce03c",
                      "typeString": "literal_string \"2.2.0+opengsn.hashcash.ipaymaster\""
                    },
                    "value": "2.2.0+opengsn.hashcash.ipaymaster"
                  },
                  "functionReturnParameters": 73,
                  "id": 75,
                  "nodeType": "Return",
                  "src": "828:42:1"
                }
              ]
            },
            "functionSelector": "921276ea",
            "id": 77,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "versionPaymaster",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 70,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "778:8:1"
            },
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:2:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "804:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "803:15:1"
            },
            "scope": 182,
            "src": "736:141:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "constant": false,
            "functionSelector": "19cae462",
            "id": 79,
            "mutability": "mutable",
            "name": "difficulty",
            "nodeType": "VariableDeclaration",
            "scope": 182,
            "src": "883:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 78,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "883:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "944:41:1",
              "statements": [
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "difficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "954:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85,
                      "name": "_difficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "967:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "954:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "954:24:1"
                }
              ]
            },
            "id": 89,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_difficulty",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "925:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:19:1"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:1"
            },
            "scope": 182,
            "src": "913:72:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              41
            ],
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1289:568:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 107,
                        "name": "relayRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1301:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$6731_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest calldata"
                        }
                      },
                      {
                        "id": 108,
                        "name": "approvalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1315:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 109,
                        "name": "maxPossibleGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1329:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 110,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "1345:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "id": 111,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1300:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_RelayRequest_$6731_calldata_ptr_$_t_bytes_calldata_ptr_$_t_uint256_$_t_bytes_calldata_ptr_$",
                      "typeString": "tuple(struct GsnTypes.RelayRequest calldata,bytes calldata,uint256,bytes calldata)"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1300:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 114,
                            "name": "approvalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "1374:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1374:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3634",
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1397:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          },
                          "value": "64"
                        },
                        "src": "1374:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f206861736820696e20617070726f76616c44617461",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1401:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40d0c6a9117d3297d0b0e1a9c92585a6446d93f0bbfcc33b1ce43a9afe653a36",
                          "typeString": "literal_string \"no hash in approvalData\""
                        },
                        "value": "no hash in approvalData"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40d0c6a9117d3297d0b0e1a9c92585a6446d93f0bbfcc33b1ce43a9afe653a36",
                          "typeString": "literal_string \"no hash in approvalData\""
                        }
                      ],
                      "id": 113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1366:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:61:1"
                },
                {
                  "assignments": [
                    122,
                    124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "1438:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1438:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 124,
                      "mutability": "mutable",
                      "name": "hashNonce",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "1452:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 123,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1452:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 134,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 127,
                        "name": "approvalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1484:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1499:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 128,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1499:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1508:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 130,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1508:7:1",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 132,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1498:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(bytes32),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(bytes32),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 125,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "1473:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1473:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
                      "typeString": "tuple(bytes32,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1437:80:1"
                },
                {
                  "assignments": [
                    136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 136,
                      "mutability": "mutable",
                      "name": "calcHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "1527:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 135,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1527:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 149,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 140,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "1584:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$6731_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6728,
                              "src": "1584:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$5669_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "from",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5656,
                            "src": "1584:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "expression": {
                                "id": 143,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "1627:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$6731_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6728,
                              "src": "1627:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$5669_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5664,
                            "src": "1627:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 146,
                            "name": "hashNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1671:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 138,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1556:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1556:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1556:125:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 137,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1546:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:136:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1527:155:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 151,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "1700:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 152,
                          "name": "calcHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "1708:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1700:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672068617368",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1718:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0733240d1791a0864b3745b3d17d8130bd78433e802917a21c74061ae3f246",
                          "typeString": "literal_string \"wrong hash\""
                        },
                        "value": "wrong hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0733240d1791a0864b3745b3d17d8130bd78433e802917a21c74061ae3f246",
                          "typeString": "literal_string \"wrong hash\""
                        }
                      ],
                      "id": 150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1692:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1692:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 160,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122,
                              "src": "1757:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1749:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 158,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1749:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1749:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1774:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1766:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 162,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1766:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1766:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    "id": 168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "323536",
                                      "id": 166,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1781:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_256_by_1",
                                        "typeString": "int_const 256"
                                      },
                                      "value": "256"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 167,
                                      "name": "difficulty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79,
                                      "src": "1787:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "1781:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  }
                                ],
                                "id": 169,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1780:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "1766:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 171,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1765:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1749:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "646966666963756c7479206e6f74206d6574",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1801:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d98ee7cae0fc7637ca75437a5cb8736734d5ac009a5e2d0d911224ad99bcfbed",
                          "typeString": "literal_string \"difficulty not met\""
                        },
                        "value": "difficulty not met"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d98ee7cae0fc7637ca75437a5cb8736734d5ac009a5e2d0d911224ad99bcfbed",
                          "typeString": "literal_string \"difficulty not met\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1741:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1741:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1741:81:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1840:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 178,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1839:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_bool_$",
                      "typeString": "tuple(literal_string \"\",bool)"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "1832:18:1"
                }
              ]
            },
            "functionSelector": "00be5dd4",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 101,
                "modifierName": {
                  "id": 100,
                  "name": "relayHubOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2487,
                  "src": "1219:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1219:12:1"
              }
            ],
            "name": "preRelayedCall",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 99,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1194:8:1"
            },
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "relayRequest",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1024:43:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RelayRequest_$6731_calldata_ptr",
                    "typeString": "struct GsnTypes.RelayRequest"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "GsnTypes.RelayRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6731,
                    "src": "1024:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RelayRequest_$6731_storage_ptr",
                      "typeString": "struct GsnTypes.RelayRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1077:24:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "approvalData",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1111:27:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "maxPossibleGas",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1148:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1014:162:1"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1245:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "revertOnRecipientRevert",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1259:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:44:1"
            },
            "scope": 182,
            "src": "991:866:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 183,
        "src": "673:1186:1"
      }
    ],
    "src": "31:1829:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-06-09T09:33:44.080Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
        "params": {
          "context": "- the call context, as returned by the preRelayedCall",
          "gasUseWithoutPost": "- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.",
          "relayData": "- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.",
          "success": "- true if the relayed call succeeded, false if it reverted"
        }
      },
      "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
        "params": {
          "approvalData": "- extra dapp-specific data (e.g. signature from trusted party)",
          "maxPossibleGas": "- based on values returned from {@link getGasAndDataLimits},         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.         In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"  return:      a context to be passed to postRelayedCall      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).",
          "relayRequest": "- the full relay request structure",
          "signature": "- user's EIP712-compatible signature of the {@link relayRequest}.              Note that in most cases the paymaster shouldn't try use it at all. It is always checked              by the forwarder immediately after preRelayedCall returns."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getGasAndDataLimits()": {
        "notice": "Return the Gas Limits and msg.data max size constants used by the Paymaster."
      },
      "getHubAddr()": {
        "notice": "return the relayHub of this contract."
      },
      "getRelayHubDeposit()": {
        "notice": "check current deposit on relay hub."
      },
      "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
        "notice": "This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state."
      },
      "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
        "notice": "Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call. MUST be protected with relayHubOnly() in case it modifies state. The Paymaster rejects by the following \"revert\" operations  - preRelayedCall() method reverts  - the forwarder reverts because of nonce or signature error  - the paymaster returned \"rejectOnRecipientRevert\", and the recipient contract reverted. In any of the above cases, all paymaster calls (and recipient call) are reverted. In any other case, the paymaster agrees to pay for the gas cost of the transaction (note  that this includes also postRelayedCall revert) The rejectOnRecipientRevert flag means the Paymaster \"delegate\" the rejection to the recipient  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,  otherwise the TX is paid by the Paymaster."
      },
      "withdrawRelayHubDepositTo(uint256,address)": {
        "notice": "withdraw deposit from relayHub"
      }
    },
    "notice": "A paymaster that requires some calculation from the client before accepting a request. This comes to prevent attack by anonymous clients. Usage: - Create an instance of the HashcashPaymaster, and give it a proper difficulty level. - When creating a RelayProvider, make sure to use the createHashcashAsyncApproval() with   the same difficulty level. The \"difficulty\" level is the number of zero bits at the generated hash. a value of 15 requires roughly 32000 iterations and take ~0.5 second on a normal PC",
    "version": 1
  }
}