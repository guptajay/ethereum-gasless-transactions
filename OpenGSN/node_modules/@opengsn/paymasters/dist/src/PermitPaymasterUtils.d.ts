import Web3 from 'web3';
import { PrefixedHexString } from 'ethereumjs-util';
import { EIP712Domain, EIP712TypedData, EIP712TypeProperty, EIP712Types } from 'eth-sig-util';
import { Address, IntString } from '@opengsn/common/dist/types/Aliases';
export declare const DAI_CONTRACT_ADDRESS = "0x6B175474E89094C44Da98b954EedeAC495271d0F";
export declare const WETH9_CONTRACT_ADDRESS = "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2";
export declare const UNI_CONTRACT_ADDRESS = "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984";
export declare const UNISWAP_V3_QUOTER_CONTRACT_ADDRESS = "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6";
export declare const SWAP_ROUTER_CONTRACT_ADDRESS = "0xE592427A0AEce92De3Edee1F18E0157C05861564";
export declare const GSN_FORWARDER_CONTRACT_ADDRESS = "0xAa3E82b4c4093b4bA13Cb5714382C99ADBf750cA";
export declare const UNISWAP_V3_DAI_WETH_POOL_CONTRACT_ADDRESS = "0xC2e9F25Be6257c210d7Adf0D4Cd6E3E881ba25f8";
export declare const CHAINLINK_USD_ETH_FEED_CONTRACT_ADDRESS = "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419";
export declare const CHAINLINK_UNI_ETH_FEED_CONTRACT_ADDRESS = "0xD6aA3D25116d8dA79Ea0246c4826EB951872e02e";
export declare const PERMIT_SIGNATURE_DAI = "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)";
export declare const PERMIT_SIGNATURE_EIP2612 = "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)";
export declare function getDaiDomainSeparator(): EIP712Domain;
export declare function getUniDomainSeparator(): EIP712Domain;
interface Types extends EIP712Types {
    EIP712Domain: EIP712TypeProperty[];
    Permit: EIP712TypeProperty[];
}
export interface PermitInterfaceDAI {
    from: Address;
    holder: Address;
    spender: Address;
    nonce: IntString;
    expiry: IntString;
    allowed: boolean;
}
export interface PermitInterfaceEIP2612 {
    from: Address;
    owner: Address;
    spender: Address;
    nonce: IntString;
    deadline: IntString;
    value: IntString;
}
export declare type PermitType = EIP712TypeProperty[];
export declare const PermitTypeDai: PermitType;
export declare const PermitTypeEIP2612: PermitType;
export declare class TypedPermit implements EIP712TypedData {
    readonly types: Types;
    readonly domain: EIP712Domain;
    readonly primaryType: string;
    readonly message: any;
    constructor(chainId: number, permitType: PermitType, domain: EIP712Domain, permit: PermitInterfaceDAI | PermitInterfaceEIP2612, eip712DomainType?: EIP712TypeProperty[]);
}
export declare function signAndEncodeDaiPermit(holder: Address, spender: Address, token: Address, expiry: IntString, web3Input: Web3, domainSeparator?: EIP712Domain, forceNonce?: number, skipValidation?: boolean): Promise<PrefixedHexString>;
export declare function signAndEncodeEIP2612Permit(owner: Address, spender: Address, token: Address, value: string, deadline: string, web3Input: Web3, domainSeparator: EIP712Domain, domainType?: EIP712TypeProperty[], forceNonce?: number, skipValidation?: boolean): Promise<PrefixedHexString>;
export {};
