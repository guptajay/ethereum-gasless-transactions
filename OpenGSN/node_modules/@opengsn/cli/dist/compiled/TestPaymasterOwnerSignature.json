{
    "contractName": "TestPaymasterOwnerSignature",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "actualCharge",
                    "type": "uint256"
                }
            ],
            "name": "SampleRecipientPostCall",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "SampleRecipientPreCall",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "CALLDATA_SIZE_LIMIT",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "FORWARDER_HUB_OVERHEAD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "PAYMASTER_ACCEPTANCE_BUDGET",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "POST_RELAYED_CALL_GAS_LIMIT",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "PRE_RELAYED_CALL_GAS_LIMIT",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "from",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "gas",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "validUntil",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct IForwarder.ForwardRequest",
                            "name": "request",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "gasPrice",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "pctRelayFee",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "baseRelayFee",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "relayWorker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "paymaster",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "forwarder",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "paymasterData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "clientId",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct GsnTypes.RelayData",
                            "name": "relayData",
                            "type": "tuple"
                        }
                    ],
                    "internalType": "struct GsnTypes.RelayRequest",
                    "name": "relayRequest",
                    "type": "tuple"
                }
            ],
            "name": "_verifyForwarder",
            "outputs": [],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "deposit",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getGasAndDataLimits",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "acceptanceBudget",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "preRelayedCallGasLimit",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "postRelayedCallGasLimit",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "calldataSizeLimit",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct IPaymaster.GasAndDataLimits",
                    "name": "limits",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getHubAddr",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getRelayHubDeposit",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "context",
                    "type": "bytes"
                },
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "gasUseWithoutPost",
                    "type": "uint256"
                },
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "gasPrice",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "pctRelayFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "baseRelayFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "relayWorker",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "paymaster",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "forwarder",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "paymasterData",
                            "type": "bytes"
                        },
                        {
                            "internalType": "uint256",
                            "name": "clientId",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct GsnTypes.RelayData",
                    "name": "relayData",
                    "type": "tuple"
                }
            ],
            "name": "postRelayedCall",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "contract IRelayHub",
                    "name": "hub",
                    "type": "address"
                }
            ],
            "name": "setRelayHub",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "contract IForwarder",
                    "name": "forwarder",
                    "type": "address"
                }
            ],
            "name": "setTrustedForwarder",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "trustedForwarder",
            "outputs": [
                {
                    "internalType": "contract IForwarder",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "versionPaymaster",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address payable",
                    "name": "destination",
                    "type": "address"
                }
            ],
            "name": "withdrawAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "address payable",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "withdrawRelayHubDepositTo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "from",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "gas",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "validUntil",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct IForwarder.ForwardRequest",
                            "name": "request",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "gasPrice",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "pctRelayFee",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "baseRelayFee",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "relayWorker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "paymaster",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "forwarder",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "paymasterData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "clientId",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct GsnTypes.RelayData",
                            "name": "relayData",
                            "type": "tuple"
                        }
                    ],
                    "internalType": "struct GsnTypes.RelayRequest",
                    "name": "relayRequest",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                },
                {
                    "internalType": "bytes",
                    "name": "approvalData",
                    "type": "bytes"
                },
                {
                    "internalType": "uint256",
                    "name": "maxPossibleGas",
                    "type": "uint256"
                }
            ],
            "name": "preRelayedCall",
            "outputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                },
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualCharge\",\"type\":\"uint256\"}],\"name\":\"SampleRecipientPostCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SampleRecipientPreCall\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLDATA_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORWARDER_HUB_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_ACCEPTANCE_BUDGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POST_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRE_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"}],\"name\":\"_verifyForwarder\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasAndDataLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHubDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRelayHub\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setRelayHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawRelayHubDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"context\":\"- the call context, as returned by the preRelayedCall\",\"gasUseWithoutPost\":\"- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.\",\"relayData\":\"- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.\",\"success\":\"- true if the relayed call succeeded, false if it reverted\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGasAndDataLimits()\":{\"notice\":\"Return the Gas Limits and msg.data max size constants used by the Paymaster.\"},\"getHubAddr()\":{\"notice\":\"return the relayHub of this contract.\"},\"getRelayHubDeposit()\":{\"notice\":\"check current deposit on relay hub.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state.\"},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"This demonstrates how dapps can provide an off-chain signatures to relayed transactions.\"},\"withdrawRelayHubDepositTo(uint256,address)\":{\"notice\":\"withdraw deposit from relayHub\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/test/TestPaymasterOwnerSignature.sol\":\"TestPaymasterOwnerSignature\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/BasePaymaster.sol\":{\"keccak256\":\"0xd914685ceab88a06d4a1c94d7dd11167bec794106b4c25554bce6491d0df6ec8\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7a4881660c732e5f08254d3cc8c76480e5a878c15cb28dc96e8132aaa0a01b3a\",\"dweb:/ipfs/QmXeRywWUcKxpu1y465Vf5LxXdk8F1VNveCjdSFN4CsgFv\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/forwarder/IForwarder.sol\":{\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e42577c586894c9fc9e11a3281c0e2d4183121714fd1101380b6b2b66c144ba3\",\"dweb:/ipfs/QmPQphvUxhvnYGXtNRbU7WcmbEP2N7mMDgC5R8R9AqC9xG\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x4cf49c343b72cd8dac257e8b49009347dc2465d5d191c6d1f9455e74f331f5d9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9d851b3712a9931da139d1bab1f02fccafc313bcc754f2d88831699edf9bea20\",\"dweb:/ipfs/QmPxqoiiLiwFTVw6JZLet2Q5BtL2wDcbtF1UhZ6J7oryhT\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/interfaces/IRelayHub.sol\":{\"keccak256\":\"0x3497133a7147174c498d2feeb2569b973396a8c2c220b5876fd9eb3b59841c85\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://32bb285a0f675310ee87647d00717e2dee9dbc7179e5455a3e1d7a2e121b6bf7\",\"dweb:/ipfs/QmZABWeS7pi5KfhoDUKyZHEvwqiAL4sYvjr3UcWZ7SvqCX\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x6243d3a925653ed0bde57e9fae7fb87f12c58a2376b27ae23b53502322532e00\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://928801ac8ceac377f326cd48de8e0056db9a7f8767b60efee5dfca035f326702\",\"dweb:/ipfs/QmYFkKXZcSVmmLNpDF1hvsLwAnhjmVSZuvEueaJgp1aVSg\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x86fcc2f265ba3c2f987fe47823121b4df3ddc86b834d89a67aca585d0721747f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://3712113b0f9d49cc3e9ef7096de90aabc719c1d40bb2796930e1f891325fcc3c\",\"dweb:/ipfs/QmZPbxY2idt9DuXHXGxK3GFf1bXHj1CDB1WBAhtenStrjj\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/test/TestPaymasterEverythingAccepted.sol\":{\"keccak256\":\"0x83af342d72f525e9eaf5b09e4c10a37814f324225a7047cc689753f1896975d5\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://982f6b70afb221c6f3e717d70b16f14415ffdf37500c6c0ce9dacfb839f11b12\",\"dweb:/ipfs/QmeyYUBQfbBqW8uWYsxRjQ3LHVWPLEz4y8BHmA67Sg5g5e\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/test/TestPaymasterOwnerSignature.sol\":{\"keccak256\":\"0x88676e328ad27f9104f6c72b58237c1728d83372c05bacc20bf44cf28a563072\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9746a20f6e45664f89aca35dd40d06d4875703adcb8896b22996089f0b30768b\",\"dweb:/ipfs/QmUY8WS2zWGkbogCZC8syPxoFP64Vo2ajPCMqqkUuGTzuD\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/utils/GsnEip712Library.sol\":{\"keccak256\":\"0xeabda17c0116022fba48a5be922c093fd721fc21e400a8158a2d2c9ae1c0ac4f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d2632a6bfa1675269a04a28a26a3bde247f537ecc7a671fd6b1bb0f34a11ec4d\",\"dweb:/ipfs/QmaqwWq3RtvHFC55DmpwWsxwibKCroG6PvMrrsag8skMyY\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/utils/GsnTypes.sol\":{\"keccak256\":\"0x813b12755ca7e69d3f269b5ab801d36d208274c26ea2764a416c3033e61bc130\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f3b0de24eae014d96adac3946984f3f3b769b3d74c3b46ccdb6b93d516b6916d\",\"dweb:/ipfs/QmRVmrAzeYGve3sQ2qksDknA5MVmmJpgZiRZ7VWCQCehNz\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/utils/GsnUtils.sol\":{\"keccak256\":\"0xeb0c5992c7c2648e414a14605a72e773e09c554036e9c9cd9aca34e292b195d7\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://5d35afd557b1b9a02ad97bfcb5ff06b7cebde782d10c63258fd724413fee0419\",\"dweb:/ipfs/QmcDVREDjsxkeaDif7nM9ammFfGcgEQR684jEsayk2Gkm1\"]},\"/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/utils/MinLibBytes.sol\":{\"keccak256\":\"0x73c837126ff5369c63b7a71828b6d5c9e5bc8a6477f8d4fc97f8e28142380cd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4a7846ef4c46fcd3fcc36dc4d49f70470391da1da83102eb48ea6428fd5cdee\",\"dweb:/ipfs/QmdvZvjhTAYAzKzjeNrWM9sToiPuo6XaQs7AeKUG9aKrRy\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xc005d5d0c00724c37876c56a59ccde49fc681edce11e67a8a7ff53a36a042f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc2cd1d2877d2711b9f4c0375324e1528cb0127820837a163b14760b3a1b3bb\",\"dweb:/ipfs/QmNde8JwkcNsxhjR43iNrou6wMvJknN1CeXjB4cDsKHzHV\"]},\"@openzeppelin/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x94c4719c16ffb96dd3cdc68f6fbf78105153018adbf382241821e8188e6a4bd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33390c907a31dd8961949b0fa1b9557781c81024231f607f6f97b203746ebf60\",\"dweb:/ipfs/QmSdRfWx8tsa2Phm23qtNGTDUek2BphzwyxuqKf3AEszL9\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
    "bytecode": "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b61153a8061007d6000396000f3fe60806040526004361061012d5760003560e01c8063921276ea116100ab578063d0e30db01161006f578063d0e30db01461038d578063da74222814610395578063df463a66146103b5578063f2fde38b146103ca578063f9c002f7146103ea578063fa09e630146103ff576101c9565b8063921276ea146102ff578063a5dcd07b14610321578063b039a88f14610341578063b90b41cf14610363578063bbdaa3c914610378576101c9565b806374e861d6116100f257806374e861d61461027357806376fa01c3146102955780637bb05264146102b55780637da0a877146102d55780638da5cb5b146102ea576101c9565b8062be5dd4146101ce5780632afe31c1146102055780632d14c4b7146102275780635c5e3db114610249578063715018a61461025e576101c9565b366101c9576001546001600160a01b03166101635760405162461bcd60e51b815260040161015a906112c2565b60405180910390fd5b60015460405163aa67c91960e01b81526001600160a01b039091169063aa67c9199034906101959030906004016111f9565b6000604051808303818588803b1580156101ae57600080fd5b505af11580156101c2573d6000803e3d6000fd5b5050505050005b600080fd5b3480156101da57600080fd5b506101ee6101e93660046110a2565b61041f565b6040516101fc92919061121d565b60405180910390f35b34801561021157600080fd5b5061021a610510565b6040516101fc91906113bc565b34801561023357600080fd5b50610247610242366004611153565b610596565b005b34801561025557600080fd5b5061021a61065e565b34801561026a57600080fd5b50610247610664565b34801561027f57600080fd5b50610288610710565b6040516101fc91906111f9565b3480156102a157600080fd5b506102476102b0366004610fdb565b61071f565b3480156102c157600080fd5b506102476102d0366004610f9c565b61075f565b3480156102e157600080fd5b506102886107e3565b3480156102f657600080fd5b506102886107f2565b34801561030b57600080fd5b50610314610801565b6040516101fc9190611241565b34801561032d57600080fd5b5061024761033c366004611067565b610821565b34801561034d57600080fd5b50610356610878565b6040516101fc9190611391565b34801561036f57600080fd5b5061021a6108b0565b34801561038457600080fd5b5061021a6108b6565b6102476108bd565b3480156103a157600080fd5b506102476103b0366004610f9c565b61094b565b3480156103c157600080fd5b5061021a6109cf565b3480156103d657600080fd5b506102476103e5366004610f9c565b6109d6565b3480156103f657600080fd5b5061021a610ad8565b34801561040b57600080fd5b5061024761041a366004610f9c565b610adf565b6060600061042c88610821565b60006104b686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104b0925061047791508d9050806113dc565b610485906020810190610f9c565b60405160200161049591906111ca565b60405160208183030381529060405280519060200120610b70565b90610bc1565b90506104c06107f2565b6001600160a01b0316816001600160a01b0316146104f05760405162461bcd60e51b815260040161015a90611365565b505060408051602081019091526000808252909150965096945050505050565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906105419030906004016111f9565b60206040518083038186803b15801561055957600080fd5b505afa15801561056d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610591919061113b565b905090565b61059e610c41565b6001600160a01b03166105af6107f2565b6001600160a01b0316146105f8576040805162461bcd60e51b815260206004820181905260248201526000805160206114e5833981519152604482015290519081900360640190fd5b600154604051627b8a6760e11b81526001600160a01b039091169062f714ce9061062890859085906004016113c5565b600060405180830381600087803b15801561064257600080fd5b505af1158015610656573d6000803e3d6000fd5b505050505050565b61290481565b61066c610c41565b6001600160a01b031661067d6107f2565b6001600160a01b0316146106c6576040805162461bcd60e51b815260206004820181905260248201526000805160206114e5833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031690565b7f8c7dc6f54401600ae78b31aec3dec125cfa5b7bcbf4ff3cbc5bfd818ba082b49838360405161075092919061120d565b60405180910390a15050505050565b610767610c41565b6001600160a01b03166107786107f2565b6001600160a01b0316146107c1576040805162461bcd60e51b815260206004820181905260248201526000805160206114e5833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6000546001600160a01b031690565b60606040518060600160405280602181526020016114c460219139905090565b61082e60208201826113f1565b61083f9060c081019060a001610f9c565b6002546001600160a01b0390811691161461086c5760405162461bcd60e51b815260040161015a906112f9565b61087581610c45565b50565b610880610f16565b5060408051608081018252620249f08152620186a060208201526201adb091810191909152612904606082015290565b61c35081565b6201adb081565b6001546001600160a01b03166108e55760405162461bcd60e51b815260040161015a906112c2565b60015460405163aa67c91960e01b81526001600160a01b039091169063aa67c9199034906109179030906004016111f9565b6000604051808303818588803b15801561093057600080fd5b505af1158015610944573d6000803e3d6000fd5b5050505050565b610953610c41565b6001600160a01b03166109646107f2565b6001600160a01b0316146109ad576040805162461bcd60e51b815260206004820181905260248201526000805160206114e5833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b620249f081565b6109de610c41565b6001600160a01b03166109ef6107f2565b6001600160a01b031614610a38576040805162461bcd60e51b815260206004820181905260248201526000805160206114e5833981519152604482015290519081900360640190fd5b6001600160a01b038116610a7d5760405162461bcd60e51b815260040180806020018281038252602681526020018061145a6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b620186a081565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610b109030906004016111f9565b60206040518083038186803b158015610b2857600080fd5b505afa158015610b3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b60919061113b565b9050610b6c8183610596565b5050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b60008151604114610c19576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a610c3786828585610d98565b9695505050505050565b3390565b600080610c5283806113dc565b610c63906040810190602001610f9c565b6001600160a01b031663572b6c0560e01b610c8160208601866113f1565b610c929060c081019060a001610f9c565b604051602401610ca291906111f9565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610ce091906111ae565b600060405180830381855afa9150503d8060008114610d1b576040519150601f19603f3d011682016040523d82523d6000602084013e610d20565b606091505b509150915081610d425760405162461bcd60e51b815260040161015a9061128b565b8051602014610d635760405162461bcd60e51b815260040161015a90611330565b80806020019051810190610d779190610fbf565b610d935760405162461bcd60e51b815260040161015a90611254565b505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610df95760405162461bcd60e51b81526004018080602001828103825260228152602001806114806022913960400191505060405180910390fd5b8360ff16601b1480610e0e57508360ff16601c145b610e495760405162461bcd60e51b81526004018080602001828103825260228152602001806114a26022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610ea5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f0d576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60008083601f840112610f4f578182fd5b50813567ffffffffffffffff811115610f66578182fd5b602083019150836020828501011115610f7e57600080fd5b9250929050565b600060408284031215610f96578081fd5b50919050565b600060208284031215610fad578081fd5b8135610fb881611436565b9392505050565b600060208284031215610fd0578081fd5b8151610fb88161144b565b600080600080600060808688031215610ff2578081fd5b853567ffffffffffffffff80821115611009578283fd5b61101589838a01610f3e565b90975095506020880135915061102a8261144b565b9093506040870135925060608701359080821115611046578283fd5b5086016101008189031215611059578182fd5b809150509295509295909350565b600060208284031215611078578081fd5b813567ffffffffffffffff81111561108e578182fd5b61109a84828501610f85565b949350505050565b600080600080600080608087890312156110ba578081fd5b863567ffffffffffffffff808211156110d1578283fd5b6110dd8a838b01610f85565b975060208901359150808211156110f2578283fd5b6110fe8a838b01610f3e565b90975095506040890135915080821115611116578283fd5b5061112389828a01610f3e565b979a9699509497949695606090950135949350505050565b60006020828403121561114c578081fd5b5051919050565b60008060408385031215611165578182fd5b82359150602083013561117781611436565b809150509250929050565b6000815180845261119a816020860160208601611406565b601f01601f19169290920160200192915050565b600082516111c0818460208701611406565b9190910192915050565b684920617070726f766560b81b815260609190911b6bffffffffffffffffffffffff19166009820152601d0190565b6001600160a01b0391909116815260200190565b9115158252602082015260400190565b6000604082526112306040830185611182565b905082151560208301529392505050565b600060208252610fb86020830184611182565b6020808252601f908201527f696e76616c696420666f7277617264657220666f7220726563697069656e7400604082015260600190565b6020808252601c908201527f697354727573746564466f727761726465723a20726576657274656400000000604082015260600190565b60208082526019908201527f72656c6179206875622061646472657373206e6f742073657400000000000000604082015260600190565b60208082526018908201527f466f72776172646572206973206e6f7420747275737465640000000000000000604082015260600190565b6020808252818101527f697354727573746564466f727761726465723a2062616420726573706f6e7365604082015260600190565b6020808252601290820152711d195cdd0e881b9bdd08185c1c1c9bdd995960721b604082015260600190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b90815260200190565b9182526001600160a01b0316602082015260400190565b6000823560de198336030181126111c0578182fd5b6000823560fe198336030181126111c0578182fd5b60005b83811015611421578181015183820152602001611409565b83811115611430576000848401525b50505050565b6001600160a01b038116811461087557600080fd5b801515811461087557600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565322e322e302b6f70656e67736e2e746573742d7065612e697061796d61737465724f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122052b467d52e5863adeefc6ba41e70a244e5b93e2f5935bfd47d46a7d124ee3b0264736f6c63430007060033",
    "deployedBytecode": "0x60806040526004361061012d5760003560e01c8063921276ea116100ab578063d0e30db01161006f578063d0e30db01461038d578063da74222814610395578063df463a66146103b5578063f2fde38b146103ca578063f9c002f7146103ea578063fa09e630146103ff576101c9565b8063921276ea146102ff578063a5dcd07b14610321578063b039a88f14610341578063b90b41cf14610363578063bbdaa3c914610378576101c9565b806374e861d6116100f257806374e861d61461027357806376fa01c3146102955780637bb05264146102b55780637da0a877146102d55780638da5cb5b146102ea576101c9565b8062be5dd4146101ce5780632afe31c1146102055780632d14c4b7146102275780635c5e3db114610249578063715018a61461025e576101c9565b366101c9576001546001600160a01b03166101635760405162461bcd60e51b815260040161015a906112c2565b60405180910390fd5b60015460405163aa67c91960e01b81526001600160a01b039091169063aa67c9199034906101959030906004016111f9565b6000604051808303818588803b1580156101ae57600080fd5b505af11580156101c2573d6000803e3d6000fd5b5050505050005b600080fd5b3480156101da57600080fd5b506101ee6101e93660046110a2565b61041f565b6040516101fc92919061121d565b60405180910390f35b34801561021157600080fd5b5061021a610510565b6040516101fc91906113bc565b34801561023357600080fd5b50610247610242366004611153565b610596565b005b34801561025557600080fd5b5061021a61065e565b34801561026a57600080fd5b50610247610664565b34801561027f57600080fd5b50610288610710565b6040516101fc91906111f9565b3480156102a157600080fd5b506102476102b0366004610fdb565b61071f565b3480156102c157600080fd5b506102476102d0366004610f9c565b61075f565b3480156102e157600080fd5b506102886107e3565b3480156102f657600080fd5b506102886107f2565b34801561030b57600080fd5b50610314610801565b6040516101fc9190611241565b34801561032d57600080fd5b5061024761033c366004611067565b610821565b34801561034d57600080fd5b50610356610878565b6040516101fc9190611391565b34801561036f57600080fd5b5061021a6108b0565b34801561038457600080fd5b5061021a6108b6565b6102476108bd565b3480156103a157600080fd5b506102476103b0366004610f9c565b61094b565b3480156103c157600080fd5b5061021a6109cf565b3480156103d657600080fd5b506102476103e5366004610f9c565b6109d6565b3480156103f657600080fd5b5061021a610ad8565b34801561040b57600080fd5b5061024761041a366004610f9c565b610adf565b6060600061042c88610821565b60006104b686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104b0925061047791508d9050806113dc565b610485906020810190610f9c565b60405160200161049591906111ca565b60405160208183030381529060405280519060200120610b70565b90610bc1565b90506104c06107f2565b6001600160a01b0316816001600160a01b0316146104f05760405162461bcd60e51b815260040161015a90611365565b505060408051602081019091526000808252909150965096945050505050565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906105419030906004016111f9565b60206040518083038186803b15801561055957600080fd5b505afa15801561056d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610591919061113b565b905090565b61059e610c41565b6001600160a01b03166105af6107f2565b6001600160a01b0316146105f8576040805162461bcd60e51b815260206004820181905260248201526000805160206114e5833981519152604482015290519081900360640190fd5b600154604051627b8a6760e11b81526001600160a01b039091169062f714ce9061062890859085906004016113c5565b600060405180830381600087803b15801561064257600080fd5b505af1158015610656573d6000803e3d6000fd5b505050505050565b61290481565b61066c610c41565b6001600160a01b031661067d6107f2565b6001600160a01b0316146106c6576040805162461bcd60e51b815260206004820181905260248201526000805160206114e5833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031690565b7f8c7dc6f54401600ae78b31aec3dec125cfa5b7bcbf4ff3cbc5bfd818ba082b49838360405161075092919061120d565b60405180910390a15050505050565b610767610c41565b6001600160a01b03166107786107f2565b6001600160a01b0316146107c1576040805162461bcd60e51b815260206004820181905260248201526000805160206114e5833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6000546001600160a01b031690565b60606040518060600160405280602181526020016114c460219139905090565b61082e60208201826113f1565b61083f9060c081019060a001610f9c565b6002546001600160a01b0390811691161461086c5760405162461bcd60e51b815260040161015a906112f9565b61087581610c45565b50565b610880610f16565b5060408051608081018252620249f08152620186a060208201526201adb091810191909152612904606082015290565b61c35081565b6201adb081565b6001546001600160a01b03166108e55760405162461bcd60e51b815260040161015a906112c2565b60015460405163aa67c91960e01b81526001600160a01b039091169063aa67c9199034906109179030906004016111f9565b6000604051808303818588803b15801561093057600080fd5b505af1158015610944573d6000803e3d6000fd5b5050505050565b610953610c41565b6001600160a01b03166109646107f2565b6001600160a01b0316146109ad576040805162461bcd60e51b815260206004820181905260248201526000805160206114e5833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b620249f081565b6109de610c41565b6001600160a01b03166109ef6107f2565b6001600160a01b031614610a38576040805162461bcd60e51b815260206004820181905260248201526000805160206114e5833981519152604482015290519081900360640190fd5b6001600160a01b038116610a7d5760405162461bcd60e51b815260040180806020018281038252602681526020018061145a6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b620186a081565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610b109030906004016111f9565b60206040518083038186803b158015610b2857600080fd5b505afa158015610b3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b60919061113b565b9050610b6c8183610596565b5050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b60008151604114610c19576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a610c3786828585610d98565b9695505050505050565b3390565b600080610c5283806113dc565b610c63906040810190602001610f9c565b6001600160a01b031663572b6c0560e01b610c8160208601866113f1565b610c929060c081019060a001610f9c565b604051602401610ca291906111f9565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610ce091906111ae565b600060405180830381855afa9150503d8060008114610d1b576040519150601f19603f3d011682016040523d82523d6000602084013e610d20565b606091505b509150915081610d425760405162461bcd60e51b815260040161015a9061128b565b8051602014610d635760405162461bcd60e51b815260040161015a90611330565b80806020019051810190610d779190610fbf565b610d935760405162461bcd60e51b815260040161015a90611254565b505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610df95760405162461bcd60e51b81526004018080602001828103825260228152602001806114806022913960400191505060405180910390fd5b8360ff16601b1480610e0e57508360ff16601c145b610e495760405162461bcd60e51b81526004018080602001828103825260228152602001806114a26022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610ea5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f0d576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60008083601f840112610f4f578182fd5b50813567ffffffffffffffff811115610f66578182fd5b602083019150836020828501011115610f7e57600080fd5b9250929050565b600060408284031215610f96578081fd5b50919050565b600060208284031215610fad578081fd5b8135610fb881611436565b9392505050565b600060208284031215610fd0578081fd5b8151610fb88161144b565b600080600080600060808688031215610ff2578081fd5b853567ffffffffffffffff80821115611009578283fd5b61101589838a01610f3e565b90975095506020880135915061102a8261144b565b9093506040870135925060608701359080821115611046578283fd5b5086016101008189031215611059578182fd5b809150509295509295909350565b600060208284031215611078578081fd5b813567ffffffffffffffff81111561108e578182fd5b61109a84828501610f85565b949350505050565b600080600080600080608087890312156110ba578081fd5b863567ffffffffffffffff808211156110d1578283fd5b6110dd8a838b01610f85565b975060208901359150808211156110f2578283fd5b6110fe8a838b01610f3e565b90975095506040890135915080821115611116578283fd5b5061112389828a01610f3e565b979a9699509497949695606090950135949350505050565b60006020828403121561114c578081fd5b5051919050565b60008060408385031215611165578182fd5b82359150602083013561117781611436565b809150509250929050565b6000815180845261119a816020860160208601611406565b601f01601f19169290920160200192915050565b600082516111c0818460208701611406565b9190910192915050565b684920617070726f766560b81b815260609190911b6bffffffffffffffffffffffff19166009820152601d0190565b6001600160a01b0391909116815260200190565b9115158252602082015260400190565b6000604082526112306040830185611182565b905082151560208301529392505050565b600060208252610fb86020830184611182565b6020808252601f908201527f696e76616c696420666f7277617264657220666f7220726563697069656e7400604082015260600190565b6020808252601c908201527f697354727573746564466f727761726465723a20726576657274656400000000604082015260600190565b60208082526019908201527f72656c6179206875622061646472657373206e6f742073657400000000000000604082015260600190565b60208082526018908201527f466f72776172646572206973206e6f7420747275737465640000000000000000604082015260600190565b6020808252818101527f697354727573746564466f727761726465723a2062616420726573706f6e7365604082015260600190565b6020808252601290820152711d195cdd0e881b9bdd08185c1c1c9bdd995960721b604082015260600190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b90815260200190565b9182526001600160a01b0316602082015260400190565b6000823560de198336030181126111c0578182fd5b6000823560fe198336030181126111c0578182fd5b60005b83811015611421578181015183820152602001611409565b83811115611430576000848401525b50505050565b6001600160a01b038116811461087557600080fd5b801515811461087557600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565322e322e302b6f70656e67736e2e746573742d7065612e697061796d61737465724f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122052b467d52e5863adeefc6ba41e70a244e5b93e2f5935bfd47d46a7d124ee3b0264736f6c63430007060033",
    "immutableReferences": {},
    "sourceMap": "193:825:19:-:0;;;;;;;;;;;;-1:-1:-1;888:17:36;908:12;:10;:12::i;:::-;930:6;:18;;-1:-1:-1;;;;;;930:18:36;-1:-1:-1;;;;;930:18:36;;;;;;;963:43;;930:18;;-1:-1:-1;930:18:36;963:43;;930:6;;963:43;850:163;193:825:19;;598:104:39;685:10;598:104;:::o;193:825:19:-;;;;;;;",
    "deployedSourceMap": "193:825:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2907:8:0;;-1:-1:-1;;;;;2907:8:0;2891:69;;;;-1:-1:-1;;;2891:69:0;;;;;;;:::i;:::-;;;;;;;;;2970:8;;:51;;-1:-1:-1;;;2970:51:0;;-1:-1:-1;;;;;2970:8:0;;;;:19;;2996:9;;2970:51;;3015:4;;2970:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;193:825:19;;;;;413:603;;;;;;;;;;-1:-1:-1;413:603:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2524:139:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3073:::-;;;;;;;;;;-1:-1:-1;3073:139:0;;;;;:::i;:::-;;:::i;:::-;;1158:51;;;;;;;;;;;;;:::i;1721:145:36:-;;;;;;;;;;;;;:::i;613:102:0:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;924:331:18:-;;;;;;;;;;-1:-1:-1;924:331:18;;;;;:::i;:::-;;:::i;2271:84:0:-;;;;;;;;;;-1:-1:-1;2271:84:0;;;;;:::i;:::-;;:::i;563:43::-;;;;;;;;;;;;;:::i;1089:85:36:-;;;;;;;;;;;;;:::i;221:141:18:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1743:273:0:-;;;;;;;;;;-1:-1:-1;1743:273:0;;;;;:::i;:::-;;:::i;1216:362::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;786:54::-;;;;;;;;;;;;;:::i;981:60::-;;;;;;;;;;;;;:::i;1261:181:18:-;;;:::i;2361:113:0:-;;;;;;;;;;-1:-1:-1;2361:113:0;;;;;:::i;:::-;;:::i;1047:105::-;;;;;;;;;;;;;:::i;2015:240:36:-;;;;;;;;;;-1:-1:-1;2015:240:36;;;;;:::i;:::-;;:::i;916:59:0:-;;;;;;;;;;;;;:::i;1448:180:18:-;;;;;;;;;;-1:-1:-1;1448:180:18;;;;;:::i;:::-;;:::i;413:603:19:-;647:12;661:4;714:30;731:12;714:16;:30::i;:::-;755:14;784:140;911:12;;784:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;784:105:19;;-1:-1:-1;824:20:19;;-1:-1:-1;824:12:19;;-1:-1:-1;824:12:19;:20;:::i;:::-;:25;;;;;;;:::i;:::-;794:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;784:67;;;;;;:103;:105::i;:::-;:126;;:140::i;:::-;755:169;;952:7;:5;:7::i;:::-;-1:-1:-1;;;;;942:17:19;:6;-1:-1:-1;;;;;942:17:19;;934:48;;;;-1:-1:-1;;;934:48:19;;;;;;;:::i;:::-;-1:-1:-1;;992:17:19;;;;;;;;;1003:5;992:17;;;;;-1:-1:-1;413:603:19;;;;;;;;;:::o;2524:139:0:-;2623:8;;:33;;-1:-1:-1;;;2623:33:0;;2600:4;;-1:-1:-1;;;;;2623:8:0;;:18;;:33;;2650:4;;2623:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2616:40;;2524:139;:::o;3073:::-;1312:12:36;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;3172:8:0::1;::::0;:33:::1;::::0;-1:-1:-1;;;3172:33:0;;-1:-1:-1;;;;;3172:8:0;;::::1;::::0;:17:::1;::::0;:33:::1;::::0;3190:6;;3198;;3172:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3073:139:::0;;:::o;1158:51::-;1204:5;1158:51;:::o;1721:145:36:-;1312:12;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;1827:1:::1;1811:6:::0;;1790:40:::1;::::0;-1:-1:-1;;;;;1811:6:36;;::::1;::::0;1790:40:::1;::::0;1827:1;;1790:40:::1;1857:1;1840:19:::0;;-1:-1:-1;;;;;;1840:19:36::1;::::0;;1721:145::o;613:102:0:-;699:8;;-1:-1:-1;;;;;699:8:0;613:102;:::o;924:331:18:-;1197:51;1221:7;1230:17;1197:51;;;;;;;:::i;:::-;;;;;;;;924:331;;;;;:::o;2271:84:0:-;1312:12:36;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;2334:8:0::1;:14:::0;;-1:-1:-1;;;;;;2334:14:0::1;-1:-1:-1::0;;;;;2334:14:0;;;::::1;::::0;;;::::1;::::0;;2271:84::o;563:43::-;;;-1:-1:-1;;;;;563:43:0;;:::o;1089:85:36:-;1135:7;1161:6;-1:-1:-1;;;;;1161:6:36;1089:85;:::o;221:141:18:-;289:13;313:42;;;;;;;;;;;;;;;;;;;221:141;:::o;1743:273:0:-;1885:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;1864:16;;-1:-1:-1;;;;;1864:16:0;;;1856:61;;;1848:98;;;;-1:-1:-1;;;1848:98:0;;;;;;;:::i;:::-;1956:53;1996:12;1956:39;:53::i;:::-;1743:273;:::o;1216:362::-;1314:41;;:::i;:::-;-1:-1:-1;1379:192:0;;;;;;;;1101:51;1379:192;;969:6;1379:192;;;;1035:6;1379:192;;;;;;;1204:5;1379:192;;;;1216:362;:::o;786:54::-;835:5;786:54;:::o;981:60::-;1035:6;981:60;:::o;1261:181:18:-;1321:8;;-1:-1:-1;;;;;1321:8:18;1305:69;;;;-1:-1:-1;;;1305:69:18;;;;;;;:::i;:::-;1384:8;;:51;;-1:-1:-1;;;1384:51:18;;-1:-1:-1;;;;;1384:8:18;;;;:19;;1410:9;;1384:51;;1429:4;;1384:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1261:181::o;2361:113:0:-;1312:12:36;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;2439:16:0::1;:28:::0;;-1:-1:-1;;;;;;2439:28:0::1;-1:-1:-1::0;;;;;2439:28:0;;;::::1;::::0;;;::::1;::::0;;2361:113::o;1047:105::-;1101:51;1047:105;:::o;2015:240:36:-;1312:12;:10;:12::i;:::-;-1:-1:-1;;;;;1301:23:36;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1301:23:36;;1293:68;;;;;-1:-1:-1;;;1293:68:36;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1293:68:36;;;;;;;;;;;;;;;-1:-1:-1;;;;;2103:22:36;::::1;2095:73;;;;-1:-1:-1::0;;;2095:73:36::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:6;::::0;;2183:38:::1;::::0;-1:-1:-1;;;;;2183:38:36;;::::1;::::0;2204:6;::::1;::::0;2183:38:::1;::::0;::::1;2231:6;:17:::0;;-1:-1:-1;;;;;;2231:17:36::1;-1:-1:-1::0;;;;;2231:17:36;;;::::1;::::0;;;::::1;::::0;;2015:240::o;916:59:0:-;969:6;916:59;:::o;1448:180:18:-;1532:8;;:33;;-1:-1:-1;;;1532:33:18;;1515:14;;-1:-1:-1;;;;;1532:8:18;;:18;;:33;;1559:4;;1532:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1515:50;;1575:46;1601:6;1609:11;1575:25;:46::i;:::-;1448:180;;:::o;3638:265:37:-;3837:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3827:69;;;;;;3638:265::o;1072:740::-;1150:7;1211:9;:16;1231:2;1211:22;1207:94;;1249:41;;;-1:-1:-1;;;1249:41:37;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:94;1651:4;1636:20;;1630:27;1696:4;1681:20;;1675:27;1749:4;1734:20;;1728:27;1367:9;1720:36;1783:22;1791:4;1720:36;1630:27;1675;1783:7;:22::i;:::-;1776:29;1072:740;-1:-1:-1;;;;;;1072:740:37:o;598:104:39:-;685:10;598:104;:::o;2052:538:27:-;2154:12;;2188:20;:12;;:20;:::i;:::-;:23;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2188:34:27;-1:-1:-1;;;2321:22:27;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;2236:131;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2236:131:27;;;;;;;;;;;;;;-1:-1:-1;;;;;2236:131:27;-1:-1:-1;;;;;;2236:131:27;;;;;;;;;;2188:189;;;;2236:131;2188:189;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:224;;;;2395:7;2387:48;;;;-1:-1:-1;;;2387:48:27;;;;;;;:::i;:::-;2453:3;:10;2467:2;2453:16;2445:61;;;;-1:-1:-1;;;2445:61:27;;;;;;;:::i;:::-;2535:3;2524:23;;;;;;;;;;;;:::i;:::-;2516:67;;;;-1:-1:-1;;;2516:67:27;;;;;;;:::i;:::-;2052:538;;;:::o;1960:1414:37:-;2045:7;2960:66;2946:80;;;2938:127;;;;-1:-1:-1;;;2938:127:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3083:1;:7;;3088:2;3083:7;:18;;;;3094:1;:7;;3099:2;3094:7;3083:18;3075:65;;;;-1:-1:-1;;;3075:65:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3235:14;3252:24;3262:4;3268:1;3271;3274;3252:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3252:24:37;;-1:-1:-1;;3252:24:37;;;-1:-1:-1;;;;;;;3294:20:37;;3286:57;;;;;-1:-1:-1;;;3286:57:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;3361:6;1960:1414;-1:-1:-1;;;;;1960:1414:37:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:377:40:-;;;131:3;124:4;116:6;112:17;108:27;98:2;;156:8;146;139:26;98:2;-1:-1:-1;186:20:40;;229:18;218:30;;215:2;;;268:8;258;251:26;215:2;312:4;304:6;300:17;288:29;;364:3;357:4;348:6;340;336:19;332:30;329:39;326:2;;;381:1;378;371:12;326:2;88:303;;;;;:::o;396:171::-;;509:2;500:6;495:3;491:16;487:25;484:2;;;529:5;522;515:20;484:2;-1:-1:-1;555:6:40;474:93;-1:-1:-1;474:93:40:o;572:259::-;;684:2;672:9;663:7;659:23;655:32;652:2;;;705:6;697;690:22;652:2;749:9;736:23;768:33;795:5;768:33;:::i;:::-;820:5;642:189;-1:-1:-1;;;642:189:40:o;1108:257::-;;1228:2;1216:9;1207:7;1203:23;1199:32;1196:2;;;1249:6;1241;1234:22;1196:2;1286:9;1280:16;1305:30;1329:5;1305:30;:::i;1370:939::-;;;;;;1578:3;1566:9;1557:7;1553:23;1549:33;1546:2;;;1600:6;1592;1585:22;1546:2;1645:9;1632:23;1674:18;1715:2;1707:6;1704:14;1701:2;;;1736:6;1728;1721:22;1701:2;1780:60;1832:7;1823:6;1812:9;1808:22;1780:60;:::i;:::-;1859:8;;-1:-1:-1;1754:86:40;-1:-1:-1;1944:2:40;1929:18;;1916:32;;-1:-1:-1;1957:30:40;1916:32;1957:30;:::i;:::-;2006:5;;-1:-1:-1;2058:2:40;2043:18;;2030:32;;-1:-1:-1;2115:2:40;2100:18;;2087:32;;2131:16;;;2128:2;;;2165:6;2157;2150:22;2128:2;-1:-1:-1;2193:24:40;;2251:3;2233:16;;;2229:26;2226:2;;;2273:6;2265;2258:22;2226:2;2301;2291:12;;;1536:773;;;;;;;;:::o;2879:389::-;;3023:2;3011:9;3002:7;2998:23;2994:32;2991:2;;;3044:6;3036;3029:22;2991:2;3089:9;3076:23;3122:18;3114:6;3111:30;3108:2;;;3159:6;3151;3144:22;3108:2;3187:75;3254:7;3245:6;3234:9;3230:22;3187:75;:::i;:::-;3177:85;2981:287;-1:-1:-1;;;;2981:287:40:o;3273:1077::-;;;;;;;3506:3;3494:9;3485:7;3481:23;3477:33;3474:2;;;3528:6;3520;3513:22;3474:2;3573:9;3560:23;3602:18;3643:2;3635:6;3632:14;3629:2;;;3664:6;3656;3649:22;3629:2;3692:75;3759:7;3750:6;3739:9;3735:22;3692:75;:::i;:::-;3682:85;;3820:2;3809:9;3805:18;3792:32;3776:48;;3849:2;3839:8;3836:16;3833:2;;;3870:6;3862;3855:22;3833:2;3914:62;3968:7;3957:8;3946:9;3942:24;3914:62;:::i;:::-;3995:8;;-1:-1:-1;3888:88:40;-1:-1:-1;4083:2:40;4068:18;;4055:32;;-1:-1:-1;4099:16:40;;;4096:2;;;4133:6;4125;4118:22;4096:2;;4177:62;4231:7;4220:8;4209:9;4205:24;4177:62;:::i;:::-;3464:886;;;;-1:-1:-1;3464:886:40;;;;;4340:2;4325:18;;;4312:32;;3464:886;-1:-1:-1;;;;3464:886:40:o;4355:194::-;;4478:2;4466:9;4457:7;4453:23;4449:32;4446:2;;;4499:6;4491;4484:22;4446:2;-1:-1:-1;4527:16:40;;4436:113;-1:-1:-1;4436:113:40:o;4554:335::-;;;4691:2;4679:9;4670:7;4666:23;4662:32;4659:2;;;4712:6;4704;4697:22;4659:2;4753:9;4740:23;4730:33;;4813:2;4802:9;4798:18;4785:32;4826:33;4853:5;4826:33;:::i;:::-;4878:5;4868:15;;;4649:240;;;;;:::o;4894:259::-;;4975:5;4969:12;5002:6;4997:3;4990:19;5018:63;5074:6;5067:4;5062:3;5058:14;5051:4;5044:5;5040:16;5018:63;:::i;:::-;5135:2;5114:15;-1:-1:-1;;5110:29:40;5101:39;;;;5142:4;5097:50;;4945:208;-1:-1:-1;;4945:208:40:o;5158:274::-;;5325:6;5319:13;5341:53;5387:6;5382:3;5375:4;5367:6;5363:17;5341:53;:::i;:::-;5410:16;;;;;5295:137;-1:-1:-1;;5295:137:40:o;5437:371::-;-1:-1:-1;;;5667:24:40;;5728:2;5724:15;;;;-1:-1:-1;;5720:53:40;5716:1;5707:11;;5700:74;5799:2;5790:12;;5657:151::o;5813:203::-;-1:-1:-1;;;;;5977:32:40;;;;5959:51;;5947:2;5932:18;;5914:102::o;6237:258::-;6430:14;;6423:22;6405:41;;6477:2;6462:18;;6455:34;6393:2;6378:18;;6360:135::o;6500:300::-;;6669:2;6658:9;6651:21;6689:46;6731:2;6720:9;6716:18;6708:6;6689:46;:::i;:::-;6681:54;;6785:6;6778:14;6771:22;6766:2;6755:9;6751:18;6744:50;6641:159;;;;;:::o;7032:221::-;;7181:2;7170:9;7163:21;7201:46;7243:2;7232:9;7228:18;7220:6;7201:46;:::i;7258:355::-;7460:2;7442:21;;;7499:2;7479:18;;;7472:30;7538:33;7533:2;7518:18;;7511:61;7604:2;7589:18;;7432:181::o;7618:352::-;7820:2;7802:21;;;7859:2;7839:18;;;7832:30;7898;7893:2;7878:18;;7871:58;7961:2;7946:18;;7792:178::o;7975:349::-;8177:2;8159:21;;;8216:2;8196:18;;;8189:30;8255:27;8250:2;8235:18;;8228:55;8315:2;8300:18;;8149:175::o;8329:348::-;8531:2;8513:21;;;8570:2;8550:18;;;8543:30;8609:26;8604:2;8589:18;;8582:54;8668:2;8653:18;;8503:174::o;8682:356::-;8884:2;8866:21;;;8903:18;;;8896:30;8962:34;8957:2;8942:18;;8935:62;9029:2;9014:18;;8856:182::o;9043:342::-;9245:2;9227:21;;;9284:2;9264:18;;;9257:30;-1:-1:-1;;;9318:2:40;9303:18;;9296:48;9376:2;9361:18;;9217:168::o;9390:442::-;9623:13;;9605:32;;9693:4;9681:17;;;9675:24;9653:20;;;9646:54;9756:4;9744:17;;;9738:24;9716:20;;;9709:54;9819:4;9807:17;;;9801:24;9779:20;;;9772:54;;;;9592:3;9577:19;;9559:273::o;9837:177::-;9983:25;;;9971:2;9956:18;;9938:76::o;10019:290::-;10209:25;;;-1:-1:-1;;;;;10270:32:40;10265:2;10250:18;;10243:60;10197:2;10182:18;;10164:145::o;10314:338::-;;10472:11;10459:25;10566:3;10562:8;10551;10535:14;10531:29;10527:44;10507:18;10503:69;10493:2;;10589:4;10583;10576:18;10657:333;;10810:11;10797:25;10904:3;10900:8;10889;10873:14;10869:29;10865:44;10845:18;10841:69;10831:2;;10927:4;10921;10914:18;10995:258;11067:1;11077:113;11091:6;11088:1;11085:13;11077:113;;;11167:11;;;11161:18;11148:11;;;11141:39;11113:2;11106:10;11077:113;;;11208:6;11205:1;11202:13;11199:2;;;11243:1;11234:6;11229:3;11225:16;11218:27;11199:2;;11048:205;;;:::o;11258:133::-;-1:-1:-1;;;;;11335:31:40;;11325:42;;11315:2;;11381:1;11378;11371:12;11396:120;11484:5;11477:13;11470:21;11463:5;11460:32;11450:2;;11506:1;11503;11496:12",
    "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/cryptography/ECDSA.sol\";\n\nimport \"./TestPaymasterEverythingAccepted.sol\";\n\ncontract TestPaymasterOwnerSignature is TestPaymasterEverythingAccepted {\n    using ECDSA for bytes32;\n\n    /**\n     * This demonstrates how dapps can provide an off-chain signatures to relayed transactions.\n     */\n    function preRelayedCall(\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData,\n        uint256 maxPossibleGas\n    )\n    external\n    view\n    override\n    returns (bytes memory, bool) {\n        (signature, maxPossibleGas);\n        _verifyForwarder(relayRequest);\n\n        address signer =\n            keccak256(abi.encodePacked(\"I approve\", relayRequest.request.from))\n            .toEthSignedMessageHash()\n            .recover(approvalData);\n        require(signer == owner(), \"test: not approved\");\n        return (\"\",false);\n    }\n}\n",
    "sourcePath": "/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/test/TestPaymasterOwnerSignature.sol",
    "ast": {
        "absolutePath": "/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/test/TestPaymasterOwnerSignature.sol",
        "exportedSymbols": {
            "BasePaymaster": [
                187
            ],
            "Context": [
                7721
            ],
            "ECDSA": [
                7343
            ],
            "GsnEip712Library": [
                6021
            ],
            "GsnTypes": [
                6047
            ],
            "GsnUtils": [
                6094
            ],
            "IForwarder": [
                3440
            ],
            "IPaymaster": [
                3715
            ],
            "IRelayHub": [
                4054
            ],
            "IRelayRecipient": [
                4083
            ],
            "IStakeManager": [
                4246
            ],
            "MinLibBytes": [
                6209
            ],
            "Ownable": [
                7227
            ],
            "SafeMath": [
                7698
            ],
            "TestPaymasterEverythingAccepted": [
                4852
            ],
            "TestPaymasterOwnerSignature": [
                4918
            ]
        },
        "id": 4919,
        "license": "GPL-3.0-only",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 4854,
                "literals": [
                    "solidity",
                    "^",
                    "0.7",
                    ".6"
                ],
                "nodeType": "PragmaDirective",
                "src": "41:23:19"
            },
            {
                "id": 4855,
                "literals": [
                    "abicoder",
                    "v2"
                ],
                "nodeType": "PragmaDirective",
                "src": "65:19:19"
            },
            {
                "absolutePath": "@openzeppelin/contracts/cryptography/ECDSA.sol",
                "file": "@openzeppelin/contracts/cryptography/ECDSA.sol",
                "id": 4856,
                "nodeType": "ImportDirective",
                "scope": 4919,
                "sourceUnit": 7344,
                "src": "86:56:19",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/test/TestPaymasterEverythingAccepted.sol",
                "file": "./TestPaymasterEverythingAccepted.sol",
                "id": 4857,
                "nodeType": "ImportDirective",
                "scope": 4919,
                "sourceUnit": 4853,
                "src": "144:47:19",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4858,
                            "name": "TestPaymasterEverythingAccepted",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 4852,
                            "src": "233:31:19",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestPaymasterEverythingAccepted_$4852",
                                "typeString": "contract TestPaymasterEverythingAccepted"
                            }
                        },
                        "id": 4859,
                        "nodeType": "InheritanceSpecifier",
                        "src": "233:31:19"
                    }
                ],
                "contractDependencies": [
                    187,
                    3715,
                    4852,
                    7227,
                    7721
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 4918,
                "linearizedBaseContracts": [
                    4918,
                    4852,
                    187,
                    7227,
                    7721,
                    3715
                ],
                "name": "TestPaymasterOwnerSignature",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 4862,
                        "libraryName": {
                            "id": 4860,
                            "name": "ECDSA",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 7343,
                            "src": "277:5:19",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ECDSA_$7343",
                                "typeString": "library ECDSA"
                            }
                        },
                        "nodeType": "UsingForDirective",
                        "src": "271:24:19",
                        "typeName": {
                            "id": 4861,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "287:7:19",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        }
                    },
                    {
                        "baseFunctions": [
                            4778
                        ],
                        "body": {
                            "id": 4916,
                            "nodeType": "Block",
                            "src": "667:349:19",
                            "statements": [
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "id": 4879,
                                                "name": "signature",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4867,
                                                "src": "678:9:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            },
                                            {
                                                "id": 4880,
                                                "name": "maxPossibleGas",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4871,
                                                "src": "689:14:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "id": 4881,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "677:27:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bytes_calldata_ptr_$_t_uint256_$",
                                            "typeString": "tuple(bytes calldata,uint256)"
                                        }
                                    },
                                    "id": 4882,
                                    "nodeType": "ExpressionStatement",
                                    "src": "677:27:19"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 4884,
                                                "name": "relayRequest",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4865,
                                                "src": "731:12:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_RelayRequest_$6046_calldata_ptr",
                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_RelayRequest_$6046_calldata_ptr",
                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                }
                                            ],
                                            "id": 4883,
                                            "name": "_verifyForwarder",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 86,
                                            "src": "714:16:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_RelayRequest_$6046_calldata_ptr_$returns$__$",
                                                "typeString": "function (struct GsnTypes.RelayRequest calldata) view"
                                            }
                                        },
                                        "id": 4885,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "714:30:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4886,
                                    "nodeType": "ExpressionStatement",
                                    "src": "714:30:19"
                                },
                                {
                                    "assignments": [
                                        4888
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 4888,
                                            "mutability": "mutable",
                                            "name": "signer",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 4916,
                                            "src": "755:14:19",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 4887,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "755:7:19",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 4903,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 4901,
                                                "name": "approvalData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4869,
                                                "src": "911:12:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "hexValue": "4920617070726f7665",
                                                                        "id": 4892,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "811:11:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_03a2668fd26a26a35630edd18b674c8942a272905d6b3bcb85a878fad357308e",
                                                                            "typeString": "literal_string \"I approve\""
                                                                        },
                                                                        "value": "I approve"
                                                                    },
                                                                    {
                                                                        "expression": {
                                                                            "expression": {
                                                                                "id": 4893,
                                                                                "name": "relayRequest",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 4865,
                                                                                "src": "824:12:19",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_RelayRequest_$6046_calldata_ptr",
                                                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                                                }
                                                                            },
                                                                            "id": 4894,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "request",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 6043,
                                                                            "src": "824:20:19",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_struct$_ForwardRequest_$3372_calldata_ptr",
                                                                                "typeString": "struct IForwarder.ForwardRequest calldata"
                                                                            }
                                                                        },
                                                                        "id": 4895,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "from",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 3359,
                                                                        "src": "824:25:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_03a2668fd26a26a35630edd18b674c8942a272905d6b3bcb85a878fad357308e",
                                                                            "typeString": "literal_string \"I approve\""
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 4890,
                                                                        "name": "abi",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967295,
                                                                        "src": "794:3:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_abi",
                                                                            "typeString": "abi"
                                                                        }
                                                                    },
                                                                    "id": 4891,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "encodePacked",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "794:16:19",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                        "typeString": "function () pure returns (bytes memory)"
                                                                    }
                                                                },
                                                                "id": 4896,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "794:56:19",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            ],
                                                            "id": 4889,
                                                            "name": "keccak256",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967288,
                                                            "src": "784:9:19",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                                            }
                                                        },
                                                        "id": 4897,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "784:67:19",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    "id": 4898,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "toEthSignedMessageHash",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 7342,
                                                    "src": "784:103:19",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                                                        "typeString": "function (bytes32) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 4899,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "784:105:19",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "id": 4900,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "recover",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 7268,
                                            "src": "784:126:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                                            }
                                        },
                                        "id": 4902,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "784:140:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "755:169:19"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 4908,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 4905,
                                                    "name": "signer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4888,
                                                    "src": "942:6:19",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 4906,
                                                        "name": "owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7162,
                                                        "src": "952:5:19",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                            "typeString": "function () view returns (address)"
                                                        }
                                                    },
                                                    "id": 4907,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "952:7:19",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "942:17:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "746573743a206e6f7420617070726f766564",
                                                "id": 4909,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "961:20:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_f1cc01e27b570ec7fc8efef8c7e724f1302d5dcbeae0b4745684b08f8d4c987d",
                                                    "typeString": "literal_string \"test: not approved\""
                                                },
                                                "value": "test: not approved"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_f1cc01e27b570ec7fc8efef8c7e724f1302d5dcbeae0b4745684b08f8d4c987d",
                                                    "typeString": "literal_string \"test: not approved\""
                                                }
                                            ],
                                            "id": 4904,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "934:7:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 4910,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "934:48:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4911,
                                    "nodeType": "ExpressionStatement",
                                    "src": "934:48:19"
                                },
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "hexValue": "",
                                                "id": 4912,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1000:2:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                            },
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 4913,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1003:5:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            }
                                        ],
                                        "id": 4914,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "999:10:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_bool_$",
                                            "typeString": "tuple(literal_string \"\",bool)"
                                        }
                                    },
                                    "functionReturnParameters": 4878,
                                    "id": 4915,
                                    "nodeType": "Return",
                                    "src": "992:17:19"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 4863,
                            "nodeType": "StructuredDocumentation",
                            "src": "301:107:19",
                            "text": " This demonstrates how dapps can provide an off-chain signatures to relayed transactions."
                        },
                        "functionSelector": "00be5dd4",
                        "id": 4917,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "preRelayedCall",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 4873,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "625:8:19"
                        },
                        "parameters": {
                            "id": 4872,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 4865,
                                    "mutability": "mutable",
                                    "name": "relayRequest",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "446:43:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RelayRequest_$6046_calldata_ptr",
                                        "typeString": "struct GsnTypes.RelayRequest"
                                    },
                                    "typeName": {
                                        "id": 4864,
                                        "name": "GsnTypes.RelayRequest",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 6046,
                                        "src": "446:21:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_RelayRequest_$6046_storage_ptr",
                                            "typeString": "struct GsnTypes.RelayRequest"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 4867,
                                    "mutability": "mutable",
                                    "name": "signature",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "499:24:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 4866,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "499:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 4869,
                                    "mutability": "mutable",
                                    "name": "approvalData",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "533:27:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 4868,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "533:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 4871,
                                    "mutability": "mutable",
                                    "name": "maxPossibleGas",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "570:22:19",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 4870,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "570:7:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "436:162:19"
                        },
                        "returnParameters": {
                            "id": 4878,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 4875,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "647:12:19",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 4874,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "647:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 4877,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "661:4:19",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 4876,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "661:4:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "646:20:19"
                        },
                        "scope": 4918,
                        "src": "413:603:19",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 4919,
                "src": "193:825:19"
            }
        ],
        "src": "41:978:19"
    },
    "legacyAST": {
        "absolutePath": "/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/test/TestPaymasterOwnerSignature.sol",
        "exportedSymbols": {
            "BasePaymaster": [
                187
            ],
            "Context": [
                7721
            ],
            "ECDSA": [
                7343
            ],
            "GsnEip712Library": [
                6021
            ],
            "GsnTypes": [
                6047
            ],
            "GsnUtils": [
                6094
            ],
            "IForwarder": [
                3440
            ],
            "IPaymaster": [
                3715
            ],
            "IRelayHub": [
                4054
            ],
            "IRelayRecipient": [
                4083
            ],
            "IStakeManager": [
                4246
            ],
            "MinLibBytes": [
                6209
            ],
            "Ownable": [
                7227
            ],
            "SafeMath": [
                7698
            ],
            "TestPaymasterEverythingAccepted": [
                4852
            ],
            "TestPaymasterOwnerSignature": [
                4918
            ]
        },
        "id": 4919,
        "license": "GPL-3.0-only",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 4854,
                "literals": [
                    "solidity",
                    "^",
                    "0.7",
                    ".6"
                ],
                "nodeType": "PragmaDirective",
                "src": "41:23:19"
            },
            {
                "id": 4855,
                "literals": [
                    "abicoder",
                    "v2"
                ],
                "nodeType": "PragmaDirective",
                "src": "65:19:19"
            },
            {
                "absolutePath": "@openzeppelin/contracts/cryptography/ECDSA.sol",
                "file": "@openzeppelin/contracts/cryptography/ECDSA.sol",
                "id": 4856,
                "nodeType": "ImportDirective",
                "scope": 4919,
                "sourceUnit": 7344,
                "src": "86:56:19",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/dror/IdeaProjects/gsn-ver222/packages/contracts/src/test/TestPaymasterEverythingAccepted.sol",
                "file": "./TestPaymasterEverythingAccepted.sol",
                "id": 4857,
                "nodeType": "ImportDirective",
                "scope": 4919,
                "sourceUnit": 4853,
                "src": "144:47:19",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4858,
                            "name": "TestPaymasterEverythingAccepted",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 4852,
                            "src": "233:31:19",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestPaymasterEverythingAccepted_$4852",
                                "typeString": "contract TestPaymasterEverythingAccepted"
                            }
                        },
                        "id": 4859,
                        "nodeType": "InheritanceSpecifier",
                        "src": "233:31:19"
                    }
                ],
                "contractDependencies": [
                    187,
                    3715,
                    4852,
                    7227,
                    7721
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 4918,
                "linearizedBaseContracts": [
                    4918,
                    4852,
                    187,
                    7227,
                    7721,
                    3715
                ],
                "name": "TestPaymasterOwnerSignature",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 4862,
                        "libraryName": {
                            "id": 4860,
                            "name": "ECDSA",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 7343,
                            "src": "277:5:19",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ECDSA_$7343",
                                "typeString": "library ECDSA"
                            }
                        },
                        "nodeType": "UsingForDirective",
                        "src": "271:24:19",
                        "typeName": {
                            "id": 4861,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "287:7:19",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        }
                    },
                    {
                        "baseFunctions": [
                            4778
                        ],
                        "body": {
                            "id": 4916,
                            "nodeType": "Block",
                            "src": "667:349:19",
                            "statements": [
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "id": 4879,
                                                "name": "signature",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4867,
                                                "src": "678:9:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            },
                                            {
                                                "id": 4880,
                                                "name": "maxPossibleGas",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4871,
                                                "src": "689:14:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "id": 4881,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "677:27:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bytes_calldata_ptr_$_t_uint256_$",
                                            "typeString": "tuple(bytes calldata,uint256)"
                                        }
                                    },
                                    "id": 4882,
                                    "nodeType": "ExpressionStatement",
                                    "src": "677:27:19"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 4884,
                                                "name": "relayRequest",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4865,
                                                "src": "731:12:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_RelayRequest_$6046_calldata_ptr",
                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_RelayRequest_$6046_calldata_ptr",
                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                }
                                            ],
                                            "id": 4883,
                                            "name": "_verifyForwarder",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 86,
                                            "src": "714:16:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_RelayRequest_$6046_calldata_ptr_$returns$__$",
                                                "typeString": "function (struct GsnTypes.RelayRequest calldata) view"
                                            }
                                        },
                                        "id": 4885,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "714:30:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4886,
                                    "nodeType": "ExpressionStatement",
                                    "src": "714:30:19"
                                },
                                {
                                    "assignments": [
                                        4888
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 4888,
                                            "mutability": "mutable",
                                            "name": "signer",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 4916,
                                            "src": "755:14:19",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 4887,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "755:7:19",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 4903,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 4901,
                                                "name": "approvalData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4869,
                                                "src": "911:12:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "hexValue": "4920617070726f7665",
                                                                        "id": 4892,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "811:11:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_03a2668fd26a26a35630edd18b674c8942a272905d6b3bcb85a878fad357308e",
                                                                            "typeString": "literal_string \"I approve\""
                                                                        },
                                                                        "value": "I approve"
                                                                    },
                                                                    {
                                                                        "expression": {
                                                                            "expression": {
                                                                                "id": 4893,
                                                                                "name": "relayRequest",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 4865,
                                                                                "src": "824:12:19",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_RelayRequest_$6046_calldata_ptr",
                                                                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                                                                }
                                                                            },
                                                                            "id": 4894,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "request",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 6043,
                                                                            "src": "824:20:19",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_struct$_ForwardRequest_$3372_calldata_ptr",
                                                                                "typeString": "struct IForwarder.ForwardRequest calldata"
                                                                            }
                                                                        },
                                                                        "id": 4895,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "from",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 3359,
                                                                        "src": "824:25:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_03a2668fd26a26a35630edd18b674c8942a272905d6b3bcb85a878fad357308e",
                                                                            "typeString": "literal_string \"I approve\""
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 4890,
                                                                        "name": "abi",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967295,
                                                                        "src": "794:3:19",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_abi",
                                                                            "typeString": "abi"
                                                                        }
                                                                    },
                                                                    "id": 4891,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "encodePacked",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "794:16:19",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                        "typeString": "function () pure returns (bytes memory)"
                                                                    }
                                                                },
                                                                "id": 4896,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "794:56:19",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            ],
                                                            "id": 4889,
                                                            "name": "keccak256",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967288,
                                                            "src": "784:9:19",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                                            }
                                                        },
                                                        "id": 4897,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "784:67:19",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    "id": 4898,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "toEthSignedMessageHash",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 7342,
                                                    "src": "784:103:19",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                                                        "typeString": "function (bytes32) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 4899,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "784:105:19",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "id": 4900,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "recover",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 7268,
                                            "src": "784:126:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                                            }
                                        },
                                        "id": 4902,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "784:140:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "755:169:19"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 4908,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 4905,
                                                    "name": "signer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4888,
                                                    "src": "942:6:19",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 4906,
                                                        "name": "owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7162,
                                                        "src": "952:5:19",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                            "typeString": "function () view returns (address)"
                                                        }
                                                    },
                                                    "id": 4907,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "952:7:19",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "942:17:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "746573743a206e6f7420617070726f766564",
                                                "id": 4909,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "961:20:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_f1cc01e27b570ec7fc8efef8c7e724f1302d5dcbeae0b4745684b08f8d4c987d",
                                                    "typeString": "literal_string \"test: not approved\""
                                                },
                                                "value": "test: not approved"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_f1cc01e27b570ec7fc8efef8c7e724f1302d5dcbeae0b4745684b08f8d4c987d",
                                                    "typeString": "literal_string \"test: not approved\""
                                                }
                                            ],
                                            "id": 4904,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "934:7:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 4910,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "934:48:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4911,
                                    "nodeType": "ExpressionStatement",
                                    "src": "934:48:19"
                                },
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "hexValue": "",
                                                "id": 4912,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1000:2:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                            },
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 4913,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1003:5:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            }
                                        ],
                                        "id": 4914,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "999:10:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_bool_$",
                                            "typeString": "tuple(literal_string \"\",bool)"
                                        }
                                    },
                                    "functionReturnParameters": 4878,
                                    "id": 4915,
                                    "nodeType": "Return",
                                    "src": "992:17:19"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 4863,
                            "nodeType": "StructuredDocumentation",
                            "src": "301:107:19",
                            "text": " This demonstrates how dapps can provide an off-chain signatures to relayed transactions."
                        },
                        "functionSelector": "00be5dd4",
                        "id": 4917,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "preRelayedCall",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 4873,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "625:8:19"
                        },
                        "parameters": {
                            "id": 4872,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 4865,
                                    "mutability": "mutable",
                                    "name": "relayRequest",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "446:43:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RelayRequest_$6046_calldata_ptr",
                                        "typeString": "struct GsnTypes.RelayRequest"
                                    },
                                    "typeName": {
                                        "id": 4864,
                                        "name": "GsnTypes.RelayRequest",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 6046,
                                        "src": "446:21:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_RelayRequest_$6046_storage_ptr",
                                            "typeString": "struct GsnTypes.RelayRequest"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 4867,
                                    "mutability": "mutable",
                                    "name": "signature",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "499:24:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 4866,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "499:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 4869,
                                    "mutability": "mutable",
                                    "name": "approvalData",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "533:27:19",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 4868,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "533:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 4871,
                                    "mutability": "mutable",
                                    "name": "maxPossibleGas",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "570:22:19",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 4870,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "570:7:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "436:162:19"
                        },
                        "returnParameters": {
                            "id": 4878,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 4875,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "647:12:19",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 4874,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "647:5:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 4877,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4917,
                                    "src": "661:4:19",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 4876,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "661:4:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "646:20:19"
                        },
                        "scope": 4918,
                        "src": "413:603:19",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 4919,
                "src": "193:825:19"
            }
        ],
        "src": "41:978:19"
    },
    "compiler": {
        "name": "solc",
        "version": "0.7.6+commit.7338295f.Emscripten.clang"
    },
    "networks": {},
    "schemaVersion": "3.1.0",
    "updatedAt": "2021-06-03T16:04:21.555Z",
    "devdoc": {
        "kind": "dev",
        "methods": {
            "owner()": {
                "details": "Returns the address of the current owner."
            },
            "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "params": {
                    "context": "- the call context, as returned by the preRelayedCall",
                    "gasUseWithoutPost": "- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.",
                    "relayData": "- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.",
                    "success": "- true if the relayed call succeeded, false if it reverted"
                }
            },
            "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            }
        },
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "getGasAndDataLimits()": {
                "notice": "Return the Gas Limits and msg.data max size constants used by the Paymaster."
            },
            "getHubAddr()": {
                "notice": "return the relayHub of this contract."
            },
            "getRelayHubDeposit()": {
                "notice": "check current deposit on relay hub."
            },
            "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "notice": "This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state."
            },
            "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
                "notice": "This demonstrates how dapps can provide an off-chain signatures to relayed transactions."
            },
            "withdrawRelayHubDepositTo(uint256,address)": {
                "notice": "withdraw deposit from relayHub"
            }
        },
        "version": 1
    }
}
